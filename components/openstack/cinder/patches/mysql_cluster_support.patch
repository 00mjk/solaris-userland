This patchset is for bug:

22725850 - Cinder needs to support MySQL Cluster

This fixes the following aspects of Cinder:
1. Implementation of an oslo.db configuration parameter to specify the MySQL 
   storage engine (mysql_storage_engine).
2. Replacement of hardcoded SQL statements that set the engine to "InnoDB" 
   to the above configuration value.
3. Logic to handle SQL differences between MySQL InnoDB and MySQL Cluster (NDB). 
   This includes column lengths, constraints, foreign keys, and indexes.

This has not been committed upstream, but has been filed in launchpad:

https://bugs.launchpad.net/cinder/+bug/1564110 


--- cinder-2015.1.2/cinder/tests/test_migrations.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/tests/test_migrations.py	2016-03-29 17:10:56.573462129 -0600
@@ -27,11 +27,13 @@ from migrate.versioning import repositor
 from oslo_db.sqlalchemy import test_base
 from oslo_db.sqlalchemy import test_migrations
 from oslo_db.sqlalchemy import utils as db_utils
+from oslo_config import cfg
 import sqlalchemy
 
 from cinder.db import migration
 import cinder.db.sqlalchemy.migrate_repo
 
+CONF = cfg.CONF
 
 class MigrationsMixin(test_migrations.WalkVersionsMixin):
     """Test sqlalchemy-migrate migrations."""
@@ -850,8 +852,9 @@ class TestMysqlMigrations(test_base.MySQ
             "SELECT count(*) "
             "from information_schema.TABLES "
             "where TABLE_SCHEMA='openstack_citest' "
-            "and ENGINE!='InnoDB' "
-            "and TABLE_NAME!='migrate_version'")
+            "and ENGINE!='%(mysql_storage_engine)s' "
+            "and TABLE_NAME!='migrate_version'" %
+             dict(mysql_storage_engine=CONF.database.mysql_storage_engine))
         count = noninnodb.scalar()
         self.assertEqual(count, 0, "%d non InnoDB tables created" % count)
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/models.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/models.py	2016-03-29 17:10:56.573860608 -0600
@@ -36,7 +36,7 @@ class CinderBase(models.TimestampMixin,
                  models.ModelBase):
     """Base class for Cinder Models."""
 
-    __table_args__ = {'mysql_engine': 'InnoDB'}
+    __table_args__ = {'mysql_engine': CONF.database.mysql_storage_engine }
 
     # TODO(rpodolyaka): reuse models.SoftDeleteMixin in the next stage
     #                   of implementing of BP db-cleanup
@@ -488,7 +488,7 @@ class IscsiTarget(BASE, CinderBase):
     """Represents an iscsi target for a given host."""
     __tablename__ = 'iscsi_targets'
     __table_args__ = (schema.UniqueConstraint("target_num", "host"),
-                      {'mysql_engine': 'InnoDB'})
+                      {'mysql_engine': CONF.database.mysql_storage_engine })
     id = Column(Integer, primary_key=True)
     target_num = Column(Integer)
     host = Column(String(255))
@@ -576,7 +576,7 @@ class DriverInitiatorData(BASE, models.T
     __tablename__ = 'driver_initiator_data'
     __table_args__ = (
         schema.UniqueConstraint("initiator", "namespace", "key"),
-        {'mysql_engine': 'InnoDB'}
+        {'mysql_engine': CONF.database.mysql_storage_engine }
     )
     id = Column(Integer, primary_key=True, nullable=False)
     initiator = Column(String(255), index=True, nullable=False)
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/038_add_driver_initiator_data_table.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/038_add_driver_initiator_data_table.py	2016-03-29 17:10:56.574137554 -0600
@@ -18,6 +18,9 @@ from cinder.i18n import _LE
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -34,7 +37,7 @@ def upgrade(migrate_engine):
         Column('key', String(length=255), nullable=False),
         Column('value', String(length=255)),
         UniqueConstraint('initiator', 'namespace', 'key'),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/020_add_volume_admin_metadata_table.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/020_add_volume_admin_metadata_table.py	2016-03-29 17:10:56.574417302 -0600
@@ -18,6 +18,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -37,7 +40,7 @@ def upgrade(migrate_engine):
                nullable=False),
         Column('key', String(length=255)),
         Column('value', String(length=255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/040_add_volume_attachment.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/040_add_volume_attachment.py	2016-03-29 17:10:56.574694629 -0600
@@ -27,6 +27,9 @@ LOG = logging.getLogger(__name__)
 
 CREATED_AT = datetime.datetime.now()  # noqa
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     """Add volume multi attachment table."""
@@ -56,7 +59,7 @@ def upgrade(migrate_engine):
         Column('detach_time', DateTime),
         Column('attach_mode', String(length=36)),
         Column('attach_status', String(length=255)),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     try:
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/003_glance_metadata.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/003_glance_metadata.py	2016-03-29 17:10:56.574973087 -0600
@@ -20,6 +20,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -31,11 +34,11 @@ def upgrade(migrate_engine):
     Table('volumes',
           meta,
           Column('id', Integer(), primary_key=True, nullable=False),
-          mysql_engine='InnoDB')
+          mysql_engine=CONF.database.mysql_storage_engine)
     Table('snapshots',
           meta,
           Column('id', Integer(), primary_key=True, nullable=False),
-          mysql_engine='InnoDB')
+          mysql_engine=CONF.database.mysql_storage_engine)
     # Create new table
     volume_glance_metadata = Table(
         'volume_glance_metadata',
@@ -50,7 +53,7 @@ def upgrade(migrate_engine):
                ForeignKey('snapshots.id')),
         Column('key', String(255)),
         Column('value', Text),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     try:
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/008_add_backup.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/008_add_backup.py	2016-03-29 17:10:56.575243585 -0600
@@ -21,6 +21,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -48,7 +51,7 @@ def upgrade(migrate_engine):
         Column('service', String(length=255)),
         Column('size', Integer()),
         Column('object_count', Integer()),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     try:
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/015_drop_migrations_table.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/015_drop_migrations_table.py	2016-03-29 17:10:56.575465610 -0600
@@ -18,6 +18,9 @@ from cinder.i18n import _LE
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 TABLE_NAME = 'migrations'
 
@@ -52,7 +55,7 @@ def downgrade(migrate_engine):
         Column('new_instance_type_id', Integer),
         Column('instance_uuid', String(length=255), nullable=True),
         Column('status', String(length=255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/025_add_consistencygroup.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/025_add_consistencygroup.py	2016-03-29 17:10:56.575689167 -0600
@@ -22,6 +22,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -43,7 +46,7 @@ def upgrade(migrate_engine):
         Column('description', String(length=255)),
         Column('volume_type_id', String(length=255)),
         Column('status', String(length=255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8',
     )
 
@@ -69,7 +72,7 @@ def upgrade(migrate_engine):
         Column('name', String(length=255)),
         Column('description', String(length=255)),
         Column('status', String(length=255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8',
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/002_quota_class.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/002_quota_class.py	2016-03-29 17:10:56.575924797 -0600
@@ -21,6 +21,9 @@ from cinder.i18n import _LE
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -40,7 +43,7 @@ def upgrade(migrate_engine):
                           Column('resource',
                                  String(length=255)),
                           Column('hard_limit', Integer(), nullable=True),
-                          mysql_engine='InnoDB',
+                          mysql_engine=CONF.database.mysql_storage_engine,
                           mysql_charset='utf8',
                           )
 
@@ -65,7 +68,7 @@ def upgrade(migrate_engine):
                          Column('in_use', Integer(), nullable=False),
                          Column('reserved', Integer(), nullable=False),
                          Column('until_refresh', Integer(), nullable=True),
-                         mysql_engine='InnoDB',
+                         mysql_engine=CONF.database.mysql_storage_engine,
                          mysql_charset='utf8',
                          )
 
@@ -96,7 +99,7 @@ def upgrade(migrate_engine):
                                 String(length=255)),
                          Column('delta', Integer(), nullable=False),
                          Column('expire', DateTime(timezone=False)),
-                         mysql_engine='InnoDB',
+                         mysql_engine=CONF.database.mysql_storage_engine,
                          mysql_charset='utf8',
                          )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/032_add_volume_type_projects.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/032_add_volume_type_projects.py	2016-03-29 17:10:56.576131670 -0600
@@ -18,6 +18,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -44,7 +47,7 @@ def upgrade(migrate_engine):
         Column('project_id', String(length=255)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
         UniqueConstraint('volume_type_id', 'project_id', 'deleted'),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
     )
 
     try:
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/016_drop_sm_tables.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/016_drop_sm_tables.py	2016-03-29 17:10:56.576370016 -0600
@@ -20,6 +20,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -58,7 +61,7 @@ def downgrade(migrate_engine):
         Column('sr_uuid', String(length=255)),
         Column('sr_type', String(length=255)),
         Column('config_params', String(length=2047)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
@@ -71,7 +74,7 @@ def downgrade(migrate_engine):
         Column('id', Integer, primary_key=True, nullable=False),
         Column('label', String(length=255)),
         Column('description', String(length=255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
@@ -88,7 +91,7 @@ def downgrade(migrate_engine):
         Column('backend_id', Integer, ForeignKey('sm_backend_config.id'),
                nullable=False),
         Column('vdi_uuid', String(length=255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/010_add_transfers_table.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/010_add_transfers_table.py	2016-03-29 17:10:56.576569645 -0600
@@ -18,6 +18,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -39,7 +42,7 @@ def upgrade(migrate_engine):
         Column('salt', String(length=255)),
         Column('crypt_hash', String(length=255)),
         Column('expires_at', DateTime(timezone=False)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/009_add_snapshot_metadata_table.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/009_add_snapshot_metadata_table.py	2016-03-29 17:10:56.576767256 -0600
@@ -18,6 +18,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData()
@@ -37,7 +40,7 @@ def upgrade(migrate_engine):
                nullable=False),
         Column('key', String(length=255)),
         Column('value', String(length=255)),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     try:
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/018_add_qos_specs.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/018_add_qos_specs.py	2016-03-29 17:10:56.576967318 -0600
@@ -23,6 +23,9 @@ from cinder.i18n import _
 
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     """Add volume_type_rate_limit table."""
@@ -40,7 +43,7 @@ def upgrade(migrate_engine):
                ForeignKey('quality_of_service_specs.id')),
         Column('key', String(255)),
         Column('value', String(255)),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/017_add_encryption_information.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/017_add_encryption_information.py	2016-03-29 17:10:56.577171207 -0600
@@ -19,9 +19,11 @@ from sqlalchemy import Boolean, DateTime
 
 from cinder.i18n import _
 
-
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
 
 def upgrade(migrate_engine):
     meta = MetaData(bind=migrate_engine)
@@ -69,9 +71,9 @@ def upgrade(migrate_engine):
         # scheme unless each volume type is associated with at most one
         # encryption scheme.
         Column('volume_type_id', String(length=36),
-               ForeignKey(volume_types.c.id),
+               ForeignKey(volume_types.c.id, name='encryption_ibfk_1'),
                primary_key=True, nullable=False),
-        mysql_engine='InnoDB',
+        mysql_engine=CONF.database.mysql_storage_engine,
         mysql_charset='utf8'
     )
 
--- cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/001_cinder_init.py.orig	2016-03-29 17:09:39.000000000 -0600
+++ cinder-2015.1.2/cinder/db/sqlalchemy/migrate_repo/versions/001_cinder_init.py	2016-03-30 13:21:47.918291632 -0600
@@ -18,9 +18,16 @@ from sqlalchemy import Integer, MetaData
 
 from cinder.i18n import _
 
-
 LOG = logging.getLogger(__name__)
 
+from oslo_config import cfg
+
+CONF = cfg.CONF
+
+if CONF.database.mysql_storage_engine == "NDBCLUSTER":
+    db_string_length = 128
+else:
+    db_string_length = 255
 
 def define_tables(meta):
     migrations = Table(
@@ -30,14 +37,14 @@ def define_tables(meta):
         Column('deleted_at', DateTime),
         Column('deleted', Boolean),
         Column('id', Integer, primary_key=True, nullable=False),
-        Column('source_compute', String(length=255)),
-        Column('dest_compute', String(length=255)),
-        Column('dest_host', String(length=255)),
-        Column('status', String(length=255)),
-        Column('instance_uuid', String(length=255)),
+        Column('source_compute', String(length=db_string_length)),
+        Column('dest_compute', String(length=db_string_length)),
+        Column('dest_host', String(length=db_string_length)),
+        Column('status', String(length=db_string_length)),
+        Column('instance_uuid', String(length=db_string_length)),
         Column('old_instance_type_id', Integer),
         Column('new_instance_type_id', Integer),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     services = Table(
@@ -47,13 +54,13 @@ def define_tables(meta):
         Column('deleted_at', DateTime),
         Column('deleted', Boolean),
         Column('id', Integer, primary_key=True, nullable=False),
-        Column('host', String(length=255)),
-        Column('binary', String(length=255)),
-        Column('topic', String(length=255)),
+        Column('host', String(length=db_string_length)),
+        Column('binary', String(length=db_string_length)),
+        Column('topic', String(length=db_string_length)),
         Column('report_count', Integer, nullable=False),
         Column('disabled', Boolean),
-        Column('availability_zone', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('availability_zone', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     sm_flavors = Table(
@@ -63,9 +70,9 @@ def define_tables(meta):
         Column('deleted_at', DateTime),
         Column('deleted', Boolean),
         Column('id', Integer, primary_key=True, nullable=False),
-        Column('label', String(length=255)),
-        Column('description', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('label', String(length=db_string_length)),
+        Column('description', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     sm_backend_config = Table(
@@ -77,10 +84,10 @@ def define_tables(meta):
         Column('id', Integer, primary_key=True, nullable=False),
         Column('flavor_id', Integer, ForeignKey('sm_flavors.id'),
                nullable=False),
-        Column('sr_uuid', String(length=255)),
-        Column('sr_type', String(length=255)),
+        Column('sr_uuid', String(length=db_string_length)),
+        Column('sr_type', String(length=db_string_length)),
         Column('config_params', String(length=2047)),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     sm_volume = Table(
@@ -95,8 +102,8 @@ def define_tables(meta):
                nullable=False),
         Column('backend_id', Integer, ForeignKey('sm_backend_config.id'),
                nullable=False),
-        Column('vdi_uuid', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('vdi_uuid', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     snapshots = Table(
@@ -107,15 +114,15 @@ def define_tables(meta):
         Column('deleted', Boolean),
         Column('id', String(length=36), primary_key=True, nullable=False),
         Column('volume_id', String(length=36), nullable=False),
-        Column('user_id', String(length=255)),
-        Column('project_id', String(length=255)),
-        Column('status', String(length=255)),
-        Column('progress', String(length=255)),
+        Column('user_id', String(length=db_string_length)),
+        Column('project_id', String(length=db_string_length)),
+        Column('status', String(length=db_string_length)),
+        Column('progress', String(length=db_string_length)),
         Column('volume_size', Integer),
         Column('scheduled_at', DateTime),
-        Column('display_name', String(length=255)),
-        Column('display_description', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('display_name', String(length=db_string_length)),
+        Column('display_description', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     volume_types = Table(
@@ -125,8 +132,8 @@ def define_tables(meta):
         Column('deleted_at', DateTime),
         Column('deleted', Boolean),
         Column('id', Integer, primary_key=True, nullable=False),
-        Column('name', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('name', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     volume_metadata = Table(
@@ -138,9 +145,9 @@ def define_tables(meta):
         Column('id', Integer, primary_key=True, nullable=False),
         Column('volume_id', String(length=36), ForeignKey('volumes.id'),
                nullable=False),
-        Column('key', String(length=255)),
-        Column('value', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('key', String(length=db_string_length)),
+        Column('value', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     volume_type_extra_specs = Table(
@@ -152,9 +159,9 @@ def define_tables(meta):
         Column('id', Integer, primary_key=True, nullable=False),
         Column('volume_type_id', Integer, ForeignKey('volume_types.id'),
                nullable=False),
-        Column('key', String(length=255)),
-        Column('value', String(length=255)),
-        mysql_engine='InnoDB'
+        Column('key', String(length=db_string_length)),
+        Column('value', String(length=db_string_length)),
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     volumes = Table(
@@ -164,27 +171,27 @@ def define_tables(meta):
         Column('deleted_at', DateTime),
         Column('deleted', Boolean),
         Column('id', String(length=36), primary_key=True, nullable=False),
-        Column('ec2_id', String(length=255)),
-        Column('user_id', String(length=255)),
-        Column('project_id', String(length=255)),
-        Column('host', String(length=255)),
+        Column('ec2_id', String(length=db_string_length)),
+        Column('user_id', String(length=db_string_length)),
+        Column('project_id', String(length=db_string_length)),
+        Column('host', String(length=db_string_length)),
         Column('size', Integer),
-        Column('availability_zone', String(length=255)),
+        Column('availability_zone', String(length=db_string_length)),
         Column('instance_uuid', String(length=36)),
-        Column('mountpoint', String(length=255)),
-        Column('attach_time', String(length=255)),
-        Column('status', String(length=255)),
-        Column('attach_status', String(length=255)),
+        Column('mountpoint', String(length=db_string_length)),
+        Column('attach_time', String(length=db_string_length)),
+        Column('status', String(length=db_string_length)),
+        Column('attach_status', String(length=db_string_length)),
         Column('scheduled_at', DateTime),
         Column('launched_at', DateTime),
         Column('terminated_at', DateTime),
-        Column('display_name', String(length=255)),
-        Column('display_description', String(length=255)),
+        Column('display_name', String(length=db_string_length)),
+        Column('display_description', String(length=db_string_length)),
         Column('provider_location', String(length=256)),
         Column('provider_auth', String(length=256)),
         Column('snapshot_id', String(length=36)),
         Column('volume_type_id', Integer),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     quotas = Table(
@@ -194,10 +201,10 @@ def define_tables(meta):
         Column('updated_at', DateTime),
         Column('deleted_at', DateTime),
         Column('deleted', Boolean),
-        Column('project_id', String(length=255)),
-        Column('resource', String(length=255), nullable=False),
+        Column('project_id', String(length=db_string_length)),
+        Column('resource', String(length=db_string_length), nullable=False),
         Column('hard_limit', Integer),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
 
     iscsi_targets = Table(
@@ -208,10 +215,10 @@ def define_tables(meta):
         Column('deleted', Boolean),
         Column('id', Integer, primary_key=True, nullable=False),
         Column('target_num', Integer),
-        Column('host', String(length=255)),
+        Column('host', String(length=db_string_length)),
         Column('volume_id', String(length=36), ForeignKey('volumes.id'),
                nullable=True),
-        mysql_engine='InnoDB'
+        mysql_engine=CONF.database.mysql_storage_engine
     )
     return [sm_flavors,
             sm_backend_config,
@@ -266,7 +273,8 @@ def upgrade(migrate_engine):
         migrate_engine.execute(
             "ALTER DATABASE %s DEFAULT CHARACTER SET utf8" %
             migrate_engine.url.database)
-        migrate_engine.execute("ALTER TABLE %s Engine=InnoDB" % table)
+        migrate_engine.execute("ALTER TABLE %(db_table)s Engine=%(mysql_storage_engine)s" % 
+                               dict(db_table=table, mysql_storage_engine=CONF.database.mysql_storage_engine))
 
 
 def downgrade(migrate_engine):
