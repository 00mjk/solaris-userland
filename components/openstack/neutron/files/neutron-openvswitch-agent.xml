<?xml version="1.0" ?>
<!DOCTYPE service_bundle SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
<!--
 Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License"); you may
 not use this file except in compliance with the License. You may obtain
 a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 License for the specific language governing permissions and limitations
 under the License.

 NOTE:  This service manifest is not editable; its contents will
 be overwritten by package or patch operations, including
 operating system upgrade.  Make customizations in a different
 file.
-->
<service_bundle type="manifest" name="neutron-openvswitch-agent">

  <service version="1" type="service"
    name="application/openstack/neutron/neutron-openvswitch-agent">

    <dependency name='multiuser' grouping='require_all' restart_on='error'
      type='service'>
      <service_fmri value='svc:/milestone/multi-user:default' />
    </dependency>

    <dependency name='upgrade' grouping='require_all' restart_on='none'
      type='service'>
      <service_fmri
        value='svc:/application/openstack/neutron/neutron-upgrade' />
    </dependency>

    <dependency name='openvswitch' grouping='require_all' restart_on='none'
      type='service'>
      <service_fmri
        value='svc:/application/openvswitch/vswitch-server:default' />
    </dependency>

    <dependency name='ntp' grouping='optional_all' restart_on='none'
      type='service'>
      <service_fmri value='svc:/network/ntp'/>
    </dependency>

    <dependency name='rabbitmq' grouping='optional_all' restart_on='none'
      type='service'>
      <service_fmri value='svc:/application/rabbitmq'/>
    </dependency>

    <logfile_attributes permissions='600'/>

    <exec_method timeout_seconds="60" type="method" name="start"
      exec="/lib/svc/method/neutron-openvswitch-agent %m %{config/config_path} %{config/ovs_config_path}">
      <method_context>
        <method_credential user='neutron' group='neutron' />
      </method_context>
    </exec_method>
    <exec_method timeout_seconds="60" type="method" name="stop"
      exec=":kill"/>

    <instance name='default' enabled='false'>
      <!-- to start/stop/refresh the service -->
      <property_group name='general' type='framework'>
        <propval name='action_authorization' type='astring'
                 value='solaris.smf.manage.neutron' />
        <propval name='value_authorization' type='astring'
                 value='solaris.smf.value.neutron' />
      </property_group>

      <property_group name='config' type='application'>
        <propval name='config_path' type='astring'
          value='/etc/neutron/neutron.conf'/>
        <propval name='ovs_config_path' type='astring'
          value='/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini'/>
      </property_group>
    </instance>

    <template>
      <common_name>
        <loctext xml:lang="C">
          OpenStack Neutron Open vSwitch Agent 
        </loctext>
      </common_name>
      <description>
        <loctext xml:lang="C">
          neutron-openvswitch-agent is a server daemon that uses an Open vSwitch to
	  create L2 connectivity for instances/datalinks on the node it is running.
        </loctext>
      </description>
      <pg_pattern name='config' type='application' required='true'>
        <prop_pattern name='config_path' type='astring'
          required='true'>
          <common_name>
            <loctext xml:lang='C'>
              Filesystem path to Neutron Open vSwitch agent configuration file
            </loctext>
          </common_name>
        </prop_pattern>
      </pg_pattern>
    </template>
  </service>
</service_bundle>
