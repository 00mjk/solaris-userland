*** neutron-2014.2.2/neutron/agent/l3_agent.py	2015-02-05 07:45:33.000000000 -0800
--- NEW/neutron/agent/l3_agent.py	2015-02-06 11:10:53.164349168 -0800
***************
*** 1,5 ****
--- 1,7 ----
  # Copyright 2012 VMware, Inc.  All rights reserved.
  #
+ # Copyright (c) 2014, 2015, Oracle and/or its affiliates. All rights reserved.
+ #
  #    Licensed under the Apache License, Version 2.0 (the "License"); you may
  #    not use this file except in compliance with the License. You may obtain
  #    a copy of the License at
***************
*** 13,18 ****
--- 15,21 ----
  #    under the License.
  #
  
+ import platform
  import sys
  
  import datetime
***************
*** 33,38 ****
--- 36,42 ----
  from neutron.agent.linux import iptables_manager
  from neutron.agent.linux import ra
  from neutron.agent import rpc as agent_rpc
+ from neutron.agent.solaris import ipfilters_manager
  from neutron.common import config as common_config
  from neutron.common import constants as l3_constants
  from neutron.common import ipv6_utils
***************
*** 257,266 ****
          # Invoke the setter for establishing initial SNAT action
          self.router = router
          self.ns_name = NS_PREFIX + router_id if use_namespaces else None
!         self.iptables_manager = iptables_manager.IptablesManager(
!             root_helper=root_helper,
!             use_ipv6=use_ipv6,
!             namespace=self.ns_name)
          self.snat_iptables_manager = None
          self.routes = []
          # DVR Data
--- 261,274 ----
          # Invoke the setter for establishing initial SNAT action
          self.router = router
          self.ns_name = NS_PREFIX + router_id if use_namespaces else None
!         if platform.system() == "SunOS":
!             self.ipfilters_manager = ipfilters_manager.IPfiltersManager()
!             self.iptables_manager = None
!         else:
!             self.iptables_manager = iptables_manager.IptablesManager(
!                 root_helper=root_helper,
!                 use_ipv6=use_ipv6,
!                 namespace=self.ns_name)
          self.snat_iptables_manager = None
          self.routes = []
          # DVR Data
***************
*** 2049,2054 ****
--- 2057,2064 ----
      _register_opts(cfg.CONF)
      common_config.init(sys.argv[1:])
      config.setup_logging()
+     if platform.system() == "SunOS":
+         manager = 'neutron.agent.evs_l3_agent.EVSL3NATAgent'
      server = neutron_service.Service.create(
          binary='neutron-l3-agent',
          topic=topics.L3_AGENT,
