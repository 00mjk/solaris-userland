Various testing fixes:

  - Tests involving large (5GB+) bodies are mocked, but on 32-bit python,
    len() is limited to returning a ssize_t, which can represent 2GB.

  - Solaris doesn't yet support syslog logging to /dev/log.

The first, while potentially useful elsewhere, is really only an issue on
Solaris because Linux runs almost exclusively 64-bit, which makes this a
non-issue.  The last is Solaris-only -- though clearly a similar problem
exists on MacOS -- and we will want to fix this in our Python.

diff --git a/test/unit/__init__.py b/test/unit/__init__.py
--- a/test/unit/__init__.py
+++ b/test/unit/__init__.py
@@ -450,7 +450,7 @@ def fake_http_connect(*code_iter, **kwar
                 else:
                     etag = '"68b329da9893e34099c7d8ad5cb9c940"'
 
-            headers = {'content-length': len(self.body),
+            headers = {'content-length': self.body.__len__(),
                        'content-type': 'x-application/test',
                        'x-timestamp': self.timestamp,
                        'last-modified': self.timestamp,
diff --git a/test/unit/proxy/test_server.py b/test/unit/proxy/test_server.py
--- a/test/unit/proxy/test_server.py
+++ b/test/unit/proxy/test_server.py
@@ -2876,6 +2876,9 @@ class TestObjectController(unittest.Test
 
             class LargeResponseBody(object):
 
+                def __nonzero__(self):
+                    return True
+
                 def __len__(self):
                     return MAX_FILE_SIZE + 1
 
@@ -3006,6 +3009,9 @@ class TestObjectController(unittest.Test
 
             class LargeResponseBody(object):
 
+                def __nonzero__(self):
+                    return True
+
                 def __len__(self):
                     return MAX_FILE_SIZE + 1
 
diff --git a/test/unit/common/test_utils.py b/test/unit/common/test_utils.py
--- a/test/unit/common/test_utils.py
+++ b/test/unit/common/test_utils.py
@@ -437,7 +437,8 @@ class TestUtils(unittest.TestCase):
             }, 'server', log_route='server')
             expected_args = [((), {'address': '/dev/log',
                                    'facility': orig_sysloghandler.LOG_LOCAL3})]
-            if not os.path.exists('/dev/log') or \
+            if sys.platform == 'sunos5' or \
+                    not os.path.exists('/dev/log') or \
                     os.path.isfile('/dev/log') or \
                     os.path.isdir('/dev/log'):
                 # Since socket on OSX is in /var/run/syslog, there will be
