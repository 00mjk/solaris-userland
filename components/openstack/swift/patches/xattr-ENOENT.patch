This patch is not appropriate for upstream, since the problem doesn't exist
on other platforms.  RFE 23579927 has been filed for Solaris to be able to
distinguish between a non-existent file an a missing extended attribute.

--- swift-2.7.0/swift/obj/diskfile.py	Fri Mar 25 02:42:55 2016
+++ swift-2.7.0/swift/obj/diskfile.py	Tue Jun 14 09:10:30 2016
@@ -127,7 +127,18 @@
                 logging.exception(msg)
                 raise DiskFileXattrNotSupported(e)
         if e.errno == errno.ENOENT:
-            raise DiskFileNotExist()
+            # Solaris returns ENOENT either if the file doesn't exist or if the
+            # attribute doesn't exist.  If we've been passed an fd, then we
+            # already successfully opened the file, so the ENOENT refers to the
+            # missing attribute.  But if we were passed a filename, then the
+            # error is ambiguous, so we test explicitly for the file's existence
+            # and raise DiskFileNotExist only if it doesn't.
+            if isinstance(fd, basestring):
+                try:
+                    os.stat(fd)
+                except OSError as e:
+                    if e.errno == errno.ENOENT:
+                        raise DiskFileNotExist()
         # TODO: we might want to re-raise errors that don't denote a missing
         # xattr here.  Seems to be ENODATA on linux and ENOATTR on BSD/OSX.
     return pickle.loads(metadata)
