Use libv12n to find virtualization environment instead of asking systemd

Need to submit upstream

--- a/configure.ac	2017-11-07 13:36:12.640843834 -0800
+++ b/configure.ac	2017-11-07 13:37:12.596600866 -0800
@@ -65,6 +65,7 @@
 
 AC_CHECK_LIBM
 AC_SUBST(LIBM)
+AC_CHECK_LIB(v12n, v12n_get_current_env)
 
 # IBus support
 IBUS_REQUIRED_VERSION=1.5.2
--- a/panels/info/cc-info-panel.c	2017-11-07 13:37:46.237124276 -0800
+++ b/panels/info/cc-info-panel.c	2017-11-07 13:39:28.478434856 -0800
@@ -42,6 +42,10 @@
 #include <gdk/gdkx.h>
 #endif
 
+#ifdef HAVE_LIBV12N
+#include <libv12n.h>
+#endif
+
 #include "gsd-disk-space-helper.h"
 
 /* Autorun options */
@@ -760,6 +764,10 @@
   const char *id;
   const char *display;
 } const virt_tech[] = {
+  { "kernel-zone", "Kernel Zone" },
+  { "logical-domain", "Logical Domain" },
+  { "non-global-zone", "Non-Global Zone" },
+  { "virtualbox", "VirtualBox" },
   { "kvm", "KVM" },
   { "qemu", "QEmu" },
   { "vmware", "VMware" },
@@ -808,14 +816,32 @@
 static void
 info_panel_setup_virt (CcInfoPanel  *self)
 {
+  char *str = NULL;
+
+#ifdef HAVE_LIBV12N
+  v12n_env_t *env;
+  char *name;
+
+  env = v12n_get_current_env ();
+  if (env == NULL)
+    {
+      g_debug (" v12n_get_current_env failed, bailing: %s", strerror(errno));
+      goto bail;
+    }
+
+  name = v12n_get_env_prop (env, V12N_PROP_NAME);
+  if (name != NULL)
+    {
+      str = g_strdup (name);
+      free (name);
+    }
+  v12n_free_env(env);
+#else /* systemd */
   GError *error = NULL;
   GDBusProxy *systemd_proxy;
   GVariant *variant;
   GVariant *inner;
-  char *str;
 
-  str = NULL;
-
   systemd_proxy = g_dbus_proxy_new_for_bus_sync (G_BUS_TYPE_SYSTEM,
                                                  G_DBUS_PROXY_FLAGS_NONE,
                                                  NULL,
@@ -852,6 +878,7 @@
   g_variant_unref (variant);
 
   g_object_unref (systemd_proxy);
+#endif
 
 bail:
   set_virtualization_label (self, str);
