From ecf9267a24b2c3c0cd211dbdfa9ef2232511972a Mon Sep 17 00:00:00 2001
From: Federico Mena Quintero <federico@gnome.org>
Date: Tue, 27 Jun 2017 17:12:51 -0500
Subject: bgo#783835 - Don't divide by zero in box_blur_line() for gaussian
 blurs

We were making the decision to use box blurs, instead of a true
Gaussian kernel, based on the size of *both* x and y dimensions.  Do
them individually instead.

--- a/rsvg-filter.c	2017-08-15 08:30:17.397139621 -0700
+++ b/rsvg-filter.c	2017-08-15 08:34:28.944910073 -0700
@@ -1330,6 +1330,8 @@
     gint  trail;   /* This marks the pixel BEHIND the last 1 in the
                       kernel; it's the pixel to remove from the accumulator. */
     gint  *ac;     /* Accumulator for each channel                           */
+  
+    g_assert (box_width > 0);
 
     ac = g_new (gint, bpp);
 
@@ -1688,7 +1690,6 @@
                        gdouble sx,
                        gdouble sy)
 {
-    gboolean use_box_blur;
     gint width, height;
     cairo_format_t in_format, out_format;
     gint in_stride;
@@ -1732,14 +1733,6 @@
     if (sy < 0.0)
         sy = 0.0;
 
-    /* For small radiuses, use a true gaussian kernel; otherwise use three box blurs with
-     * clever offsets.
-     */
-    if (sx < 10.0 && sy < 10.0)
-        use_box_blur = FALSE;
-    else
-        use_box_blur = TRUE;
-
     /* Bail out by just copying? */
     if ((sx == 0.0 && sy == 0.0)
         || sx > 1000 || sy > 1000) {
@@ -1759,7 +1752,17 @@
         int y;
         guchar *row_buffer = NULL;
         guchar *row1, *row2;
+        gboolean use_box_blur;
 
+	/* For small radiuses, use a true gaussian kernel; otherwise use three
+	 * box blurs with clever offsets 
+	 */
+
+        if (sx < 10.0)
+            use_box_blur = FALSE;
+        else
+            use_box_blur = TRUE;
+
         if (use_box_blur) {
             box_width = compute_box_blur_width (sx);
 
@@ -1814,7 +1817,17 @@
         guchar *col_buffer;
         guchar *col1, *col2;
         int x;
+        gboolean use_box_blur;
 
+	/* For small radiuses, use a true gaussian kernel; otherwise use three
+	 * box blurs with clever offsets
+	 */
+
+        if (sy < 10.0)
+            use_box_blur = FALSE;
+        else
+            use_box_blur = TRUE;
+
         /* twice the size so we can have the source pixels and the blurred pixels */
         col_buffer = g_new (guchar, height * bpp * 2);
         col1 = col_buffer;
