This contains fixes for two issues

a)
https://rt.cpan.org/Public/Bug/Display.html?id=111558
https://github.com/DBD-SQLite/DBD-SQLite/commit/008e1291d5b3a8d1787433e33e6ebd13ed63af05

and partially

b)
https://rt.cpan.org/Public/Bug/Display.html?id=111942
https://github.com/DBD-SQLite/DBD-SQLite/commit/3eb1a184200be3868a58d1586cf49b8f81a22648
https://github.com/DBD-SQLite/DBD-SQLite/commit/f679a6caf73c5cbc3a189acd754b660e55662e45

Both fixed in 1.50

diff --git a/t/virtual_table/11_filecontent_fulltext.t b/t/virtual_table/11_filecontent_fulltext.t
index f1c5f64..804fafc 100644
--- a/t/virtual_table/11_filecontent_fulltext.t
+++ b/t/virtual_table/11_filecontent_fulltext.t
@@ -31,13 +31,21 @@ my @tests = (
                           lib/DBD/SQLite/VirtualTable/FileContent.pm
                           lib/DBD/SQLite/VirtualTable/PerlData.pm
                           t/lib/Test.pm]],
+);
+
+# The last set of tests tries to use enhanced query syntax. But when
+# SQLite is compiled without it's support, the word 'AND' is taken
+# literally.
+if (grep /ENABLE_FTS3_PARENTHESIS/, DBD::SQLite::compile_options()) {
+  push @tests, (
   ['"use strict" AND "use warnings"' => qw[inc/Test/NoWarnings.pm
                                            lib/DBD/SQLite/Constants.pm
                                            lib/DBD/SQLite/VirtualTable.pm
                                            lib/DBD/SQLite/VirtualTable/FileContent.pm
                                            lib/DBD/SQLite/VirtualTable/PerlData.pm
                                            ]],
-);
+  );
+}
 
 plan tests => 3 + 3 * @tests;
 
--- DBD-SQLite-1.48/t/51_table_column_metadata.t	2016-02-12 10:12:28.334212852 +0100
+++ DBD-SQLite-1.48/t/51_table_column_metadata.t	2016-02-12 10:11:48.355066773 +0100
@@ -6,8 +6,16 @@ BEGIN {
 	$^W = 1;
 }
 
-use t::lib::Test qw/connect_ok @CALL_FUNCS/;
+use DBD::SQLite;
 use Test::More;
+
+BEGIN {
+	if (!grep /^ENABLE_COLUMN_METADATA/, DBD::SQLite::compile_options()) {
+		plan skip_all => "Column metadata is disabled for this DBD::SQLite";
+	}
+}
+
+use t::lib::Test qw/connect_ok @CALL_FUNCS/;
 use Test::NoWarnings;
 
 plan tests => 16 * @CALL_FUNCS + 1;
