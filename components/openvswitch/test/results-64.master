make[1]: Entering directory '$(@D)'
/usr/gnu/bin/make  check-recursive
make[2]: Entering directory '$(@D)'
Making check in datapath
make[3]: Entering directory '$(@D)/datapath'
make[4]: Entering directory '$(@D)/datapath'
make[4]: Nothing to be done for 'check-am'.
make[4]: Leaving directory '$(@D)/datapath'
make[3]: Leaving directory '$(@D)/datapath'
make[3]: Entering directory '$(@D)'
/usr/gnu/bin/make  tests/flowgen.pl tests/testpki-cacert.pem tests/testpki-cert.pem tests/testpki-privkey.pem tests/testpki-req.pem tests/testpki-cert2.pem tests/testpki-privkey2.pem tests/testpki-req2.pem
make[4]: Entering directory '$(@D)'
make[4]: Nothing to be done for '$(SOURCE_DIR)/tests/flowgen.pl'.
rm -f tests/pki/stamp
rm -rf tests/pki
/bin/bash $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log init
Creating controllerca...
Creating switchca...
/bin/bash $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log req+sign tests/pki/test


/bin/bash $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log req+sign tests/pki/test2


: > tests/pki/stamp
cp tests/pki/switchca/cacert.pem tests/testpki-cacert.pem
cp tests/pki/test-cert.pem tests/testpki-cert.pem
cp tests/pki/test-privkey.pem tests/testpki-privkey.pem
cp tests/pki/test-req.pem tests/testpki-req.pem
cp tests/pki/test2-cert.pem tests/testpki-cert2.pem
cp tests/pki/test2-privkey.pem tests/testpki-privkey2.pem
cp tests/pki/test2-req.pem tests/testpki-req2.pem
make[4]: Leaving directory '$(@D)'
/usr/gnu/bin/make  check-local
make[4]: Entering directory '$(@D)'
/bin/bash '$(SOURCE_DIR)/tests/testsuite' -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests 
## ----------------------------- ##
## openvswitch 2.3.2 test suite. ##
## ----------------------------- ##

bfd

  1: bfd - basic config on different bridges         ok
  2: bfd - Verify tunnel down detection              ok
  3: bfd - concatenated path down                    ok
  4: bfd - Edit the Min Tx/Rx values                 ok
  5: bfd - check_tnl_key                             FAILED (bfd.at:226)
  6: bfd - bfd decay                                 ok
  7: bfd - bfd forwarding_if_rx - bfd on one side    ok
  8: bfd - bfd forwarding_if_rx - bfd on both sides  ok
  9: bfd - bfd forwarding_if_rx - with bfd decay     ok
 10: bfd - bfd forwarding_if_rx - demand_rx_bfd      ok
 11: bfd - flap_count                                ok

cfm

 12: cfm - check update ovsdb 1                      FAILED (cfm.at:50)
 13: cfm - check update ovsdb 2                      ok
 14: cfm - demand mode                               ok
 15: cfm - demand_rx_ccm                             ok
 16: cfm - flap_count                                ok
 17: cfm - fault_override                            ok

lacp

 18: lacp - config                                   ok
 19: lacp - multi port config                        ok
 20: lacp - negotiation                              ok

library unit tests

 21: test flow extractor                             ok
 22: test TCP/IP checksumming                        ok
 23: test hash functions                             ok
 24: test hash map                                   ok
 25: test hash index                                 ok
 26: test atomic operations                          ok
 27: test linked lists                               ok
 28: test packet library                             ok
 29: test SHA-1                                      ok
 30: test type properties                            ok
 31: test strtok_r bug fix                           FAILED (library.at:51)
 32: test byte order conversion                      ok
 33: test random number generator                    ok
 34: ctz() function                                  ok
 35: clz() function                                  ok
 36: round_up_pow2() function                        ok
 37: round_down_pow2() function                      ok
 38: count_1bits() function                          ok
 39: log_2_floor() function                          ok
 40: bitwise_copy() function                         ok
 41: bitwise_zero() function                         ok
 42: bitwise_one() function                          ok
 43: bitwise_is_all_zeros() function                 ok
 44: ovs_scan() function                             ok
 45: test unix socket, short pathname - C            ok
 46: test unix socket, long pathname - C             ok
 47: test unix socket, short pathname - Python       ok
 48: test unix socket, long pathname - Python        ok
 49: ovs_assert                                      ok
 50: snprintf                                        ok

heap library

 51: heap library -- insert delete same order        ok
 52: heap library -- insert delete reverse order     ok
 53: heap library -- insert delete every order       ok
 54: heap library -- insert delete same order with dups ok
 55: heap library -- raw insert                      ok
 56: heap library -- raw delete                      ok

bundle link selection

 57: hrw bundle link selection                       ok
 58: active_backup bundle link selection             ok
 59: hrw bundle single link selection                ok
 60: hrw bundle no link selection                    ok
 61: bundle action missing argument                  ok
 62: bundle action bad fields                        ok
 63: bundle action bad algorithm                     ok
 64: bundle action bad slave type                    ok
 65: bundle action bad slave delimiter               ok

flow classifier unit tests

 66: flow classifier - empty                         ok
 67: flow classifier - destroy null                  ok
 68: flow classifier - single rule                   ok
 69: flow classifier - rule replacement              ok
 70: flow classifier - many rules in one list        ok
 71: flow classifier - many rules in one table       ok
 72: flow classifier - many rules in two tables      ok
 73: flow classifier - many rules in five tables     ok

miniflow unit tests

 74: miniflow - miniflow                             ok
 75: miniflow - minimask_has_extra                   ok
 76: miniflow - minimask_combine                     ok

flow classifier lookup segmentation

 77: flow classifier - lookup segmentation           ok

flow classifier prefix lookup

 78: flow classifier - prefix lookup                 ok

struct alignment checker unit tests

 79: check struct tail padding                       ok
 80: check struct internal alignment                 ok
 81: check struct declared size                      ok
 82: check wrong struct's declared size              ok

daemon unit tests - C

 83: daemon                                          ok
 84: daemon --monitor                                ok
 85: daemon --detach                                 ok
 86: daemon --detach --monitor                       ok
 87: daemon --detach startup errors                  ok
 88: daemon --detach --monitor startup errors        ok

daemon unit tests - Python

 89: daemon - Python                                 ok
 90: daemon --monitor - Python                       ok
 91: daemon --monitor restart exit code - Python     ok
 92: daemon --detach - Python                        ok
 93: daemon --detach --monitor - Python              ok
 94: daemon --detach startup errors - Python         ok
 95: daemon --detach --monitor startup errors - Python ok
 96: daemon --detach closes standard fds - Python    ok
 97: daemon --detach --monitor closes standard fds   ok

OpenFlow actions

 98: OpenFlow 1.0 action translation                 ok
 99: OpenFlow 1.1 action translation                 ok
100: OpenFlow 1.1 instruction translation            ok
101: ofp-actions - inconsistent MPLS actions         ok

ofp-print

102: empty                                           ok
103: too short                                       ok
104: wrong OpenFlow version                          ok
105: truncated message                               ok
106: message only uses part of buffer                ok
107: OFPT_HELLO - ordinary                           ok
108: OFPT_HELLO with extra data                      ok
109: OFPT_HELLO with version bitmap                  ok
110: OFPT_HELLO with version bitmap and extra data   ok
111: OFPT_HELLO with higher than supported version   ok
112: OFPT_HELLO with contradictory version bitmaps   ok
113: OFPT_ECHO_REQUEST, empty payload                ok
114: OFPT_ECHO_REQUEST, 5-byte payload               ok
115: OFPT_ECHO_REPLY, empty payload                  ok
116: OFPT_ECHO_REPLY, 5-byte payload                 ok
117: OFPT_FEATURES_REQUEST                           ok
118: OFPT_FEATURES_REPLY - OF1.0                     ok
119: OFPT_FEATURES_REPLY cut off mid-port - OF1.0    ok
120: OFPT_FEATURES_REPLY - OF1.1                     ok
121: OFPT_FEATURES_REPLY cut off mid-port - OF1.1    ok
122: OFPT_FEATURES_REPLY - OF1.2                     ok
123: OFPT_FEATURES_REPLY cut off mid-port - OF1.2    ok
124: OFPT_FEATURES_REPLY - OF1.3                     ok
125: OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 ok
126: OFPT_GET_CONFIG_REQUEST                         ok
127: OFPT_GET_CONFIG_REPLY, most common form         ok
128: OFPT_GET_CONFIG_REPLY, frags and miss_send_len  ok
129: OFPT_PACKET_IN - OF1.0                          ok
130: OFPT_PACKET_IN - OF1.0, with hex output of packet data ok
131: OFPT_PACKET_IN - OF1.1                          ok
132: OFPT_PACKET_IN - OF1.2                          ok
133: OFPT_PACKET_IN - OF1.2, with hex output of packet data ok
134: OFPT_PACKET_IN - OF1.3                          ok
135: OFPT_PACKET_IN - OF1.3, with hex output of packet data ok
136: OFPT_FLOW_REMOVED - OF1.0                       ok
137: OFPT_FLOW_REMOVED - OF1.2                       ok
138: OFPT_FLOW_REMOVED - OF1.3                       ok
139: OFPT_PORT_STATUS - OF1.0                        ok
140: OFPT_PORT_STATUS - OF1.1                        ok
141: OFPT_PORT_STATUS - OF1.4                        ok
142: OFPT_PACKET_OUT - OF1.0                         ok
143: OFPT_PACKET_OUT - OF1.0, with packet            ok
144: OFPT_PACKET_OUT - OF1.0, with hex output of packet data ok
145: OFPT_PACKET_OUT - OF1.1                         ok
146: OFPT_PACKET_OUT - OF1.1, with packet            ok
147: OFPT_FLOW_MOD - OF1.0 - low verbosity           ok
148: OFPT_FLOW_MOD - OF1.1 - low verbosity           ok
149: OFPT_FLOW_MOD - OF1.2 - low verbosity           ok
150: OFPT_FLOW_MOD - OF1.0 - high verbosity          ok
151: OFPT_FLOW_MOD - OF1.2 - low verbosity           ok
152: OFPT_FLOW_MOD - OF1.3 - flags - low verbosity   ok
153: OFPT_FLOW_MOD - OF1.2 - set-field ip_src        ok
154: OFPT_FLOW_MOD - OF1.2 - set-field ip_dst        ok
155: OFPT_FLOW_MOD - OF1.2 - set-field sctp_src      ok
156: OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst      ok
157: OFPT_FLOW_MOD - OF1.3 - meter                   ok
158: OFPT_FLOW reply - OF1.2 - set-field ip_src      ok
159: OFPT_FLOW reply - OF1.2 - set-field ip_dst      ok
160: OFPT_FLOW reply - OF1.2 - set-field sctp_src    ok
161: OFPT_FLOW reply - OF1.2 - set-field sctp_dst    ok
162: OFPT_PORT_MOD - OF1.0                           ok
163: OFPT_PORT_MOD - OF1.1                           ok
164: OFPT_PORT_MOD - OF1.2                           ok
165: OFPT_PORT_MOD - OF1.3                           ok
166: OFPT_PORT_MOD - OF1.4                           ok
167: OFPT_TABLE_MOD - OF1.1                          ok
168: OFPT_TABLE_MOD - OF1.2                          ok
169: OFPT_TABLE_MOD - OF1.3                          ok
170: OFPT_TABLE_MOD - OF1.4                          ok
171: OFPST_DESC request                              ok
172: OFPST_DESC reply                                ok
173: OFPST_FLOW request - OF1.0                      ok
174: OFPST_FLOW request - OF1.2                      ok
175: OFPST_FLOW request - OF1.3                      ok
176: OFPST_FLOW reply - OF1.0                        ok
177: OFPST_FLOW reply - OF1.2                        ok
178: OFPST_AGGREGATE request - OF1.0                 ok
179: OFPST_AGGREGATE request - OF1.2                 ok
180: OFPST_AGGREGATE request - OF1.3                 ok
181: OFPST_AGGREGATE reply - OF1.0                   ok
182: OFPST_AGGREGATE reply - OF1.2                   ok
183: OFPST_AGGREGATE reply - OF1.3                   ok
184: OFPST_TABLE request - OF1.0                     ok
185: OFPST_TABLE request - OF1.1                     ok
186: OFPST_TABLE request - OF1.2                     ok
187: OFPST_TABLE request - OF1.3                     ok
188: OFPST_TABLE reply - OF1.0                       ok
189: OFPST_TABLE reply - OF1.2                       ok
190: OFPST_TABLE reply - OF1.3                       ok
191: OFPST_PORT request - 1.0                        ok
192: OFPST_PORT request - 1.1                        ok
193: OFPST_PORT request - 1.2                        ok
194: OFPST_PORT request - 1.3                        ok
195: OFPST_PORT reply - OF1.0                        ok
196: OFPST_PORT reply - OF1.2                        ok
197: OFPST_PORT reply - OF1.3                        ok
198: OFPST_PORT reply - OF1.4                        ok
199: OFPST_QUEUE request - OF1.0                     ok
200: OFPST_QUEUE request - OF1.1                     ok
201: OFPST_QUEUE request - OF1.2                     ok
202: OFPST_QUEUE request - OF1.3                     ok
203: OFPST_QUEUE reply - OF1.0                       ok
204: OFPST_QUEUE reply - OF1.1                       ok
205: OFPST_QUEUE reply - OF1.2                       ok
206: OFPST_QUEUE reply - OF1.3                       ok
207: OFPST_QUEUE reply - OF1.4                       ok
208: OFPST_GROUP request                             ok
209: OFPST_GROUP reply - OF1.1                       ok
210: OFPST_GROUP reply - OF1.3                       ok
211: OFPST_GROUP_DESC request - OF1.1                ok
212: OFPST_GROUP_DESC request - OF1.5                ok
213: OFPST_GROUP_DESC reply                          ok
214: OFPST_GROUP_FEATURES request                    ok
215: OFPST_GROUP_FEATURES reply                      ok
216: OFPST_PORT_DESC request - OF1.0                 ok
217: OFPST_PORT_DESC request - OF1.5                 ok
218: OFPST_PORT_DESC reply - OF1.0                   ok
219: OFPST_PORT_DESC reply - OF1.4                   ok
220: OFPT_METER_MOD request - OF1.3                  ok
221: OFPT_METER_MOD request - bad band - OF1.3       ok
222: OFPT_METER_MOD request - bad command - OF1.3    ok
223: OFPT_METER_MOD request - bad flags - OF1.3      ok
224: OFPST_METER request - OF1.3                     ok
225: OFPST_METER_CONFIG request - OF1.3              ok
226: OFPST_METER_FEATURES request - OF1.3            ok
227: OFPST_METER_FEATURES reply - OF1.3              ok
228: OFPST_METER_CONFIG reply - OF1.3                ok
229: OFPST_METER reply - OF1.3                       ok
230: OFPST_TABLE_FEATURES request - OF1.3            ok
231: OFPT_BARRIER_REQUEST - OF1.0                    ok
232: OFPT_BARRIER_REQUEST - OF1.1                    ok
233: OFPT_BARRIER_REQUEST - OF1.2                    ok
234: OFPT_BARRIER_REQUEST - OF1.3                    ok
235: OFPT_BARRIER_REPLY - OF1.0                      ok
236: OFPT_BARRIER_REPLY - OF1.1                      ok
237: OFPT_BARRIER_REPLY - OF1.2                      ok
238: OFPT_BARRIER_REPLY - OF1.3                      ok
239: OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0           ok
240: OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2           ok
241: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0             ok
242: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2             ok
243: OFPT_SET_ASYNC - OF1.3                          ok
244: OFPT_ROLE_REQUEST - OF1.2                       ok
245: OFPT_ROLE_REQUEST - nochange - OF1.2            ok
246: NXT_ROLE_REQUEST                                ok
247: OFPT_ROLE_REPLY - OF1.2                         ok
248: NXT_ROLE_REPLY                                  ok
249: OFP_ROLE_STATUS - master, experimenter - OF1.4  ok
250: OFP_ROLE_STATUS - master, config - OF1.4        ok
251: OFP_ROLE_STATUS - master, config,generation - OF1.4 ok
252: NXT_SET_PACKET_IN                               ok
253: NXT_PACKET_IN                                   ok
254: NXT_PACKET_IN, with hex output of packet data   ok
255: NXT_SET_ASYNC_CONFIG                            ok
256: NXT_SET_CONTROLLER_ID                           ok
257: NXT_FLOW_MONITOR_CANCEL                         ok
258: NXT_FLOW_MONITOR_PAUSED                         ok
259: NXT_FLOW_MONITOR_RESUMED                        ok
260: NXT_SET_FLOW_FORMAT                             ok
261: NXT_FLOW_MOD, low verbosity                     ok
262: NXT_FLOW_MOD, high verbosity                    ok
263: OFPT_GROUP_MOD                                  ok
264: NXT_FLOW_REMOVED                                ok
265: NXT_FLOW_MOD_TABLE_ID                           ok
266: NXST_FLOW request                               ok
267: NXST_FLOW reply                                 ok
268: NXST_AGGREGATE request                          ok
269: NXST_AGGREGATE reply                            ok
270: NXST_FLOW_MONITOR request                       ok
271: NXST_FLOW_MONITOR reply                         ok
272: OFPT_BUNDLE_CONTROL - OPEN_REQUEST              ok
273: OFPT_BUNDLE_CONTROL - OPEN_REQUEST              ok
274: OFPT_BUNDLE_CONTROL - OPEN_REQUEST              ok
275: OFPT_BUNDLE_CONTROL - OPEN_REPLY                ok
276: OFPT_BUNDLE_CONTROL - CLOSE_REQUEST             ok
277: OFPT_BUNDLE_CONTROL - CLOSE_REPLY               ok
278: OFPT_BUNDLE_CONTROL - COMMIT_REQUEST            ok
279: OFPT_BUNDLE_CONTROL - COMMIT_REPLY              ok
280: OFPT_BUNDLE_CONTROL - DISCARD_REQUEST           ok
281: OFPT_BUNDLE_CONTROL - DISCARD_REPLY             ok
282: OFPT_BUNDLE_ADD_MESSAGE - OFPT_HELLO            ok

OpenFlow utilities

283: encoding hellos                                 ok

ofp-errors tests

284: OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 ok
285: OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 ok
286: OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0  ok
287: OFPT_ERROR prints type of truncated inner messages ok
288: OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0  ok
289: OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1  ok
290: OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0    ok
291: OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1  ok
292: encoding OFPBIC_* experimenter errors           ok
293: encoding errors extension that became official  ok
294: decoding OFPBIC_* experimenter errors           ok
295: decoding experimenter errors                    ok
296: encoding experimenter errors                    ok

ovs-ofctl

297: ovs-ofctl parse-flows choice of protocol        ok
298: ovs-ofctl parse-flows (OpenFlow 1.0)            ok
299: ovs-ofctl parse-flows (OpenFlow 1.1)            ok
300: ovs-ofctl parse-flows (OpenFlow 1.2)            ok
301: ovs-ofctl parse-flow with invalid mask          ok
302: ovs-ofctl action inconsistency (OpenFlow 1.1)   ok
303: ovs-ofctl parse-flows (With Tunnel-Parameters)  ok
304: ovs-ofctl parse-flows (skb_priority)            ok
305: ovs-ofctl parse-flows (NXM)                     ok
306: ovs-ofctl -F nxm parse-flows                    ok
307: ovs-ofctl -F nxm -mmm parse-flows               ok
308: ovs-ofctl parse-nx-match                        ok
309: ovs-ofctl parse-ofp10-match                     ok
310: ovs-ofctl parse-ofp11-match                     ok
311: ovs-ofctl parse-nx-match loose                  ok
312: ovs-ofctl parse-oxm                             ok
313: ovs-ofctl parse-oxm loose                       ok
314: check TCP flags expression in OXM and NXM       ok
315: ovs-ofctl check-vlan                            ok
316: ovs-ofctl -F option and NXM features            ok
317: ovs-ofctl -F option with flow_mods              ok
318: ovs-ofctl dump-flows honors -F option           ok
319: ovs-ofctl dump-flows rejects bad -F option      ok
320: ovs-ofctl add-flow reports non-normalized flows ok
321: ovs-ofctl dump-flows with sorting               ok
322: ovs-ofctl diff-flows                            ok
323: ovs-ofctl diff-flows - suppress false differences ok
324: ovs-ofctl -F and -O interaction                 ok
325: ovs-ofctl ofp-parse                             ok
326: tcp flags - filtering                           ok

datapath parsing and formatting

327: OVS datapath key parsing and formatting - valid forms ok
328: OVS datapath wildcarded key parsing and formatting - valid forms ok
329: OVS datapath wildcarded key filtering.          ok
330: OVS datapath actions parsing and formatting - valid forms ok

multipath link selection

331: modulo_n multipath link selection               ok
332: hash_threshold multipath link selection         ok
333: hrw multipath link selection                    ok
334: iter_hash multipath link selection              ok
335: multipath action missing argument               ok
336: multipath action bad fields                     ok
337: multipath action bad algorithm                  ok
338: multipath action bad n_links                    ok
339: multipath action destination too narrow         ok

learning action

340: learning action - parsing and formatting        ok
341: learning action - parsing and formatting - illegal in_port_oxm ok
342: learning action - parsing and formatting - OXM  ok
343: learning action - examples                      ok
344: learning action - satisfied prerequisites       ok
345: learning action - invalid prerequisites         ok
346: learning action - standard VLAN+MAC learning    ok
347: learning action - learn refreshes hard_age      ok
348: learning action - TCPv4 port learning           ok
349: learning action - TCPv6 port learning           ok
350: learning action - self-modifying flow           ok
351: learning action - self-modifying flow with idle_timeout ok
352: learning action - self-modifying flow with hard_timeout ok
353: learning action - fin_timeout feature           ok

vconn library -- unix class

354: unix vconn - refuse connection                  ok
355: unix vconn - accept then close                  ok
356: unix vconn - read hello                         ok
357: unix vconn - send plain hello                   ok
358: unix vconn - send long hello                    ok
359: unix vconn - send echo hello                    ok
360: unix vconn - send short hello                   ok
361: unix vconn - send invalid version hello         ok

vconn library -- tcp class

362: tcp vconn - refuse connection                   ok
363: tcp vconn - accept then close                   ok
364: tcp vconn - read hello                          ok
365: tcp vconn - send plain hello                    ok
366: tcp vconn - send long hello                     ok
367: tcp vconn - send echo hello                     ok
368: tcp vconn - send short hello                    ok
369: tcp vconn - send invalid version hello          ok

vconn library -- ssl class

370: ssl vconn - refuse connection                   ok
371: ssl vconn - accept then close                   ok
372: ssl vconn - read hello                          ok
373: ssl vconn - send plain hello                    ok
374: ssl vconn - send long hello                     ok
375: ssl vconn - send echo hello                     ok
376: ssl vconn - send short hello                    ok
377: ssl vconn - send invalid version hello          ok

test dir_name and base_name functions

378: components of "/usr/lib" are "/usr", "lib"      ok
379: components of "/usr/" are "/", "usr"            ok
380: components of "usr" are ".", "usr"              ok
381: components of "/" are "/", "/"                  ok
382: components of "." are ".", "."                  ok
383: components of ".." are ".", ".."                ok
384: components of "//" are "//", "//"               ok
385: components of "//foo" are "//", "foo"           ok
386: components of "" are ".", "."                   ok
387: components of "dir/file" are "dir", "file"      ok
388: components of "dir/file/" are "dir", "file"     ok
389: components of "dir/file//" are "dir", "file"    ok
390: components of "///foo" are "/", "foo"           ok

test follow_symlinks function

391: follow_symlinks - relative symlinks             ok
392: follow_symlinks - absolute symlinks             ok
393: follow_symlinks - symlinks to directories       ok
394: follow_symlinks - nonexistent targets           ok
395: follow_symlinks - regular files                 ok
396: follow_symlinks - device targets                skipped (file_name.at:98)
397: follow_symlinks - nonexistent files             ok
398: follow_symlinks - symlink loop                  ok

AES-128 unit tests

399: wikipedia test vector 1                         ok
400: wikipedia test vector 2                         ok
401: NIST KAT ECBKeySbox128e vector 0                ok
402: NIST KAT ECBKeySbox128e vector 1                ok
403: NIST KAT ECBKeySbox128e vector 2                ok
404: NIST KAT ECBKeySbox128e vector 3                ok
405: NIST KAT ECBKeySbox128e vector 4                ok
406: NIST KAT ECBKeySbox128e vector 5                ok
407: NIST KAT ECBKeySbox128e vector 6                ok
408: NIST KAT ECBKeySbox128e vector 7                ok
409: NIST KAT ECBKeySbox128e vector 8                ok
410: NIST KAT ECBKeySbox128e vector 9                ok
411: NIST KAT ECBKeySbox128e vector 10               ok
412: NIST KAT ECBKeySbox128e vector 11               ok
413: NIST KAT ECBKeySbox128e vector 12               ok
414: NIST KAT ECBKeySbox128e vector 13               ok
415: NIST KAT ECBKeySbox128e vector 14               ok
416: NIST KAT ECBKeySbox128e vector 15               ok
417: NIST KAT ECBKeySbox128e vector 16               ok
418: NIST KAT ECBKeySbox128e vector 17               ok
419: NIST KAT ECBKeySbox128e vector 18               ok
420: NIST KAT ECBKeySbox128e vector 19               ok
421: NIST KAT ECBKeySbox128e vector 20               ok

unixctl

422: unixctl ovs-vswitchd exit - Python              ok
423: unixctl ovs-vswitchd help - Python              ok
424: unixctl ovs-vswitchd arguments - Python         ok
425: unixctl bad target - Python                     ok
426: unixctl server - Python                         ok
427: unixctl server errors - Python                  ok

UUID unit tests

428: UUID generation, parsing, serialization         ok

JSON -- arrays

429: empty array - C                                 ok
430: empty array - Python                            ok
431: single-element array - C                        ok
432: single-element array - Python                   ok
433: 2-element array - C                             ok
434: 2-element array - Python                        ok
435: many-element array - C                          ok
436: many-element array - Python                     ok
437: missing comma - C                               ok
438: missing comma - Python                          ok
439: trailing comma not allowed - C                  ok
440: trailing comma not allowed - Python             ok
441: doubled comma not allowed - C                   ok
442: doubled comma not allowed - Python              ok

JSON -- strings

443: empty string - C                                ok
444: empty string - Python                           ok
445: 1-character strings - C                         ok
446: 1-character strings - Python                    ok
447: escape sequences - C                            ok
448: escape sequences - Python                       ok
449: Unicode escape sequences - C                    ok
450: Unicode escape sequences - Python               ok
451: surrogate pairs - C                             ok
452: surrogate pairs - Python                        expected failure (json.at:93)
453: a string by itself is not valid JSON - C        ok
454: a string by itself is not valid JSON - Python   ok
455: end of line in quoted string - C                ok
456: end of line in quoted string - Python           ok
457: formfeed in quoted string - C                   ok
458: formfeed in quoted string - Python              ok
459: bad escape in quoted string - C                 ok
460: bad escape in quoted string - Python            ok
461: \u must be followed by 4 hex digits (1) - C     ok
462: \u must be followed by 4 hex digits (1) - Python ok
463: \u must be followed by 4 hex digits (2) - C     ok
464: \u must be followed by 4 hex digits (2) - Python ok
465: isolated leading surrogate not allowed - C      ok
466: isolated leading surrogate not allowed - Python ok
467: surrogatess must paired properly - C            ok
468: surrogatess must paired properly - Python       ok
469: null bytes not allowed - C                      ok
470: null bytes not allowed - Python                 ok
471: properly quoted backslash at end of string - C  ok
472: properly quoted backslash at end of string - Python ok
473: stray backslash at end of string - C            ok
474: stray backslash at end of string - Python       ok
475: end of input in quoted string - C               ok
476: end of input in quoted string - Python          ok

JSON -- objects

477: empty object - C                                ok
478: empty object - Python                           ok
479: simple object - C                               ok
480: simple object - Python                          ok
481: bad value - C                                   ok
482: bad value - Python                              ok
483: missing colon - C                               ok
484: missing colon - Python                          ok
485: missing comma - C                               ok
486: missing comma - Python                          ok
487: trailing comma not allowed - C                  ok
488: trailing comma not allowed - Python             ok
489: doubled comma not allowed - C                   ok
490: doubled comma not allowed - Python              ok
491: names must be strings - C                       ok
492: names must be strings - Python                  ok

JSON -- literal names

493: null - C                                        ok
494: null - Python                                   ok
495: false - C                                       ok
496: false - Python                                  ok
497: true - C                                        ok
498: true - Python                                   ok
499: a literal by itself is not valid JSON - C       ok
500: a literal by itself is not valid JSON - Python  ok
501: nullify is invalid - C                          ok
502: nullify is invalid - Python                     ok
503: nubs is invalid - C                             ok
504: nubs is invalid - Python                        ok
505: xxx is invalid - C                              ok
506: xxx is invalid - Python                         ok

JSON -- numbers

507: integers expressed as reals - C                 ok
508: integers expressed as reals - Python            ok
509: large integers - C                              ok
510: large integers - Python                         ok
511: large integers expressed as reals - C           ok
512: large integers expressed as reals - Python      ok
513: large integers that overflow to reals - C       ok
514: large integers that overflow to reals - Python  ok
515: negative zero - C                               ok
516: negative zero - Python                          ok
517: reals - C                                       ok
518: reals - Python                                  ok
519: scientific notation - C                         ok
520: scientific notation - Python                    ok
521: +/- DBL_MAX - C                                 ok
522: +/- DBL_MAX - Python                            ok
523: negative reals - C                              ok
524: negative reals - Python                         ok
525: negative scientific notation - C                ok
526: negative scientific notation - Python           ok
527: 1e-9999 underflows to 0 - C                     ok
528: 1e-9999 underflows to 0 - Python                ok
529: a number by itself is not valid JSON - C        ok
530: a number by itself is not valid JSON - Python   ok
531: leading zeros not allowed - C                   ok
532: leading zeros not allowed - Python              ok
533: 1e9999 is too big - C                           ok
534: 1e9999 is too big - Python                      ok
535: exponent bigger than INT_MAX - C                ok
536: exponent bigger than INT_MAX - Python           ok
537: decimal point must be followed by digit - C     ok
538: decimal point must be followed by digit - Python ok
539: exponent must contain at least one digit (1) - C ok
540: exponent must contain at least one digit (1) - Python ok
541: exponent must contain at least one digit (2) - C ok
542: exponent must contain at least one digit (2) - Python ok
543: exponent must contain at least one digit (3) - C ok
544: exponent must contain at least one digit (3) - Python ok

JSON -- RFC 4627 examples

545: RFC 4267 object example - C                     ok
546: RFC 4267 object example - Python                ok
547: RFC 4267 array example - C                      ok
548: RFC 4267 array example - Python                 ok

JSON -- pathological cases

549: trailing garbage - C                            ok
550: trailing garbage - Python                       ok
551: formfeeds are not valid white space - C         ok
552: formfeeds are not valid white space - Python    ok
553: ';' is not a valid token - C                    ok
554: ';' is not a valid token - Python               ok
555: arrays nesting too deep - C                     ok
556: arrays nesting too deep - Python                ok
557: objects nesting too deep - C                    ok
558: objects nesting too deep - Python               ok
559: input may not be empty                          ok

JSON -- multiple inputs

560: multiple adjacent objects - C                   ok
561: multiple adjacent objects - Python              ok
562: multiple space-separated objects - C            ok
563: multiple space-separated objects - Python       ok
564: multiple objects on separate lines - C          ok
565: multiple objects on separate lines - Python     ok
566: multiple objects and arrays - C                 ok
567: multiple objects and arrays - Python            ok
568: garbage between multiple objects - C            ok
569: garbage between multiple objects - Python       ok
570: garbage after multiple objects - C              ok
571: garbage after multiple objects - Python         ok

JSON-RPC - C

572: JSON-RPC request and successful reply           ok
573: JSON-RPC request and error reply                ok
574: JSON-RPC notification                           ok

JSON-RPC - Python

575: JSON-RPC request and successful reply - Python  ok
576: JSON-RPC request and error reply - Python       ok
577: JSON-RPC notification - Python                  ok

tunnel

578: tunnel - input                                  FAILED (tunnel.at:4)
579: tunnel - ECN decapsulation                      FAILED (tunnel.at:65)
580: tunnel - output                                 FAILED (tunnel.at:112)
581: tunnel - ToS and TTL inheritance                FAILED (tunnel.at:144)
582: tunnel - set_tunnel                             FAILED (tunnel.at:182)
583: tunnel - key                                    FAILED (tunnel.at:216)
584: tunnel - key match                              FAILED (tunnel.at:265)
585: tunnel - VXLAN                                  ok
586: tunnel - LISP                                   FAILED (tunnel.at:326)
587: tunnel - different VXLAN UDP port               ok
588: ofproto-dpif - set_field - tun_src/tun_dst/tun_id FAILED (tunnel.at:367)

lockfile unit tests

589: lock and unlock                                 ok
590: lock and unlock twice                           ok
591: lock blocks same process                        ok
592: lock blocks same process twice                  ok
593: lock blocks other process                       ok
594: lock twice blocks other process                 ok
595: lock and unlock allows other process            ok
596: lock multiple                                   ok
597: lock symlink                                    ok
598: lock symlink to dir                             ok

reconnect library

599: nothing happens if not enabled - C              ok
600: nothing happens if not enabled - Python         ok
601: quick connect, idle disconnect - C              ok
602: quick connect, idle disconnect - Python         ok
603: slow connect, idle disconnect - C               ok
604: slow connect, idle disconnect - Python          ok
605: connect backs off - C                           ok
606: connect backs off - Python                      ok
607: connections with no data preserve backoff - C   ok
608: connections with no data preserve backoff - Python ok
609: brief connection preserves backoff - C          ok
610: brief connection preserves backoff - Python     ok
611: brief connection with data preserves backoff - C ok
612: brief connection with data preserves backoff - Python ok
613: long connection resets backoff - C              ok
614: long connection resets backoff - Python         ok
615: connection attempt fails quickly - C            ok
616: connection attempt fails quickly - Python       ok
617: max-tries of 1 honored - C                      ok
618: max-tries of 1 honored - Python                 ok
619: max-tries of 0 honored - C                      ok
620: max-tries of 0 honored - Python                 ok
621: passive mode - C                                ok
622: passive mode - Python                           ok

ovs-vswitchd

623: ovs-vswitchd detaches correctly with empty db   ok
624: ovs-vswitchd -- stats-update-interval           ok
625: ovs-vswitchd -- start additional ovs-vswitchd process ok
626: ovs-vswitchd -- switch over to another ovs-vswitchd process ok
627: ovs-vswitchd -- invalid database path           ok

ofproto

628: ofproto - echo request                          ok
629: ofproto - handling messages with bad version    ok
630: ofproto - feature request, config request       ok
631: ofproto - set OpenFlow port number              ok
632: ofproto - port stats - (OpenFlow 1.0)           ok
633: ofproto - port stats - (OpenFlow 1.2)           ok
634: ofproto - port stats - (OpenFlow 1.4)           ok
635: ofproto - port-desc stats (OpenFlow 1.0)        ok
636: ofproto - port-desc stats (OpenFlow 1.2)        ok
637: ofproto - port-desc stats (OpenFlow 1.5)        ok
638: ofproto - queue stats - (OpenFlow 1.0)          ok
639: ofproto - queue stats - (OpenFlow 1.2)          ok
640: ofproto - queue stats - (OpenFlow 1.4)          ok
641: ofproto - queue configuration - (OpenFlow 1.0)  ok
642: ofproto - queue configuration - (OpenFlow 1.2)  ok
643: ofproto - del group                             ok
644: ofproto - del group deletes flows               ok
645: ofproto - flow mod checks group availability    ok
646: ofproto - group description                     ok
647: ofproto - group description                     ok
648: ofproto - group features                        ok
649: ofproto - group stats                           ok
650: ofproto - mod-port (OpenFlow 1.0)               ok
651: ofproto - mod-port (OpenFlow 1.2)               ok
652: ofproto - mod-port (OpenFlow 1.4)               ok
653: ofproto - basic flow_mod commands (NXM)         ok
654: ofproto - basic flow_mod commands (OpenFlow 1.0) ok
655: ofproto - basic flow_mod commands (OpenFlow 1.1) ok
656: ofproto - flow_mod negative test (OpenFlow 1.1) ok
657: ofproto - set-field flow_mod commands (NXM)     ok
658: ofproto - basic flow_mod commands (OpenFlow 1.2) ok
659: ofproto - dump flows with cookie                ok
660: ofproto - mod flow with cookie change (OpenFlow 1.0) ok
661: ofproto - mod flow with cookie change (NXM)     ok
662: ofproto - no mod flow with cookie change (OpenFlow 1.1) ok
663: ofproto - no mod flow with cookie change (OpenFlow 1.2) ok
664: ofproto - mod flows based on cookie mask (OpenFlow 1.0) ok
665: ofproto - mod flows based on cookie mask (OpenFlow 1.1) ok
666: ofproto - mod flows based on cookie mask (OpenFlow 1.2) ok
667: ofproto - mod flows based on cookie mask with cookie change ok
668: ofproto - mod flow with cookie miss (mask==0) - NXM ok
669: ofproto - mod flow with cookie miss (mask==0) - OF1.1 ok
670: ofproto - mod flow with cookie miss (mask==0) - OF1.2 ok
671: ofproto - mod flow with cookie miss (mask!=0) - NXM ok
672: ofproto - mod flow with cookie miss (mask!=0) - OF1.1 ok
673: ofproto - mod flow with cookie miss (mask!=0) - OF1.2 ok
674: ofproto - del flows with cookies                ok
675: ofproto - del flows based on cookie             ok
676: ofproto - del flows based on cookie mask        ok
677: ofproto - del flows based on table id (NXM)     ok
678: ofproto - del flows based on table id (OpenFlow 1.1) ok
679: ofproto - del flows based on table id (OpenFlow 1.2) ok
680: ofproto - flow table configuration (OpenFlow 1.0) ok
681: ofproto - flow table configuration (OpenFlow 1.2) ok
682: ofproto - hard limits on flow table size (OpenFlow 1.0) ok
683: ofproto - hard limits on flow table size (OpenFlow 1.2) ok
684: ofproto - eviction upon table overflow (OpenFlow 1.0) ok
685: ofproto - eviction upon table overflow (OpenFlow 1.2) ok
686: ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) ok
687: ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) ok
688: ofproto - eviction upon table overflow, with modified hard timeout ok
689: ofproto - eviction upon table overflow, with modified idle timeout ok
690: ofproto - asynchronous message control (OpenFlow 1.0) ok
691: ofproto - asynchronous message control (OpenFlow 1.2) ok
692: ofproto - asynchronous message control (OpenFlow 1.3) ok
693: ofproto - controller role (OpenFlow 1.2)        ok
694: ofproto - controller role (OpenFlow 1.4)        ok
695: ofproto - packet-out from controller (OpenFlow 1.0) ok
696: ofproto - packet-out from controller (OpenFlow 1.2) ok
697: ofproto - packet-out from controller (OpenFlow 1.1) ok
698: ofproto - packet-out with metadata (NXM)        ok
699: ofproto - packet-out with metadata (OpenFlow 1.2) ok
700: ofproto - packet-out with tunnel metadata (OpenFlow 1.2) ok
701: ofproto - flow monitoring                       ok
702: ofproto - flow monitoring pause and resume      skipped (ofproto.at:2351)
703: ofproto - event filtering (OpenFlow 1.3)        ok
704: ofproto - ofport_request                        ok
705: ofproto - bundles, open (OpenFlow 1.4)          ok
706: ofproto - bundles, double open (OpenFlow 1.4)   ok
707: ofproto - bundle close without open (OpenFlow 1.4) ok
708: ofproto - bundle double close (OpenFlow 1.4)    ok
709: ofproto - bundle close, different flags (OpenFlow 1.4) ok
710: ofproto - bundle commit without open (OpenFlow 1.4) ok
711: ofproto - bundle commit, different flags (OpenFlow 1.4) ok
712: ofproto - bundle discard without open (OpenFlow 1.4) ok

ofproto-dpif

713: ofproto-dpif - dummy interface                  ok
714: ofproto-dpif, active-backup bonding             ok
715: ofproto-dpif, balance-slb bonding               ok
716: ofproto-dpif, balance-tcp bonding               ok
717: ofproto-dpif, balance-tcp bonding, different recirc flow  ok
718: ofproto-dpif - resubmit                         ok
719: ofproto-dpif - goto table                       ok
720: ofproto-dpif - write actions                    ok
721: ofproto-dpif - clear actions                    ok
722: ofproto-dpif - group chaining not supported     ok
723: ofproto-dpif - all group in action list         ok
724: ofproto-dpif - indirect group in action list    ok
725: ofproto-dpif - group actions have no effect afterwards ok
726: ofproto-dpif - all group in action set          ok
727: ofproto-dpif - indirect group in action set     ok
728: ofproto-dpif - select group                     ok
729: ofproto-dpif - select group with watch port     ok
730: ofproto-dpif - select group with weight         ok
731: ofproto-dpif - fast failover group              ok
732: ofproto-dpif - registers                        ok
733: ofproto-dpif - push-pop                         ok
734: ofproto-dpif - output                           ok
735: ofproto-dpif - dec_ttl                          ok
736: ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts ok
737: ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts ok
738: ofproto-dpif - note at offset 24 in ofpacts     ok
739: ofproto-dpif - output, OFPP_NONE ingress port   ok
740: ofproto-dpif - DSCP                             ok
741: ofproto-dpif - output/flood flags               ok
742: ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) ok
743: ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) ok
744: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER ok
745: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER ok
746: ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE ok
747: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE ok
748: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE ok
749: ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP ok
750: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP ok
751: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP ok
752: ofproto-dpif - controller                       ok
753: ofproto-dpif - table-miss flow (OpenFlow 1.0)   ok
754: ofproto-dpif - table-miss flow (OpenFlow 1.3)   ok
755: ofproto-dpif - ARP modification slow-path       ok
756: ofproto-dpif - VLAN handling                    ok
757: ofproto-dpif - MPLS handling                    ok
758: ofproto-dpif - VLAN+MPLS handling               ok
759: ofproto-dpif - fragment handling                ok
760: ofproto-dpif - exit                             ok
761: ofproto-dpif - mirroring, select_all            ok
762: ofproto-dpif - mirroring, select_src            ok
763: ofproto-dpif - mirroring, OFPP_NONE ingress port ok
764: ofproto-dpif - mirroring, select_dst            ok
765: ofproto-dpif - mirroring, select_vlan           ok
766: ofproto-dpif - mirroring, output_port           ok
767: ofproto-dpif - mirroring, output_vlan           ok
768: ofproto-dpif - ofproto/trace command 1          ok
769: ofproto-dpif - ofproto/trace command 2          ok
770: ofproto-dpif - ofproto/trace-packet-out         ok
771: ofproto-dpif - MAC learning                     ok
772: ofproto-dpif - MAC table overflow               ok
773: ofproto-dpif - MAC table overflow fairness      ok
774: ofproto-dpif - sFlow packet sampling - IPv4 collector FAILED (ofproto-dpif.at:3489)
775: ofproto-dpif - sFlow packet sampling - IPv6 collector FAILED (ofproto-dpif.at:3490)
776: ofproto-dpif - NetFlow flow expiration - IPv4 collector ok
777: ofproto-dpif - NetFlow flow expiration - IPv6 collector ok
778: ofproto-dpif - NetFlow active expiration - IPv4 collector ok
779: ofproto-dpif - NetFlow active expiration - IPv6 collector ok
780: ofproto-dpif - flow stats                       ok
781: ofproto-dpif - flow stats, set-n-threads        ok
782: idle_age and hard_age increase over time        ok
783: ofproto-dpif - fin_timeout                      ok
784: ofproto-dpif - ovs-appctl dpif/dump-dps         ok
785: ofproto-dpif - ovs-appctl dpif/show             ok
786: ofproto-dpif - ovs-appctl dpif/dump-flows       ok
787: ofproto-dpif - MPLS actions that result in a userspace action ok
788: ofproto-dpif - MPLS actions that result in a drop ok
789: ofproto-dpif - patch ports                      ok
790: ofproto-dpif - port duration                    ok

ofproto-dpif -- megaflows

791: ofproto-dpif megaflow - port classification     ok
792: ofproto-dpif megaflow - L2 classification       ok
793: ofproto-dpif megaflow - L3 classification       ok
794: ofproto-dpif megaflow - IPv6 classification     ok
795: ofproto-dpif megaflow - L4 classification       ok
796: ofproto-dpif megaflow - normal                  ok
797: ofproto-dpif megaflow - mpls                    ok
798: ofproto-dpif megaflow - netflow - IPv4 collector ok
799: ofproto-dpif megaflow - netflow - IPv6 collector ok
800: ofproto-dpif megaflow - normal, active-backup bonding ok
801: ofproto-dpif megaflow - normal, balance-slb bonding ok
802: ofproto-dpif megaflow - normal, balance-tcp bonding ok
803: ofproto-dpif megaflow - resubmit port action    ok
804: ofproto-dpif megaflow - resubmit table action   ok
805: ofproto-dpif megaflow - goto_table action       ok
806: ofproto-dpif megaflow - mirroring, select_all   ok
807: ofproto-dpif megaflow - mirroring, select_vlan  ok
808: ofproto-dpif megaflow - move action             ok
809: ofproto-dpif megaflow - push action             ok
810: ofproto-dpif megaflow - learning                ok
811: ofproto-dpif megaflow - tunnels                 FAILED (ofproto-dpif.at:4446)
812: ofproto-dpif megaflow - dec_ttl                 ok
813: ofproto-dpif megaflow - set dl_dst              ok
814: ofproto-dpif megaflow - disabled                ok
815: ofproto-dpif - datapath port number change      ok
816: ofproto - bundle with variable bfd/cfm config   ok
817: ofproto-dpif - ofproto-dpif-monitor 1           FAILED (ofproto-dpif.at:4654)
818: ofproto-dpif - ofproto-dpif-monitor 2           FAILED (ofproto-dpif.at:4705)

ofproto-dpif - flow translation resource limits

819: ofproto-dpif - infinite resubmit                ok
820: ofproto-dpif - exponential resubmit chain       ok
821: ofproto-dpif - too many output actions          ok
822: ofproto-dpif - stack too deep                   ok
823: ofproto-dpif - ICMPv6                           ok
824: ofproto-dpif - vlan matching                    ok

VLAN splinters

825: VLAN splinters                                  ok

OVSDB -- logging

826: create empty, reread                            ok
827: write one, reread                               ok
828: check that create fails if file exists          ok
829: write one, reread                               ok
830: write one, reread, append                       ok
831: write, reread one, overwrite                    ok
832: write, add corrupted data, read                 ok
833: write, add corrupted data, read, overwrite      ok
834: write, corrupt some data, read, overwrite       ok
835: write, truncate file, read, overwrite           ok
836: write bad JSON, read, overwrite                 ok

OVSDB -- atomic types

837: integer - C                                     ok
838: integer - Python                                ok
839: real - C                                        ok
840: real - Python                                   ok
841: boolean - C                                     ok
842: boolean - Python                                ok
843: string - C                                      ok
844: string - Python                                 ok
845: uuid - C                                        ok
846: uuid - Python                                   ok
847: void is not a valid atomic-type - C             ok
848: void is not a valid atomic-type - Python        ok

OVSDB -- base types

849: integer enum - C                                ok
850: integer enum - Python                           ok
851: integer >= 5 - C                                ok
852: integer >= 5 - Python                           ok
853: integer <= 7 - C                                ok
854: integer <= 7 - Python                           ok
855: integer between -5 and 10 - C                   ok
856: integer between -5 and 10 - Python              ok
857: integer max may not be less than min - C        ok
858: integer max may not be less than min - Python   ok
859: real enum - C                                   ok
860: real enum - Python                              ok
861: real >= -1.5 - C                                ok
862: real >= -1.5 - Python                           ok
863: real <= 1e5 - C                                 ok
864: real <= 1e5 - Python                            ok
865: real between -2.5 and 3.75 - C                  ok
866: real between -2.5 and 3.75 - Python             ok
867: real max may not be less than min - C           ok
868: real max may not be less than min - Python      ok
869: boolean - C                                     ok
870: boolean - Python                                ok
871: boolean enum - C                                ok
872: boolean enum - Python                           ok
873: string enum - C                                 ok
874: string enum - Python                            ok
875: string minLength - C                            ok
876: string minLength - Python                       ok
877: string maxLength - C                            ok
878: string maxLength - Python                       ok
879: string minLength and maxLength - C              ok
880: string minLength and maxLength - Python         ok
881: maxLength must not be less than minLength - C   ok
882: maxLength must not be less than minLength - Python ok
883: maxLength must not be negative - C              ok
884: maxLength must not be negative - Python         ok
885: uuid enum - C                                   ok
886: uuid enum - Python                              ok
887: uuid refTable - C                               ok
888: uuid refTable - Python                          ok
889: uuid refTable must be valid id - C              ok
890: uuid refTable must be valid id - Python         ok
891: void is not a valid base-type - C               ok
892: void is not a valid base-type - Python          ok
893: "type" member must be present - C               ok
894: "type" member must be present - Python          ok

OVSDB -- simple types

895: simple integer - C                              ok
896: simple integer - Python                         ok
897: simple real - C                                 ok
898: simple real - Python                            ok
899: simple boolean - C                              ok
900: simple boolean - Python                         ok
901: simple string - C                               ok
902: simple string - Python                          ok
903: simple uuid - C                                 ok
904: simple uuid - Python                            ok
905: integer in object - C                           ok
906: integer in object - Python                      ok
907: real in object with explicit min and max - C    ok
908: real in object with explicit min and max - Python ok
909: key type is required - C                        ok
910: key type is required - Python                   ok
911: void is not a valid type - C                    ok
912: void is not a valid type - Python               ok

OVSDB -- set types

913: optional boolean - C                            ok
914: optional boolean - Python                       ok
915: set of 1 to 3 uuids - C                         ok
916: set of 1 to 3 uuids - Python                    ok
917: set of 0 to 3 strings - C                       ok
918: set of 0 to 3 strings - Python                  ok
919: set of 0 or more integers - C                   ok
920: set of 0 or more integers - Python              ok
921: set of 1 or more reals - C                      ok
922: set of 1 or more reals - Python                 ok
923: set max cannot be less than min - C             ok
924: set max cannot be less than min - Python        ok
925: set max cannot be negative - C                  ok
926: set max cannot be negative - Python             ok
927: set min cannot be negative - C                  ok
928: set min cannot be negative - Python             ok
929: set min cannot be greater than one - C          ok
930: set min cannot be greater than one - Python     ok

OVSDB -- map types

931: map of 1 integer to boolean - C                 ok
932: map of 1 integer to boolean - Python            ok
933: map of 1 boolean to integer, explicit min and max - C ok
934: map of 1 boolean to integer, explicit min and max - Python ok
935: map of 1 to 5 uuid to real - C                  ok
936: map of 1 to 5 uuid to real - Python             ok
937: map of 0 to 10 string to uuid - C               ok
938: map of 0 to 10 string to uuid - Python          ok
939: map of 1 to 20 real to string - C               ok
940: map of 1 to 20 real to string - Python          ok
941: map of 0 or more string to real - C             ok
942: map of 0 or more string to real - Python        ok
943: map key type is required - C                    ok
944: map key type is required - Python               ok

OVSDB -- default values

945: default atoms - C                               ok
946: default atoms - Python                          ok
947: default data - C                                ok
948: default data - Python                           ok

OVSDB -- atoms without constraints

949: integer atom from JSON - C                      ok
950: integer atom from JSON - Python                 ok
951: integer atom from string                        ok
952: real atom from JSON - C                         ok
953: real atom from JSON - Python                    ok
954: real atom from string                           ok
955: boolean atom from JSON - C                      ok
956: boolean atom from JSON - Python                 ok
957: boolean atom from string                        ok
958: string atom from JSON - C                       ok
959: string atom from JSON - Python                  ok
960: string atom from string                         ok
961: uuid atom from JSON - C                         ok
962: uuid atom from JSON - Python                    ok
963: uuid atom from string                           ok
964: integer atom sorting - C                        ok
965: integer atom sorting - Python                   ok
966: real atom sorting - C                           ok
967: real atom sorting - Python                      ok
968: boolean atom sorting - C                        ok
969: boolean atom sorting - Python                   ok
970: string atom sorting - C                         ok
971: string atom sorting - Python                    ok
972: uuid atom sorting - C                           ok
973: uuid atom sorting - Python                      ok
974: real not acceptable integer JSON atom - C       ok
975: real not acceptable integer JSON atom - Python  ok
976: no invalid UTF-8 sequences in strings           ok
977: no invalid UTF-8 sequences in strings - Python  ok
978: real not acceptable integer string atom         ok
979: string "true" not acceptable boolean JSON atom - C ok
980: string "true" not acceptable boolean JSON atom - Python ok
981: string "true" not acceptable boolean string atom ok
982: integer not acceptable string JSON atom - C     ok
983: integer not acceptable string JSON atom - Python ok
984: uuid atom must be expressed as JSON array - C   ok
985: uuid atom must be expressed as JSON array - Python ok
986: named-uuid requires symbol table - C            ok
987: named-uuid requires symbol table - Python       ok
988: empty string atom must be quoted                ok
989: quotes must be balanced                         ok
990: quoted string must not contain unescaped quote  ok
991: quoted string must not end with backslash       ok
992: uuids must be valid                             ok

OVSDB -- atoms with enum constraints

993: integer atom enum - C                           ok
994: integer atom enum - Python                      ok
995: real atom enum - C                              ok
996: real atom enum - Python                         ok
997: boolean atom enum - C                           ok
998: boolean atom enum - Python                      ok
999: string atom enum - C                            ok
1000: string atom enum - Python                       ok
1001: uuid atom enum - C                              ok
1002: uuid atom enum - Python                         ok

OVSDB -- atoms with other constraints

1003: integers >= 5 - C                               ok
1004: integers >= 5 - Python                          ok
1005: integers <= -1 - C                              ok
1006: integers <= -1 - Python                         ok
1007: integers in range -10 to 10 - C                 ok
1008: integers in range -10 to 10 - Python            ok
1009: reals >= 5 - C                                  ok
1010: reals >= 5 - Python                             ok
1011: reals <= -1 - C                                 ok
1012: reals <= -1 - Python                            ok
1013: reals in range -10 to 10 - C                    ok
1014: reals in range -10 to 10 - Python               ok
1015: strings at least 2 characters long - C          ok
1016: strings at least 2 characters long - Python     skipped (ovsdb-data.at:466)
1017: strings no more than 2 characters long - C      ok
1018: strings no more than 2 characters long - Python ok

OSVDB -- simple data

1019: integer JSON datum - C                          ok
1020: integer JSON datum - Python                     ok
1021: integer string datum                            ok
1022: real JSON datum - C                             ok
1023: real JSON datum - Python                        ok
1024: real string datum                               ok
1025: boolean JSON datum - C                          ok
1026: boolean JSON datum - Python                     ok
1027: boolean string datum                            ok
1028: string JSON datum - C                           ok
1029: string JSON datum - Python                      ok
1030: string string datum                             ok

OVSDB -- set data

1031: JSON optional boolean - C                       ok
1032: JSON optional boolean - Python                  ok
1033: string optional boolean                         ok
1034: JSON set of 0 or more integers - C              ok
1035: JSON set of 0 or more integers - Python         ok
1036: string set of 0 or more integers                ok
1037: JSON set of 1 to 3 uuids - C                    ok
1038: JSON set of 1 to 3 uuids - Python               ok
1039: string set of 1 to 3 uuids                      ok
1040: JSON set of 0 to 3 strings - C                  ok
1041: JSON set of 0 to 3 strings - Python             ok
1042: string set of 0 to 3 strings                    ok
1043: duplicate boolean not allowed in JSON set - C   ok
1044: duplicate boolean not allowed in JSON set - Python ok
1045: duplicate boolean not allowed in string set     ok
1046: duplicate integer not allowed in JSON set - C   ok
1047: duplicate integer not allowed in JSON set - Python ok
1048: duplicate integer not allowed in string set     ok
1049: duplicate real not allowed in JSON set - C      ok
1050: duplicate real not allowed in JSON set - Python ok
1051: duplicate real not allowed in string set        ok
1052: duplicate string not allowed in JSON set - C    ok
1053: duplicate string not allowed in JSON set - Python ok
1054: duplicate string not allowed in string set      ok
1055: duplicate uuid not allowed in JSON set - C      ok
1056: duplicate uuid not allowed in JSON set - Python ok
1057: duplicate uuid not allowed in string set        ok

OVSDB -- map data

1058: JSON map of 1 integer to boolean - C            ok
1059: JSON map of 1 integer to boolean - Python       ok
1060: string map of 1 integer to boolean              ok
1061: JSON map of at least 1 integer to boolean - C   ok
1062: JSON map of at least 1 integer to boolean - Python ok
1063: string map of at least 1 integer to boolean     ok
1064: JSON map of 1 boolean to integer - C            ok
1065: JSON map of 1 boolean to integer - Python       ok
1066: string map of 1 boolean to integer              ok
1067: JSON map of 1 uuid to real - C                  ok
1068: JSON map of 1 uuid to real - Python             ok
1069: string map of 1 uuid to real                    ok
1070: JSON map of 10 string to string - C             ok
1071: JSON map of 10 string to string - Python        ok
1072: string map of 10 string to string               ok
1073: duplicate integer key not allowed in JSON map - C ok
1074: duplicate integer key not allowed in JSON map - Python ok
1075: duplicate integer key not allowed in string map ok

OVSDB -- columns

1076: ordinary column - C                             ok
1077: ordinary column - Python                        ok
1078: immutable column - C                            ok
1079: immutable column - Python                       ok
1080: ephemeral column - C                            ok
1081: ephemeral column - Python                       ok

OVSDB -- tables

1082: non-root table with one column - C              ok
1083: non-root table with one column - Python         ok
1084: immutable table with one column - C             ok
1085: immutable table with one column - Python        ok
1086: root table with one column - C                  ok
1087: root table with one column - Python             ok
1088: non-root table with default_is_root=true - C    ok
1089: non-root table with default_is_root=true - Python ok
1090: root table with default_is_root=true - C        ok
1091: root table with default_is_root=true - Python   ok
1092: table with maxRows of 2 - C                     ok
1093: table with maxRows of 2 - Python                ok
1094: table with index - C                            ok
1095: table with index - Python                       ok
1096: table with syntax error in index - C            ok
1097: table with syntax error in index - Python       ok
1098: table with empty index - C                      ok
1099: table with empty index - Python                 ok
1100: table with index of ephemeral column - C        ok
1101: table with index of ephemeral column - Python   ok
1102: column names may not begin with _ - C           ok
1103: column names may not begin with _ - Python      ok
1104: table must have at least one column (1) - C     ok
1105: table must have at least one column (1) - Python ok
1106: table must have at least one column (2) - C     ok
1107: table must have at least one column (2) - Python ok
1108: table maxRows must be positive - C              ok
1109: table maxRows must be positive - Python         ok

OVSDB -- rows

1110: row with one string column                      ok
1111: row with one integer column                     ok
1112: row with one real column                        ok
1113: row with one boolean column                     ok
1114: row with one uuid column                        ok
1115: row with set of 1 to 2 elements                 ok
1116: row with map of 1 to 2 elements                 ok
1117: row with several columns                        ok
1118: row hashing (scalars)                           ok
1119: row hashing (sets)                              ok
1120: row hashing (maps)                              ok

OVSDB -- schemas

1121: schema with valid refTables - C                 ok
1122: schema with valid refTables - Python            ok
1123: schema with ephemeral strong references - C     ok
1124: schema with ephemeral strong references - Python ok
1125: schema without version number - C               ok
1126: schema without version number - Python          ok
1127: schema with invalid refTables - C               ok
1128: schema with invalid refTables - Python          ok
1129: schema with invalid version number - C          ok
1130: schema with invalid version number - Python     ok

OVSDB -- conditions

1131: null condition                                  ok
1132: conditions on scalars                           ok
1133: disallowed conditions on scalars                ok
1134: conditions on sets                              ok
1135: condition sorting                               ok
1136: evaluating null condition                       ok
1137: evaluating conditions on integers               ok
1138: evaluating conditions on reals                  ok
1139: evaluating conditions on booleans               ok
1140: evaluating conditions on strings                ok
1141: evaluating conditions on UUIDs                  ok
1142: evaluating conditions on sets                   ok
1143: evaluating conditions on maps (1)               ok
1144: evaluating conditions on maps (2)               ok

OVSDB -- mutations

1145: null mutation                                   ok
1146: mutations on scalars                            ok
1147: disallowed mutations on scalars                 ok
1148: disallowed mutations on immutable columns       ok
1149: mutations on sets                               ok
1150: executing null mutation                         ok
1151: executing mutations on integers                 ok
1152: integer overflow detection                      ok
1153: executing mutations on integers with constraints ok
1154: executing mutations on reals                    ok
1155: real overflow detection                         ok
1156: executing mutations on reals with constraints   ok
1157: executing mutations on integer sets             ok
1158: executing mutations on integer sets with constraints ok
1159: executing mutations on real sets                ok
1160: executing mutations on boolean sets             ok
1161: executing mutations on string sets              ok
1162: executing mutations on uuid sets                ok
1163: executing mutations on integer maps             ok

OVSDB -- queries

1164: queries on scalars                              ok
1165: queries on sets                                 ok
1166: queries on maps (1)                             ok
1167: queries on maps (2)                             ok
1168: UUID-distinct queries on scalars                ok
1169: Boolean-distinct queries on scalars             ok
1170: parse colunn set containing bad name            ok

OVSDB -- transactions

1171: empty table, empty transaction                  ok
1172: nonempty table, empty transaction               ok
1173: insert, commit                                  ok
1174: insert, abort                                   ok
1175: modify, commit                                  ok
1176: modify, abort                                   ok
1177: delete, commit                                  ok
1178: delete, abort                                   ok
1179: modify, delete, commit                          ok
1180: modify, delete, abort                           ok
1181: insert, delete, commit                          ok
1182: insert, delete, abort                           ok
1183: insert, modify, delete, commit                  ok
1184: insert, modify, delete, abort                   ok
1185: deletes are aborted cleanly                     ok

OVSDB -- execution

1186: uuid-name must be <id>                          ok
1187: named-uuid must be <id>                         ok
1188: duplicate uuid-name not allowed                 ok
1189: insert default row, query table                 ok
1190: insert row, query table                         ok
1191: insert rows, query by value                     ok
1192: insert rows, query by named-uuid                ok
1193: insert rows, update rows by value               ok
1194: insert rows, mutate rows                        ok
1195: insert rows, delete by named-uuid               ok
1196: insert rows, delete rows by value               ok
1197: insert rows, delete by (non-matching) value     ok
1198: insert rows, delete all                         ok
1199: insert row, query table, commit                 ok
1200: insert row, query table, commit durably         ok
1201: equality wait with correct rows                 ok
1202: equality wait with extra row                    ok
1203: equality wait with missing row                  ok
1204: inequality wait with correct rows               ok
1205: inequality wait with extra row                  ok
1206: inequality wait with missing row                ok
1207: insert and update constraints                   ok
1208: index uniqueness checking                       ok
1209: referential integrity -- simple                 ok
1210: referential integrity -- mutual references      ok
1211: weak references                                 ok
1212: immutable columns                               ok
1213: garbage collection                              ok

OVSDB -- triggers

1214: trigger fires immediately                       ok
1215: trigger times out                               ok
1216: trigger fires after delay                       ok
1217: delayed trigger modifies database               ok
1218: one delayed trigger wakes up another            ok

OVSDB -- ovsdb-tool

1219: insert default row, query table                 ok
1220: insert row, query table                         ok
1221: insert rows, query by value                     ok
1222: insert rows, query by named-uuid                ok
1223: insert rows, update rows by value               ok
1224: insert rows, mutate rows                        ok
1225: insert rows, delete by named-uuid               ok
1226: insert rows, delete rows by value               ok
1227: insert rows, delete by (non-matching) value     ok
1228: insert rows, delete all                         ok
1229: insert row, query table, commit                 ok
1230: insert row, query table, commit durably         ok
1231: equality wait with correct rows                 ok
1232: equality wait with extra row                    ok
1233: equality wait with missing row                  ok
1234: inequality wait with correct rows               ok
1235: inequality wait with extra row                  ok
1236: inequality wait with missing row                ok
1237: insert and update constraints                   ok
1238: index uniqueness checking                       ok
1239: referential integrity -- simple                 ok
1240: referential integrity -- mutual references      ok
1241: weak references                                 ok
1242: immutable columns                               ok
1243: garbage collection                              ok
1244: transaction comments                            ok
1245: ovsdb-tool compact                              ok
1246: ovsdb-tool convert -- removing a column         ok
1247: ovsdb-tool convert -- adding a column           ok
1248: ovsdb-tool schema-version                       ok
1249: ovsdb-tool db-version                           ok
1250: ovsdb-tool schema-cksum                         ok
1251: ovsdb-tool db-cksum                             ok
1252: ovsdb-tool needs-conversion (no conversion needed) ok
1253: ovsdb-tool needs-conversion (conversion needed) ok

OVSDB -- ovsdb-server transactions (Unix sockets)

1254: insert default row, query table                 ok
1255: insert row, query table                         ok
1256: insert rows, query by value                     ok
1257: insert rows, query by named-uuid                ok
1258: insert rows, update rows by value               ok
1259: insert rows, mutate rows                        ok
1260: insert rows, delete by named-uuid               ok
1261: insert rows, delete rows by value               ok
1262: insert rows, delete by (non-matching) value     ok
1263: insert rows, delete all                         ok
1264: insert row, query table, commit                 ok
1265: insert row, query table, commit durably         ok
1266: equality wait with correct rows                 ok
1267: equality wait with extra row                    ok
1268: equality wait with missing row                  ok
1269: inequality wait with correct rows               ok
1270: inequality wait with extra row                  ok
1271: inequality wait with missing row                ok
1272: insert and update constraints                   ok
1273: index uniqueness checking                       ok
1274: referential integrity -- simple                 ok
1275: referential integrity -- mutual references      ok
1276: weak references                                 ok
1277: immutable columns                               ok
1278: garbage collection                              ok

ovsdb-server miscellaneous features

1279: truncating corrupted database log               ok
1280: truncating database log with bad transaction    ok
1281: ovsdb-client get-schema-version                 ok
1282: database multiplexing implementation            ok
1283: ovsdb-server/add-db and remove-db               ok
1284: ovsdb-server/add-db with --monitor              ok
1285: ovsdb-server/add-db and remove-db with --monitor ok
1286: --remote=db: implementation                     ok
1287: ovsdb-server/add-remote and remove-remote       ok
1288: ovsdb-server/add-remote with --monitor          ok
1289: ovsdb-server/add-remote and remove-remote with --monitor ok
1290: SSL db: implementation                          ok
1291: compacting online                               ok
1292: ovsdb-server combines updates on backlogged connections skipped (ovsdb-server.at:681)

OVSDB -- ovsdb-server transactions (SSL IPv4 sockets)

1293: insert default row, query table                 ok
1294: insert row, query table                         ok
1295: insert rows, query by value                     ok
1296: insert rows, query by named-uuid                ok
1297: insert rows, update rows by value               ok
1298: insert rows, mutate rows                        ok
1299: insert rows, delete by named-uuid               ok
1300: insert rows, delete rows by value               ok
1301: insert rows, delete by (non-matching) value     ok
1302: insert rows, delete all                         ok
1303: insert row, query table, commit                 ok
1304: insert row, query table, commit durably         ok
1305: equality wait with correct rows                 ok
1306: equality wait with extra row                    ok
1307: equality wait with missing row                  ok
1308: inequality wait with correct rows               ok
1309: inequality wait with extra row                  ok
1310: inequality wait with missing row                ok
1311: insert and update constraints                   ok
1312: index uniqueness checking                       ok
1313: referential integrity -- simple                 ok
1314: referential integrity -- mutual references      ok
1315: weak references                                 ok
1316: immutable columns                               ok
1317: garbage collection                              ok

OVSDB -- ovsdb-server transactions (SSL IPv6 sockets)

1318: insert default row, query table                 ok

OVSDB -- ovsdb-server transactions (TCP IPv4 sockets)

1319: ovsdb-client get-schema-version - tcp socket    ok
1320: insert default row, query table                 ok
1321: insert row, query table                         ok
1322: insert rows, query by value                     ok
1323: insert rows, query by named-uuid                ok
1324: insert rows, update rows by value               ok
1325: insert rows, mutate rows                        ok
1326: insert rows, delete by named-uuid               ok
1327: insert rows, delete rows by value               ok
1328: insert rows, delete by (non-matching) value     ok
1329: insert rows, delete all                         ok
1330: insert row, query table, commit                 ok
1331: insert row, query table, commit durably         ok
1332: equality wait with correct rows                 ok
1333: equality wait with extra row                    ok
1334: equality wait with missing row                  ok
1335: inequality wait with correct rows               ok
1336: inequality wait with extra row                  ok
1337: inequality wait with missing row                ok
1338: insert and update constraints                   ok
1339: index uniqueness checking                       ok
1340: referential integrity -- simple                 ok
1341: referential integrity -- mutual references      ok
1342: weak references                                 ok
1343: immutable columns                               ok
1344: garbage collection                              ok

OVSDB -- ovsdb-server transactions (TCP IPv6 sockets)

1345: insert default row, query table                 ok

OVSDB -- transactions on transient ovsdb-server

1346: insert default row, query table                 ok
1347: insert row, query table                         ok
1348: insert rows, query by value                     ok
1349: insert rows, query by named-uuid                ok
1350: insert rows, update rows by value               ok
1351: insert rows, mutate rows                        ok
1352: insert rows, delete by named-uuid               ok
1353: insert rows, delete rows by value               ok
1354: insert rows, delete by (non-matching) value     ok
1355: insert rows, delete all                         ok
1356: insert row, query table, commit                 ok
1357: insert row, query table, commit durably         ok
1358: equality wait with correct rows                 ok
1359: equality wait with extra row                    ok
1360: equality wait with missing row                  ok
1361: inequality wait with correct rows               ok
1362: inequality wait with extra row                  ok
1363: inequality wait with missing row                ok
1364: insert and update constraints                   ok
1365: index uniqueness checking                       ok
1366: referential integrity -- simple                 ok
1367: referential integrity -- mutual references      ok
1368: weak references                                 ok
1369: immutable columns                               ok
1370: garbage collection                              ok

OVSDB -- ovsdb-server monitors

1371: monitor insert into empty table                 ok
1372: monitor insert into populated table             ok
1373: monitor delete                                  ok
1374: monitor row update                              ok
1375: monitor no-op row updates                       ok
1376: monitor insert-and-update transaction           ok
1377: monitor insert-update-and-delete transaction    ok
1378: monitor weak reference change                   ok
1379: monitor insert-update-and-delete transaction    ok

ovsdb -- ovsdb-monitor monitor only some operations

1380: monitor all operations                          ok
1381: monitor initial only                            ok
1382: monitor insert only                             ok
1383: monitor delete only                             ok
1384: monitor modify only                             ok

OVSDB -- interface description language (IDL)

1385: simple idl, initially empty, no ops - C         ok
1386: simple idl, initially empty, no ops - Python    ok
1387: simple idl, initially empty, no ops - Python tcp ok
1388: simple idl, initially empty, no ops - Python tcp6 ok
1389: simple idl, initially empty, various ops - C    ok
1390: simple idl, initially empty, various ops - Python ok
1391: simple idl, initially empty, various ops - Python tcp ok
1392: simple idl, initially empty, various ops - Python tcp6 ok
1393: simple idl, initially populated - C             ok
1394: simple idl, initially populated - Python        ok
1395: simple idl, initially populated - Python tcp    ok
1396: simple idl, initially populated - Python tcp6   ok
1397: simple idl, writing via IDL - C                 ok
1398: simple idl, writing via IDL - Python            ok
1399: simple idl, writing via IDL - Python tcp        ok
1400: simple idl, writing via IDL - Python tcp6       ok
1401: simple idl, handling verification failure - C   ok
1402: simple idl, handling verification failure - Python ok
1403: simple idl, handling verification failure - Python tcp ok
1404: simple idl, handling verification failure - Python tcp6 ok
1405: simple idl, increment operation - C             ok
1406: simple idl, increment operation - Python        ok
1407: simple idl, increment operation - Python tcp    ok
1408: simple idl, increment operation - Python tcp6   ok
1409: simple idl, aborting - C                        ok
1410: simple idl, aborting - Python                   ok
1411: simple idl, aborting - Python tcp               ok
1412: simple idl, aborting - Python tcp6              ok
1413: simple idl, destroy without commit or abort - C ok
1414: simple idl, destroy without commit or abort - Python ok
1415: simple idl, destroy without commit or abort - Python tcp ok
1416: simple idl, destroy without commit or abort - Python tcp6 ok
1417: self-linking idl, consistent ops - C            ok
1418: self-linking idl, consistent ops - Python       ok
1419: self-linking idl, consistent ops - Python tcp   ok
1420: self-linking idl, consistent ops - Python tcp6  ok
1421: self-linking idl, inconsistent ops - C          ok
1422: self-linking idl, inconsistent ops - Python     ok
1423: self-linking idl, inconsistent ops - Python tcp ok
1424: self-linking idl, inconsistent ops - Python tcp6 ok
1425: self-linking idl, sets - C                      ok
1426: self-linking idl, sets - Python                 ok
1427: self-linking idl, sets - Python tcp             ok
1428: self-linking idl, sets - Python tcp6            ok
1429: external-linking idl, consistent ops - C        ok
1430: external-linking idl, consistent ops - Python   ok
1431: external-linking idl, consistent ops - Python tcp ok
1432: external-linking idl, consistent ops - Python tcp6 ok
1433: external-linking idl, insert ops - Python       ok
1434: getattr idl, insert ops - Python                ok

ovs-vsctl unit tests

1435: ovs-vsctl connection retry                      ok

ovs-vsctl unit tests -- real bridges

1436: add-br a                                        ok
1437: add-br a, add-br a                              ok
1438: add-br a, add-br b                              ok
1439: add-br a, add-br b, del-br a                    ok
1440: add-br a, del-br a, add-br a                    ok
1441: add-br a, add-port a a1, add-port a a2          ok
1442: add-br a, add-port a a1, add-port a a1          ok
1443: add-br a b, add-port a a1, add-port b b1, del-br a ok
1444: add-br a, add-bond a bond0 a1 a2 a3             ok
1445: add-br a b, add-port a a1, add-port b b1, del-port a a1 ok
1446: add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 ok
1447: external IDs                                    ok
1448: controllers                                     ok

ovs-vsctl unit tests -- fake bridges (VLAN 9)

1449: simple fake bridge (VLAN 9)                     ok
1450: list bridges -- real and fake (VLAN 9)          ok
1451: simple fake bridge + del-br fake bridge (VLAN 9) ok
1452: simple fake bridge + del-br real bridge (VLAN 9) ok
1453: simple fake bridge + external IDs (VLAN 9)      ok

ovs-vsctl unit tests -- fake bridges (VLAN 0)

1454: simple fake bridge (VLAN 0)                     ok
1455: list bridges -- real and fake (VLAN 0)          ok
1456: simple fake bridge + del-br fake bridge (VLAN 0) ok
1457: simple fake bridge + del-br real bridge (VLAN 0) ok
1458: simple fake bridge + external IDs (VLAN 0)      ok
1459: fake bridge on bond                             ok
1460: fake bridge on bond + del-br fake bridge        ok
1461: fake bridge on bond + del-br real bridge        ok

ovs-vsctl unit tests -- manager commands

1462: managers                                        ok

ovs-vsctl unit tests -- database commands

1463: database commands -- positive checks            ok
1464: database commands -- negative checks            ok
1465: database commands -- conditions                 ok
1466: database commands -- wait-until immediately true ok
1467: database commands -- wait-until must wait       ok
1468: --id option on create, get commands             ok
1469: unreferenced record warnings                    ok
1470: created row UUID is wrong in same execution     ok
1471: --all option on destroy command                 ok

ovs-vsctl add-port -- reserved port names

1472: add-port -- reserved names 1                    FAILED (ovs-vsctl.at:1205)
1473: add-port -- reserved names 2                    FAILED (ovs-vsctl.at:1233)

ovs-monitor-ipsec

1474: ovs-monitor-ipsec                               ok

ovs-xapi-sync

1475: ovs-xapi-sync                                   ok

interface-reconfigure

1476: non-VLAN, non-bond                              ok
1477: VLAN, non-bond                                  ok
1478: Bond, non-VLAN                                  ok
1479: VLAN on bond                                    ok
1480: Re-create port with different types             FAILED (interface-reconfigure.at:1038)

Spanning Tree Protocol unit tests

1481: STP example from IEEE 802.1D-1998               ok
1482: STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 ok
1483: STP example from IEEE 802.1D-2004 figure 17.6   ok
1484: STP example from IEEE 802.1D-2004 figure 17.7   ok
1485: STP.io.1.1: Link Failure                        ok
1486: STP.io.1.2: Repeated Network                    ok
1487: STP.io.1.4: Network Initialization              ok
1488: STP.io.1.5: Topology Change                     ok
1489: STP.op.1.1 and STP.op.1.2                       ok
1490: STP.op.1.4: All Ports Initialized to Designated Ports ok
1491: STP.op.3.1: Root Bridge Selection: Root ID Values ok
1492: STP.op.3.3: Root Bridge Selection: Bridge ID Values ok
1493: STP.op.3.3: Root Bridge Selection: Bridge ID Values ok

vlog

1494: vlog - Python                                   ok
1495: vlog - vlog/reopen - Python                     ok
1496: vlog - vlog/reopen without log file - Python    ok
1497: vlog - vlog/reopen can't reopen log file - Python skipped (vlog.at:155)
1498: vlog - vlog/set and vlog/list - Python          ok

vtep-ctl unit tests -- physical switch tests

1499: add-ps a                                        ok
1500: add-ps a, add-ps a                              ok
1501: add-ps a, add-ps b                              ok
1502: add-ps a, add-ps b, del-ps a                    ok
1503: add-ps a, del-ps a, add-ps a                    ok
1504: add-ps a, add-port a a1, add-port a a2          ok
1505: add-ps a, add-port a a1, add-port a a1          ok
1506: add-ps a b, add-port a a1, add-port b b1, del-ps a ok
1507: add-ps a b, add-port a a1, add-port b b1, del-port a a1 ok
1508: add-ps a b, add-port a p1, add-port b p1, del-port a p1 ok

vtep-ctl unit tests -- logical switch tests

1509: add-ls a                                        ok
1510: add-ls a, add-ls a                              ok
1511: add-ls a, add-ls b                              ok
1512: add-ls a, add-ls b, del-ls a                    ok
1513: add-ls a, del-ls a, add-ls a                    ok

vtep-ctl unit tests -- logical binding tests

1514: bind-ls ps1 pp1 300 ls1                         ok
1515: bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 ok
1516: bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2    ok

vtep-ctl unit tests -- MAC binding tests

1517: add-ucast-local ls1                             ok
1518: add-ucast-local ls1, overwrite                  ok
1519: add-ucast-local ls1, del-ucast-local ls1        ok
1520: add-ucast-remote ls1                            ok
1521: add-ucast-remote ls1, overwrite                 ok
1522: add-ucast-remote ls1, del-ucast-remote ls1      ok
1523: add-ucast-local ls1, add-ucast-remote ls1       ok
1524: add-mcast-local ls1                             ok
1525: add-mcast-local ls1, del-mcast-local ls1        ok
1526: add-mcast-remote ls1                            ok
1527: add-mcast-remote ls1, del-mcast-remote ls1      ok
1528: add-mcast-local ls1, add-mcast-remote ls1       ok
1529: add local and remote macs, clear-local-macs     ok
1530: add local and remote macs, clear-remote-macs    ok

vtep-ctl unit tests -- manager commands

1531: managers                                        ok

## ------------- ##
## Test results. ##
## ------------- ##

ERROR: 1526 tests were run,
21 failed (1 expected failure).
5 tests were skipped.
## -------------------------- ##
## testsuite.log was created. ##
## -------------------------- ##

Please send `tests/testsuite.log' and all information you think might help:

   To: <bugs@openvswitch.org>
   Subject: [openvswitch 2.3.2] testsuite: 5 12 31 578 579 580 581 582 583 584 586 588 774 775 811 817 818 1472 1473 1480 failed

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below `tests/testsuite.dir'.

Makefile:4555: recipe for target 'check-local' failed
make[4]: *** [check-local] Error 1
make[4]: Leaving directory '$(@D)'
Makefile:3880: recipe for target 'check-am' failed
make[3]: *** [check-am] Error 2
make[3]: Leaving directory '$(@D)'
Makefile:3589: recipe for target 'check-recursive' failed
make[2]: *** [check-recursive] Error 1
make[2]: Leaving directory '$(@D)'
Makefile:3883: recipe for target 'check' failed
make[1]: *** [check] Error 2
make[1]: Leaving directory '$(@D)'
