make[1]: Entering directory `$(@D)'
/usr/gnu/bin/make  check-recursive
make[2]: Entering directory `$(@D)'
Making check in datapath
make[3]: Entering directory `$(@D)/datapath'
make[4]: Entering directory `$(@D)/datapath'
make[4]: Nothing to be done for `check-am'.
make[4]: Leaving directory `$(@D)/datapath'
make[3]: Leaving directory `$(@D)/datapath'
make[3]: Entering directory `$(@D)'
/usr/gnu/bin/make  tests/flowgen.pl tests/testpki-cacert.pem tests/testpki-cert.pem tests/testpki-privkey.pem tests/testpki-req.pem tests/testpki-cert2.pem tests/testpki-privkey2.pem tests/testpki-req2.pem
make[4]: Entering directory `$(@D)'
make[4]: Nothing to be done for `$(SOURCE_DIR)/tests/flowgen.pl'.
rm -f tests/pki/stamp
rm -rf tests/pki
/bin/bash $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log init
Creating controllerca...
Creating switchca...
/bin/bash $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log req+sign tests/pki/test


/bin/bash $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log req+sign tests/pki/test2


: > tests/pki/stamp
cp tests/pki/switchca/cacert.pem tests/testpki-cacert.pem
cp tests/pki/test-cert.pem tests/testpki-cert.pem
cp tests/pki/test-privkey.pem tests/testpki-privkey.pem
cp tests/pki/test-req.pem tests/testpki-req.pem
cp tests/pki/test2-cert.pem tests/testpki-cert2.pem
cp tests/pki/test2-privkey.pem tests/testpki-privkey2.pem
cp tests/pki/test2-req.pem tests/testpki-req2.pem
make[4]: Leaving directory `$(@D)'
/usr/gnu/bin/make  check-local
make[4]: Entering directory `$(@D)'
/bin/bash '$(SOURCE_DIR)/tests/testsuite' -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests 
## ----------------------------- ##
## openvswitch 2.3.1 test suite. ##
## ----------------------------- ##

bfd

  1: bfd - basic config on different bridges         ok
  2: bfd - Verify tunnel down detection              ok
  3: bfd - concatenated path down                    ok
  4: bfd - Edit the Min Tx/Rx values                 ok
  5: bfd - check_tnl_key                             FAILED (bfd.at:226)
  6: bfd - bfd decay                                 ok
  7: bfd - bfd forwarding_if_rx - bfd on one side    ok
  8: bfd - bfd forwarding_if_rx - bfd on both sides  ok
  9: bfd - bfd forwarding_if_rx - with bfd decay     ok
 10: bfd - bfd forwarding_if_rx - demand_rx_bfd      ok
 11: bfd - flap_count                                ok

cfm

 12: cfm - check update ovsdb 1                      FAILED (cfm.at:50)
 13: cfm - check update ovsdb 2                      ok
 14: cfm - demand mode                               ok
 15: cfm - demand_rx_ccm                             ok
 16: cfm - flap_count                                ok
 17: cfm - fault_override                            ok

lacp

 18: lacp - config                                   ok
 19: lacp - multi port config                        ok
 20: lacp - negotiation                              ok

library unit tests

 21: test flow extractor                             ok
 22: test TCP/IP checksumming                        ok
 23: test hash functions                             ok
 24: test hash map                                   ok
 25: test hash index                                 ok
 26: test atomic operations                          ok
 27: test linked lists                               ok
 28: test packet library                             ok
 29: test SHA-1                                      ok
 30: test type properties                            ok
 31: test strtok_r bug fix                           FAILED (library.at:51)
 32: test byte order conversion                      ok
 33: test random number generator                    ok
 34: ctz() function                                  ok
 35: clz() function                                  ok
 36: round_up_pow2() function                        ok
 37: round_down_pow2() function                      ok
 38: count_1bits() function                          ok
 39: log_2_floor() function                          ok
 40: bitwise_copy() function                         ok
 41: bitwise_zero() function                         ok
 42: bitwise_one() function                          ok
 43: bitwise_is_all_zeros() function                 ok
 44: ovs_scan() function                             ok
 45: test unix socket, short pathname - C            ok
 46: test unix socket, long pathname - C             ok
 47: test unix socket, short pathname - Python       ok
 48: test unix socket, long pathname - Python        ok
 49: ovs_assert                                      ok
 50: snprintf                                        ok

heap library

 51: heap library -- insert delete same order        ok
 52: heap library -- insert delete reverse order     ok
 53: heap library -- insert delete every order       ok
 54: heap library -- insert delete same order with dups ok
 55: heap library -- raw insert                      ok
 56: heap library -- raw delete                      ok

bundle link selection

 57: hrw bundle link selection                       ok
 58: active_backup bundle link selection             ok
 59: hrw bundle single link selection                ok
 60: hrw bundle no link selection                    ok
 61: bundle action missing argument                  ok
 62: bundle action bad fields                        ok
 63: bundle action bad algorithm                     ok
 64: bundle action bad slave type                    ok
 65: bundle action bad slave delimiter               ok

flow classifier unit tests

 66: flow classifier - empty                         ok
 67: flow classifier - destroy null                  ok
 68: flow classifier - single rule                   ok
 69: flow classifier - rule replacement              ok
 70: flow classifier - many rules in one list        ok
 71: flow classifier - many rules in one table       ok
 72: flow classifier - many rules in two tables      ok
 73: flow classifier - many rules in five tables     ok

miniflow unit tests

 74: miniflow - miniflow                             ok
 75: miniflow - minimask_has_extra                   ok
 76: miniflow - minimask_combine                     ok

flow classifier lookup segmentation

 77: flow classifier - lookup segmentation           ok

flow classifier prefix lookup

 78: flow classifier - prefix lookup                 ok

struct alignment checker unit tests

 79: check struct tail padding                       ok
 80: check struct internal alignment                 ok
 81: check struct declared size                      ok
 82: check wrong struct's declared size              ok

daemon unit tests - C

 83: daemon                                          ok
 84: daemon --monitor                                ok
 85: daemon --detach                                 ok
 86: daemon --detach --monitor                       ok
 87: daemon --detach startup errors                  ok
 88: daemon --detach --monitor startup errors        ok

daemon unit tests - Python

 89: daemon - Python                                 ok
 90: daemon --monitor - Python                       ok
 91: daemon --monitor restart exit code - Python     ok
 92: daemon --detach - Python                        ok
 93: daemon --detach --monitor - Python              ok
 94: daemon --detach startup errors - Python         ok
 95: daemon --detach --monitor startup errors - Python ok
 96: daemon --detach closes standard fds - Python    ok
 97: daemon --detach --monitor closes standard fds   ok

OpenFlow actions

 98: OpenFlow 1.0 action translation                 ok
 99: OpenFlow 1.1 action translation                 ok
100: OpenFlow 1.1 instruction translation            ok
101: ofp-actions - inconsistent MPLS actions         ok

ofp-print

102: empty                                           ok
103: too short                                       ok
104: wrong OpenFlow version                          ok
105: truncated message                               ok
106: message only uses part of buffer                ok
107: OFPT_HELLO - ordinary                           ok
108: OFPT_HELLO with extra data                      ok
109: OFPT_HELLO with version bitmap                  ok
110: OFPT_HELLO with version bitmap and extra data   ok
111: OFPT_HELLO with higher than supported version   ok
112: OFPT_HELLO with contradictory version bitmaps   ok
113: OFPT_ECHO_REQUEST, empty payload                ok
114: OFPT_ECHO_REQUEST, 5-byte payload               ok
115: OFPT_ECHO_REPLY, empty payload                  ok
116: OFPT_ECHO_REPLY, 5-byte payload                 ok
117: OFPT_FEATURES_REQUEST                           ok
118: OFPT_FEATURES_REPLY - OF1.0                     ok
119: OFPT_FEATURES_REPLY cut off mid-port - OF1.0    ok
120: OFPT_FEATURES_REPLY - OF1.1                     ok
121: OFPT_FEATURES_REPLY cut off mid-port - OF1.1    ok
122: OFPT_FEATURES_REPLY - OF1.2                     ok
123: OFPT_FEATURES_REPLY cut off mid-port - OF1.2    ok
124: OFPT_FEATURES_REPLY - OF1.3                     ok
125: OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 ok
126: OFPT_GET_CONFIG_REQUEST                         ok
127: OFPT_GET_CONFIG_REPLY, most common form         ok
128: OFPT_GET_CONFIG_REPLY, frags and miss_send_len  ok
129: OFPT_PACKET_IN - OF1.0                          ok
130: OFPT_PACKET_IN - OF1.0, with hex output of packet data ok
131: OFPT_PACKET_IN - OF1.1                          ok
132: OFPT_PACKET_IN - OF1.2                          ok
133: OFPT_PACKET_IN - OF1.2, with hex output of packet data ok
134: OFPT_PACKET_IN - OF1.3                          ok
135: OFPT_PACKET_IN - OF1.3, with hex output of packet data ok
136: OFPT_FLOW_REMOVED - OF1.0                       ok
137: OFPT_FLOW_REMOVED - OF1.2                       ok
138: OFPT_FLOW_REMOVED - OF1.3                       ok
139: OFPT_PORT_STATUS - OF1.0                        ok
140: OFPT_PORT_STATUS - OF1.1                        ok
141: OFPT_PORT_STATUS - OF1.4                        ok
142: OFPT_PACKET_OUT - OF1.0                         ok
143: OFPT_PACKET_OUT - OF1.0, with packet            ok
144: OFPT_PACKET_OUT - OF1.0, with hex output of packet data ok
145: OFPT_PACKET_OUT - OF1.1                         ok
146: OFPT_PACKET_OUT - OF1.1, with packet            ok
147: OFPT_FLOW_MOD - OF1.0 - low verbosity           ok
148: OFPT_FLOW_MOD - OF1.1 - low verbosity           ok
149: OFPT_FLOW_MOD - OF1.2 - low verbosity           ok
150: OFPT_FLOW_MOD - OF1.0 - high verbosity          ok
151: OFPT_FLOW_MOD - OF1.2 - low verbosity           ok
152: OFPT_FLOW_MOD - OF1.3 - flags - low verbosity   ok
153: OFPT_FLOW_MOD - OF1.2 - set-field ip_src        ok
154: OFPT_FLOW_MOD - OF1.2 - set-field ip_dst        ok
155: OFPT_FLOW_MOD - OF1.2 - set-field sctp_src      ok
156: OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst      ok
157: OFPT_FLOW_MOD - OF1.3 - meter                   ok
158: OFPT_FLOW reply - OF1.2 - set-field ip_src      ok
159: OFPT_FLOW reply - OF1.2 - set-field ip_dst      ok
160: OFPT_FLOW reply - OF1.2 - set-field sctp_src    ok
161: OFPT_FLOW reply - OF1.2 - set-field sctp_dst    ok
162: OFPT_PORT_MOD - OF1.0                           ok
163: OFPT_PORT_MOD - OF1.1                           ok
164: OFPT_PORT_MOD - OF1.2                           ok
165: OFPT_PORT_MOD - OF1.3                           ok
166: OFPT_PORT_MOD - OF1.4                           ok
167: OFPT_TABLE_MOD - OF1.1                          ok
168: OFPT_TABLE_MOD - OF1.2                          ok
169: OFPT_TABLE_MOD - OF1.3                          ok
170: OFPT_TABLE_MOD - OF1.4                          ok
171: OFPST_DESC request                              ok
172: OFPST_DESC reply                                ok
173: OFPST_FLOW request - OF1.0                      ok
174: OFPST_FLOW request - OF1.2                      ok
175: OFPST_FLOW request - OF1.3                      ok
176: OFPST_FLOW reply - OF1.0                        ok
177: OFPST_FLOW reply - OF1.2                        ok
178: OFPST_AGGREGATE request - OF1.0                 ok
179: OFPST_AGGREGATE request - OF1.2                 ok
180: OFPST_AGGREGATE request - OF1.3                 ok
181: OFPST_AGGREGATE reply - OF1.0                   ok
182: OFPST_AGGREGATE reply - OF1.2                   ok
183: OFPST_AGGREGATE reply - OF1.3                   ok
184: OFPST_TABLE request - OF1.0                     ok
185: OFPST_TABLE request - OF1.1                     ok
186: OFPST_TABLE request - OF1.2                     ok
187: OFPST_TABLE request - OF1.3                     ok
188: OFPST_TABLE reply - OF1.0                       ok
189: OFPST_TABLE reply - OF1.2                       ok
190: OFPST_TABLE reply - OF1.3                       ok
191: OFPST_PORT request - 1.0                        ok
192: OFPST_PORT request - 1.1                        ok
193: OFPST_PORT request - 1.2                        ok
194: OFPST_PORT request - 1.3                        ok
195: OFPST_PORT reply - OF1.0                        ok
196: OFPST_PORT reply - OF1.2                        ok
197: OFPST_PORT reply - OF1.3                        ok
198: OFPST_PORT reply - OF1.4                        ok
199: OFPST_QUEUE request - OF1.0                     ok
200: OFPST_QUEUE request - OF1.1                     ok
201: OFPST_QUEUE request - OF1.2                     ok
202: OFPST_QUEUE request - OF1.3                     ok
203: OFPST_QUEUE reply - OF1.0                       ok
204: OFPST_QUEUE reply - OF1.1                       ok
205: OFPST_QUEUE reply - OF1.2                       ok
206: OFPST_QUEUE reply - OF1.3                       ok
207: OFPST_QUEUE reply - OF1.4                       ok
208: OFPST_GROUP request                             ok
209: OFPST_GROUP reply - OF1.1                       ok
210: OFPST_GROUP reply - OF1.3                       ok
211: OFPST_GROUP_DESC request - OF1.1                ok
212: OFPST_GROUP_DESC request - OF1.5                ok
213: OFPST_GROUP_DESC reply                          ok
214: OFPST_GROUP_FEATURES request                    ok
215: OFPST_GROUP_FEATURES reply                      ok
216: OFPST_PORT_DESC request - OF1.0                 ok
217: OFPST_PORT_DESC request - OF1.5                 ok
218: OFPST_PORT_DESC reply - OF1.0                   ok
219: OFPST_PORT_DESC reply - OF1.4                   ok
220: OFPT_METER_MOD request - OF1.3                  ok
221: OFPT_METER_MOD request - bad band - OF1.3       ok
222: OFPT_METER_MOD request - bad command - OF1.3    ok
223: OFPT_METER_MOD request - bad flags - OF1.3      ok
224: OFPST_METER request - OF1.3                     ok
225: OFPST_METER_CONFIG request - OF1.3              ok
226: OFPST_METER_FEATURES request - OF1.3            ok
227: OFPST_METER_FEATURES reply - OF1.3              ok
228: OFPST_METER_CONFIG reply - OF1.3                ok
229: OFPST_METER reply - OF1.3                       ok
230: OFPST_TABLE_FEATURES request - OF1.3            ok
231: OFPT_BARRIER_REQUEST - OF1.0                    ok
232: OFPT_BARRIER_REQUEST - OF1.1                    ok
233: OFPT_BARRIER_REQUEST - OF1.2                    ok
234: OFPT_BARRIER_REQUEST - OF1.3                    ok
235: OFPT_BARRIER_REPLY - OF1.0                      ok
236: OFPT_BARRIER_REPLY - OF1.1                      ok
237: OFPT_BARRIER_REPLY - OF1.2                      ok
238: OFPT_BARRIER_REPLY - OF1.3                      ok
239: OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0           ok
240: OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2           ok
241: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0             ok
242: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2             ok
243: OFPT_SET_ASYNC - OF1.3                          ok
244: OFPT_ROLE_REQUEST - OF1.2                       ok
245: OFPT_ROLE_REQUEST - nochange - OF1.2            ok
246: NXT_ROLE_REQUEST                                ok
247: OFPT_ROLE_REPLY - OF1.2                         ok
248: NXT_ROLE_REPLY                                  ok
249: OFP_ROLE_STATUS - master, experimenter - OF1.4  ok
250: OFP_ROLE_STATUS - master, config - OF1.4        ok
251: OFP_ROLE_STATUS - master, config,generation - OF1.4 ok
252: NXT_SET_PACKET_IN                               ok
253: NXT_PACKET_IN                                   ok
254: NXT_PACKET_IN, with hex output of packet data   ok
255: NXT_SET_ASYNC_CONFIG                            ok
256: NXT_SET_CONTROLLER_ID                           ok
257: NXT_FLOW_MONITOR_CANCEL                         ok
258: NXT_FLOW_MONITOR_PAUSED                         ok
259: NXT_FLOW_MONITOR_RESUMED                        ok
260: NXT_SET_FLOW_FORMAT                             ok
261: NXT_FLOW_MOD, low verbosity                     ok
262: NXT_FLOW_MOD, high verbosity                    ok
263: OFPT_GROUP_MOD                                  ok
264: NXT_FLOW_REMOVED                                ok
265: NXT_FLOW_MOD_TABLE_ID                           ok
266: NXST_FLOW request                               ok
267: NXST_FLOW reply                                 ok
268: NXST_AGGREGATE request                          ok
269: NXST_AGGREGATE reply                            ok
270: NXST_FLOW_MONITOR request                       ok
271: NXST_FLOW_MONITOR reply                         ok
272: OFPT_BUNDLE_CONTROL - OPEN_REQUEST              ok
273: OFPT_BUNDLE_CONTROL - OPEN_REQUEST              ok
274: OFPT_BUNDLE_CONTROL - OPEN_REQUEST              ok
275: OFPT_BUNDLE_CONTROL - OPEN_REPLY                ok
276: OFPT_BUNDLE_CONTROL - CLOSE_REQUEST             ok
277: OFPT_BUNDLE_CONTROL - CLOSE_REPLY               ok
278: OFPT_BUNDLE_CONTROL - COMMIT_REQUEST            ok
279: OFPT_BUNDLE_CONTROL - COMMIT_REPLY              ok
280: OFPT_BUNDLE_CONTROL - DISCARD_REQUEST           ok
281: OFPT_BUNDLE_CONTROL - DISCARD_REPLY             ok
282: OFPT_BUNDLE_ADD_MESSAGE - OFPT_HELLO            ok

OpenFlow utilities

283: encoding hellos                                 ok

ofp-errors tests

284: OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 ok
285: OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 ok
286: OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0  ok
287: OFPT_ERROR prints type of truncated inner messages ok
288: OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0  ok
289: OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1  ok
290: OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0    ok
291: OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1  ok
292: encoding OFPBIC_* experimenter errors           ok
293: encoding errors extension that became official  ok
294: decoding OFPBIC_* experimenter errors           ok
295: decoding experimenter errors                    ok
296: encoding experimenter errors                    ok

ovs-ofctl

297: ovs-ofctl parse-flows choice of protocol        ok
298: ovs-ofctl parse-flows (OpenFlow 1.0)            ok
299: ovs-ofctl parse-flows (OpenFlow 1.1)            ok
300: ovs-ofctl parse-flows (OpenFlow 1.2)            ok
301: ovs-ofctl parse-flow with invalid mask          ok
302: ovs-ofctl action inconsistency (OpenFlow 1.1)   ok
303: ovs-ofctl parse-flows (With Tunnel-Parameters)  ok
304: ovs-ofctl parse-flows (skb_priority)            ok
305: ovs-ofctl parse-flows (NXM)                     ok
306: ovs-ofctl -F nxm parse-flows                    ok
307: ovs-ofctl -F nxm -mmm parse-flows               ok
308: ovs-ofctl parse-nx-match                        ok
309: ovs-ofctl parse-ofp10-match                     ok
310: ovs-ofctl parse-ofp11-match                     ok
311: ovs-ofctl parse-nx-match loose                  ok
312: ovs-ofctl parse-oxm                             ok
313: ovs-ofctl parse-oxm loose                       ok
314: check TCP flags expression in OXM and NXM       ok
315: ovs-ofctl check-vlan                            ok
316: ovs-ofctl -F option and NXM features            ok
317: ovs-ofctl -F option with flow_mods              ok
318: ovs-ofctl dump-flows honors -F option           ok
319: ovs-ofctl dump-flows rejects bad -F option      ok
320: ovs-ofctl add-flow reports non-normalized flows ok
321: ovs-ofctl dump-flows with sorting               ok
322: ovs-ofctl diff-flows                            ok
323: ovs-ofctl diff-flows - suppress false differences ok
324: ovs-ofctl -F and -O interaction                 ok
325: ovs-ofctl ofp-parse                             ok
326: tcp flags - filtering                           ok

datapath parsing and formatting

327: OVS datapath key parsing and formatting - valid forms ok
328: OVS datapath wildcarded key parsing and formatting - valid forms ok
329: OVS datapath wildcarded key filtering.          ok
330: OVS datapath actions parsing and formatting - valid forms ok

multipath link selection

331: modulo_n multipath link selection               ok
332: hash_threshold multipath link selection         ok
333: hrw multipath link selection                    ok
334: iter_hash multipath link selection              ok
335: multipath action missing argument               ok
336: multipath action bad fields                     ok
337: multipath action bad algorithm                  ok
338: multipath action bad n_links                    ok
339: multipath action destination too narrow         ok

learning action

340: learning action - parsing and formatting        ok
341: learning action - parsing and formatting - illegal in_port_oxm ok
342: learning action - parsing and formatting - OXM  ok
343: learning action - examples                      ok
344: learning action - satisfied prerequisites       ok
345: learning action - invalid prerequisites         ok
346: learning action - standard VLAN+MAC learning    ok
347: learning action - learn refreshes hard_age      ok
348: learning action - TCPv4 port learning           ok
349: learning action - TCPv6 port learning           ok
350: learning action - self-modifying flow           ok
351: learning action - self-modifying flow with idle_timeout ok
352: learning action - self-modifying flow with hard_timeout ok
353: learning action - fin_timeout feature           ok

vconn library -- unix class

354: unix vconn - refuse connection                  ok
355: unix vconn - accept then close                  ok
356: unix vconn - read hello                         ok
357: unix vconn - send plain hello                   ok
358: unix vconn - send long hello                    ok
359: unix vconn - send echo hello                    ok
360: unix vconn - send short hello                   ok
361: unix vconn - send invalid version hello         ok

vconn library -- tcp class

362: tcp vconn - refuse connection                   ok
363: tcp vconn - accept then close                   ok
364: tcp vconn - read hello                          ok
365: tcp vconn - send plain hello                    ok
366: tcp vconn - send long hello                     ok
367: tcp vconn - send echo hello                     ok
368: tcp vconn - send short hello                    ok
369: tcp vconn - send invalid version hello          ok

vconn library -- ssl class

370: ssl vconn - refuse connection                   ok
371: ssl vconn - accept then close                   ok
372: ssl vconn - read hello                          ok
373: ssl vconn - send plain hello                    ok
374: ssl vconn - send long hello                     ok
375: ssl vconn - send echo hello                     ok
376: ssl vconn - send short hello                    ok
377: ssl vconn - send invalid version hello          ok

test dir_name and base_name functions

378: components of "/usr/lib" are "/usr", "lib"      ok
379: components of "/usr/" are "/", "usr"            ok
380: components of "usr" are ".", "usr"              ok
381: components of "/" are "/", "/"                  ok
382: components of "." are ".", "."                  ok
383: components of ".." are ".", ".."                ok
384: components of "//" are "//", "//"               ok
385: components of "//foo" are "//", "foo"           ok
386: components of "" are ".", "."                   ok
387: components of "dir/file" are "dir", "file"      ok
388: components of "dir/file/" are "dir", "file"     ok
389: components of "dir/file//" are "dir", "file"    ok
390: components of "///foo" are "/", "foo"           ok

test follow_symlinks function

391: follow_symlinks - relative symlinks             ok
392: follow_symlinks - absolute symlinks             ok
393: follow_symlinks - symlinks to directories       ok
394: follow_symlinks - nonexistent targets           ok
395: follow_symlinks - regular files                 ok
396: follow_symlinks - device targets                skipped (file_name.at:98)
397: follow_symlinks - nonexistent files             ok
398: follow_symlinks - symlink loop                  ok

AES-128 unit tests

399: wikipedia test vector 1                         ok
400: wikipedia test vector 2                         ok
401: NIST KAT ECBKeySbox128e vector 0                ok
402: NIST KAT ECBKeySbox128e vector 1                ok
403: NIST KAT ECBKeySbox128e vector 2                ok
404: NIST KAT ECBKeySbox128e vector 3                ok
405: NIST KAT ECBKeySbox128e vector 4                ok
406: NIST KAT ECBKeySbox128e vector 5                ok
407: NIST KAT ECBKeySbox128e vector 6                ok
408: NIST KAT ECBKeySbox128e vector 7                ok
409: NIST KAT ECBKeySbox128e vector 8                ok
410: NIST KAT ECBKeySbox128e vector 9                ok
411: NIST KAT ECBKeySbox128e vector 10               ok
412: NIST KAT ECBKeySbox128e vector 11               ok
413: NIST KAT ECBKeySbox128e vector 12               ok
414: NIST KAT ECBKeySbox128e vector 13               ok
415: NIST KAT ECBKeySbox128e vector 14               ok
416: NIST KAT ECBKeySbox128e vector 15               ok
417: NIST KAT ECBKeySbox128e vector 16               ok
418: NIST KAT ECBKeySbox128e vector 17               ok
419: NIST KAT ECBKeySbox128e vector 18               ok
420: NIST KAT ECBKeySbox128e vector 19               ok
421: NIST KAT ECBKeySbox128e vector 20               ok

unixctl

422: unixctl ovs-vswitchd exit - Python              ok
423: unixctl ovs-vswitchd help - Python              ok
424: unixctl ovs-vswitchd arguments - Python         ok
425: unixctl bad target - Python                     ok
426: unixctl server - Python                         ok
427: unixctl server errors - Python                  ok

UUID unit tests

428: UUID generation, parsing, serialization         ok

JSON -- arrays

429: empty array - C                                 ok
430: empty array - Python                            ok
431: single-element array - C                        ok
432: single-element array - Python                   ok
433: 2-element array - C                             ok
434: 2-element array - Python                        ok
435: many-element array - C                          ok
436: many-element array - Python                     ok
437: missing comma - C                               ok
438: missing comma - Python                          ok
439: trailing comma not allowed - C                  ok
440: trailing comma not allowed - Python             ok
441: doubled comma not allowed - C                   ok
442: doubled comma not allowed - Python              ok

JSON -- strings

443: empty string - C                                ok
444: empty string - Python                           ok
445: 1-character strings - C                         ok
446: 1-character strings - Python                    ok
447: escape sequences - C                            ok
448: escape sequences - Python                       ok
449: Unicode escape sequences - C                    ok
450: Unicode escape sequences - Python               ok
451: surrogate pairs - C                             ok
452: surrogate pairs - Python                        expected failure (json.at:93)
453: a string by itself is not valid JSON - C        ok
454: a string by itself is not valid JSON - Python   ok
455: end of line in quoted string - C                ok
456: end of line in quoted string - Python           ok
457: formfeed in quoted string - C                   ok
458: formfeed in quoted string - Python              ok
459: bad escape in quoted string - C                 ok
460: bad escape in quoted string - Python            ok
461: \u must be followed by 4 hex digits (1) - C     ok
462: \u must be followed by 4 hex digits (1) - Python ok
463: \u must be followed by 4 hex digits (2) - C     ok
464: \u must be followed by 4 hex digits (2) - Python ok
465: isolated leading surrogate not allowed - C      ok
466: isolated leading surrogate not allowed - Python ok
467: surrogatess must paired properly - C            ok
468: surrogatess must paired properly - Python       ok
469: null bytes not allowed - C                      ok
470: null bytes not allowed - Python                 ok
471: properly quoted backslash at end of string - C  ok
472: properly quoted backslash at end of string - Python ok
473: stray backslash at end of string - C            ok
474: stray backslash at end of string - Python       ok
475: end of input in quoted string - C               ok
476: end of input in quoted string - Python          ok

JSON -- objects

477: empty object - C                                ok
478: empty object - Python                           ok
479: simple object - C                               ok
480: simple object - Python                          ok
481: bad value - C                                   ok
482: bad value - Python                              ok
483: missing colon - C                               ok
484: missing colon - Python                          ok
485: missing comma - C                               ok
486: missing comma - Python                          ok
487: trailing comma not allowed - C                  ok
488: trailing comma not allowed - Python             ok
489: doubled comma not allowed - C                   ok
490: doubled comma not allowed - Python              ok
491: names must be strings - C                       ok
492: names must be strings - Python                  ok

JSON -- literal names

493: null - C                                        ok
494: null - Python                                   ok
495: false - C                                       ok
496: false - Python                                  ok
497: true - C                                        ok
498: true - Python                                   ok
499: a literal by itself is not valid JSON - C       ok
500: a literal by itself is not valid JSON - Python  ok
501: nullify is invalid - C                          ok
502: nullify is invalid - Python                     ok
503: nubs is invalid - C                             ok
504: nubs is invalid - Python                        ok
505: xxx is invalid - C                              ok
506: xxx is invalid - Python                         ok

JSON -- numbers

507: integers expressed as reals - C                 ok
508: integers expressed as reals - Python            ok
509: large integers - C                              ok
510: large integers - Python                         ok
511: large integers expressed as reals - C           ok
512: large integers expressed as reals - Python      ok
513: large integers that overflow to reals - C       ok
514: large integers that overflow to reals - Python  ok
515: negative zero - C                               ok
516: negative zero - Python                          ok
517: reals - C                                       ok
518: reals - Python                                  ok
519: scientific notation - C                         ok
520: scientific notation - Python                    ok
521: +/- DBL_MAX - C                                 ok
522: +/- DBL_MAX - Python                            ok
523: negative reals - C                              ok
524: negative reals - Python                         ok
525: negative scientific notation - C                ok
526: negative scientific notation - Python           ok
527: 1e-9999 underflows to 0 - C                     ok
528: 1e-9999 underflows to 0 - Python                ok
529: a number by itself is not valid JSON - C        ok
530: a number by itself is not valid JSON - Python   ok
531: leading zeros not allowed - C                   ok
532: leading zeros not allowed - Python              ok
533: 1e9999 is too big - C                           ok
534: 1e9999 is too big - Python                      ok
535: exponent bigger than INT_MAX - C                ok
536: exponent bigger than INT_MAX - Python           ok
537: decimal point must be followed by digit - C     ok
538: decimal point must be followed by digit - Python ok
539: exponent must contain at least one digit (1) - C ok
540: exponent must contain at least one digit (1) - Python ok
541: exponent must contain at least one digit (2) - C ok
542: exponent must contain at least one digit (2) - Python ok
543: exponent must contain at least one digit (3) - C ok
544: exponent must contain at least one digit (3) - Python ok

JSON -- RFC 4627 examples

545: RFC 4267 object example - C                     ok
546: RFC 4267 object example - Python                ok
547: RFC 4267 array example - C                      ok
548: RFC 4267 array example - Python                 ok

JSON -- pathological cases

549: trailing garbage - C                            ok
550: trailing garbage - Python                       ok
551: formfeeds are not valid white space - C         ok
552: formfeeds are not valid white space - Python    ok
553: ';' is not a valid token - C                    ok
554: ';' is not a valid token - Python               ok
555: arrays nesting too deep - C                     ok
556: arrays nesting too deep - Python                ok
557: objects nesting too deep - C                    ok
558: objects nesting too deep - Python               ok
559: input may not be empty                          ok

JSON -- multiple inputs

560: multiple adjacent objects - C                   ok
561: multiple adjacent objects - Python              ok
562: multiple space-separated objects - C            ok
563: multiple space-separated objects - Python       ok
564: multiple objects on separate lines - C          ok
565: multiple objects on separate lines - Python     ok
566: multiple objects and arrays - C                 ok
567: multiple objects and arrays - Python            ok
568: garbage between multiple objects - C            ok
569: garbage between multiple objects - Python       ok
570: garbage after multiple objects - C              ok
571: garbage after multiple objects - Python         ok

JSON-RPC - C

572: JSON-RPC request and successful reply           ok
573: JSON-RPC request and error reply                ok
574: JSON-RPC notification                           ok

JSON-RPC - Python

575: JSON-RPC request and successful reply - Python  ok
576: JSON-RPC request and error reply - Python       ok
577: JSON-RPC notification - Python                  ok

tunnel

578: tunnel - input                                  FAILED (tunnel.at:4)
579: tunnel - ECN decapsulation                      FAILED (tunnel.at:65)
580: tunnel - output                                 FAILED (tunnel.at:112)
581: tunnel - ToS and TTL inheritance                FAILED (tunnel.at:144)
582: tunnel - set_tunnel                             FAILED (tunnel.at:182)
583: tunnel - key                                    FAILED (tunnel.at:216)
584: tunnel - key match                              FAILED (tunnel.at:265)
585: tunnel - VXLAN                                  ok
586: tunnel - LISP                                   FAILED (tunnel.at:326)
587: tunnel - different VXLAN UDP port               ok
588: ofproto-dpif - set_field - tun_src/tun_dst/tun_id FAILED (tunnel.at:367)

lockfile unit tests

589: lock and unlock                                 ok
590: lock and unlock twice                           ok
591: lock blocks same process                        ok
592: lock blocks same process twice                  ok
593: lock blocks other process                       ok
594: lock twice blocks other process                 ok
595: lock and unlock allows other process            ok
596: lock multiple                                   ok
597: lock symlink                                    ok
598: lock symlink to dir                             ok

reconnect library

599: nothing happens if not enabled - C              ok
600: nothing happens if not enabled - Python         ok
601: quick connect, idle disconnect - C              ok
602: quick connect, idle disconnect - Python         ok
603: slow connect, idle disconnect - C               ok
604: slow connect, idle disconnect - Python          ok
605: connect backs off - C                           ok
606: connect backs off - Python                      ok
607: connections with no data preserve backoff - C   ok
608: connections with no data preserve backoff - Python ok
609: brief connection preserves backoff - C          ok
610: brief connection preserves backoff - Python     ok
611: brief connection with data preserves backoff - C ok
612: brief connection with data preserves backoff - Python ok
613: long connection resets backoff - C              ok
614: long connection resets backoff - Python         ok
615: connection attempt fails quickly - C            ok
616: connection attempt fails quickly - Python       ok
617: max-tries of 1 honored - C                      ok
618: max-tries of 1 honored - Python                 ok
619: max-tries of 0 honored - C                      ok
620: max-tries of 0 honored - Python                 ok
621: passive mode - C                                ok
622: passive mode - Python                           ok

ovs-vswitchd

623: ovs-vswitchd detaches correctly with empty db   ok
624: ovs-vswitchd -- stats-update-interval           ok
625: ovs-vswitchd -- start additional ovs-vswitchd process ok
626: ovs-vswitchd -- switch over to another ovs-vswitchd process ok
627: ovs-vswitchd -- invalid database path           ok

ofproto

628: ofproto - echo request                          ok
629: ofproto - handling messages with bad version    ok
630: ofproto - feature request, config request       ok
631: ofproto - set OpenFlow port number              ok
632: ofproto - port stats - (OpenFlow 1.0)           ok
633: ofproto - port stats - (OpenFlow 1.2)           ok
634: ofproto - port stats - (OpenFlow 1.4)           ok
635: ofproto - port-desc stats (OpenFlow 1.0)        ok
636: ofproto - port-desc stats (OpenFlow 1.2)        ok
637: ofproto - port-desc stats (OpenFlow 1.5)        ok
638: ofproto - queue stats - (OpenFlow 1.0)          ok
639: ofproto - queue stats - (OpenFlow 1.2)          ok
640: ofproto - queue stats - (OpenFlow 1.4)          ok
641: ofproto - queue configuration - (OpenFlow 1.0)  ok
642: ofproto - queue configuration - (OpenFlow 1.2)  ok
643: ofproto - del group                             ok
644: ofproto - del group deletes flows               ok
645: ofproto - flow mod checks group availability    ok
646: ofproto - group description                     ok
647: ofproto - group description                     ok
648: ofproto - group features                        ok
649: ofproto - group stats                           ok
650: ofproto - mod-port (OpenFlow 1.0)               ok
651: ofproto - mod-port (OpenFlow 1.2)               ok
652: ofproto - mod-port (OpenFlow 1.4)               ok
653: ofproto - basic flow_mod commands (NXM)         ok
654: ofproto - basic flow_mod commands (OpenFlow 1.0) ok
655: ofproto - basic flow_mod commands (OpenFlow 1.1) ok
656: ofproto - flow_mod negative test (OpenFlow 1.1) ok
657: ofproto - set-field flow_mod commands (NXM)     ok
658: ofproto - basic flow_mod commands (OpenFlow 1.2) ok
659: ofproto - dump flows with cookie                ok
660: ofproto - mod flow with cookie change (OpenFlow 1.0) ok
661: ofproto - mod flow with cookie change (NXM)     ok
662: ofproto - no mod flow with cookie change (OpenFlow 1.1) ok
663: ofproto - no mod flow with cookie change (OpenFlow 1.2) ok
664: ofproto - mod flows based on cookie mask (OpenFlow 1.0) ok
665: ofproto - mod flows based on cookie mask (OpenFlow 1.1) ok
666: ofproto - mod flows based on cookie mask (OpenFlow 1.2) ok
667: ofproto - mod flows based on cookie mask with cookie change ok
668: ofproto - mod flow with cookie miss (mask==0) - NXM ok
669: ofproto - mod flow with cookie miss (mask==0) - OF1.1 ok
670: ofproto - mod flow with cookie miss (mask==0) - OF1.2 ok
671: ofproto - mod flow with cookie miss (mask!=0) - NXM ok
672: ofproto - mod flow with cookie miss (mask!=0) - OF1.1 ok
673: ofproto - mod flow with cookie miss (mask!=0) - OF1.2 ok
674: ofproto - del flows with cookies                ok
675: ofproto - del flows based on cookie             ok
676: ofproto - del flows based on cookie mask        ok
677: ofproto - del flows based on table id (NXM)     ok
678: ofproto - del flows based on table id (OpenFlow 1.1) ok
679: ofproto - del flows based on table id (OpenFlow 1.2) ok
680: ofproto - flow table configuration (OpenFlow 1.0) ok
681: ofproto - flow table configuration (OpenFlow 1.2) ok
682: ofproto - hard limits on flow table size (OpenFlow 1.0) ok
683: ofproto - hard limits on flow table size (OpenFlow 1.2) ok
684: ofproto - eviction upon table overflow (OpenFlow 1.0) ok
685: ofproto - eviction upon table overflow (OpenFlow 1.2) ok
686: ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) ok
687: ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) ok
688: ofproto - eviction upon table overflow, with modified hard timeout ok
689: ofproto - eviction upon table overflow, with modified idle timeout ok
690: ofproto - asynchronous message control (OpenFlow 1.0) ok
691: ofproto - asynchronous message control (OpenFlow 1.2) ok
692: ofproto - asynchronous message control (OpenFlow 1.3) ok
693: ofproto - controller role (OpenFlow 1.2)        ok
694: ofproto - controller role (OpenFlow 1.4)        ok
695: ofproto - packet-out from controller (OpenFlow 1.0) ok
696: ofproto - packet-out from controller (OpenFlow 1.2) ok
697: ofproto - packet-out from controller (OpenFlow 1.1) ok
698: ofproto - packet-out with metadata (NXM)        ok
699: ofproto - packet-out with metadata (OpenFlow 1.2) ok
700: ofproto - packet-out with tunnel metadata (OpenFlow 1.2) ok
701: ofproto - flow monitoring                       ok
702: ofproto - flow monitoring pause and resume      skipped (ofproto.at:2351)
703: ofproto - event filtering (OpenFlow 1.3)        ok
704: ofproto - ofport_request                        ok
705: ofproto - bundles, open (OpenFlow 1.4)          ok
706: ofproto - bundles, double open (OpenFlow 1.4)   ok
707: ofproto - bundle close without open (OpenFlow 1.4) ok
708: ofproto - bundle double close (OpenFlow 1.4)    ok
709: ofproto - bundle close, different flags (OpenFlow 1.4) ok
710: ofproto - bundle commit without open (OpenFlow 1.4) ok
711: ofproto - bundle commit, different flags (OpenFlow 1.4) ok
712: ofproto - bundle discard without open (OpenFlow 1.4) ok

ofproto-dpif

713: ofproto-dpif - dummy interface                  ok
714: ofproto-dpif, active-backup bonding             ok
715: ofproto-dpif, balance-slb bonding               ok
716: ofproto-dpif, balance-tcp bonding               ok
717: ofproto-dpif - resubmit                         ok
718: ofproto-dpif - goto table                       ok
719: ofproto-dpif - write actions                    ok
720: ofproto-dpif - clear actions                    ok
721: ofproto-dpif - group chaining not supported     ok
722: ofproto-dpif - all group in action list         ok
723: ofproto-dpif - indirect group in action list    ok
724: ofproto-dpif - all group in action set          ok
725: ofproto-dpif - indirect group in action set     ok
726: ofproto-dpif - select group                     ok
727: ofproto-dpif - select group with watch port     ok
728: ofproto-dpif - select group with weight         ok
729: ofproto-dpif - fast failover group              ok
730: ofproto-dpif - registers                        ok
731: ofproto-dpif - push-pop                         ok
732: ofproto-dpif - output                           ok
733: ofproto-dpif - dec_ttl                          ok
734: ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts ok
735: ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts ok
736: ofproto-dpif - note at offset 24 in ofpacts     ok
737: ofproto-dpif - output, OFPP_NONE ingress port   ok
738: ofproto-dpif - DSCP                             ok
739: ofproto-dpif - output/flood flags               ok
740: ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) ok
741: ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) ok
742: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER ok
743: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER ok
744: ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE ok
745: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE ok
746: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE ok
747: ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP ok
748: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP ok
749: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP ok
750: ofproto-dpif - controller                       ok
751: ofproto-dpif - table-miss flow (OpenFlow 1.0)   ok
752: ofproto-dpif - table-miss flow (OpenFlow 1.3)   ok
753: ofproto-dpif - ARP modification slow-path       ok
754: ofproto-dpif - VLAN handling                    ok
755: ofproto-dpif - MPLS handling                    ok
756: ofproto-dpif - VLAN+MPLS handling               ok
757: ofproto-dpif - fragment handling                ok
758: ofproto-dpif - exit                             ok
759: ofproto-dpif - mirroring, select_all            ok
760: ofproto-dpif - mirroring, select_src            ok
761: ofproto-dpif - mirroring, OFPP_NONE ingress port ok
762: ofproto-dpif - mirroring, select_dst            ok
763: ofproto-dpif - mirroring, select_vlan           ok
764: ofproto-dpif - mirroring, output_port           ok
765: ofproto-dpif - mirroring, output_vlan           ok
766: ofproto-dpif - ofproto/trace command 1          ok
767: ofproto-dpif - ofproto/trace command 2          ok
768: ofproto-dpif - ofproto/trace-packet-out         ok
769: ofproto-dpif - MAC learning                     ok
770: ofproto-dpif - MAC table overflow               ok
771: ofproto-dpif - sFlow packet sampling - IPv4 collector FAILED (ofproto-dpif.at:3345)
772: ofproto-dpif - sFlow packet sampling - IPv6 collector FAILED (ofproto-dpif.at:3346)
773: ofproto-dpif - NetFlow flow expiration - IPv4 collector ok
774: ofproto-dpif - NetFlow flow expiration - IPv6 collector ok
775: ofproto-dpif - NetFlow active expiration - IPv4 collector ok
776: ofproto-dpif - NetFlow active expiration - IPv6 collector ok
777: ofproto-dpif - flow stats                       ok
778: ofproto-dpif - flow stats, set-n-threads        ok
779: idle_age and hard_age increase over time        ok
780: ofproto-dpif - fin_timeout                      ok
781: ofproto-dpif - ovs-appctl dpif/dump-dps         ok
782: ofproto-dpif - ovs-appctl dpif/show             ok
783: ofproto-dpif - ovs-appctl dpif/dump-flows       ok
784: ofproto-dpif - MPLS actions that result in a userspace action ok
785: ofproto-dpif - MPLS actions that result in a drop ok
786: ofproto-dpif - patch ports                      ok
787: ofproto-dpif - port duration                    ok

ofproto-dpif -- megaflows

788: ofproto-dpif megaflow - port classification     ok
789: ofproto-dpif megaflow - L2 classification       ok
790: ofproto-dpif megaflow - L3 classification       ok
791: ofproto-dpif megaflow - IPv6 classification     ok
792: ofproto-dpif megaflow - L4 classification       ok
793: ofproto-dpif megaflow - normal                  ok
794: ofproto-dpif megaflow - mpls                    ok
795: ofproto-dpif megaflow - netflow - IPv4 collector ok
796: ofproto-dpif megaflow - netflow - IPv6 collector ok
797: ofproto-dpif megaflow - normal, active-backup bonding ok
798: ofproto-dpif megaflow - normal, balance-slb bonding ok
799: ofproto-dpif megaflow - normal, balance-tcp bonding ok
800: ofproto-dpif megaflow - resubmit port action    ok
801: ofproto-dpif megaflow - resubmit table action   ok
802: ofproto-dpif megaflow - goto_table action       ok
803: ofproto-dpif megaflow - mirroring, select_all   ok
804: ofproto-dpif megaflow - mirroring, select_vlan  ok
805: ofproto-dpif megaflow - move action             ok
806: ofproto-dpif megaflow - push action             ok
807: ofproto-dpif megaflow - learning                ok
808: ofproto-dpif megaflow - tunnels                 FAILED (ofproto-dpif.at:4302)
809: ofproto-dpif megaflow - dec_ttl                 ok
810: ofproto-dpif megaflow - set dl_dst              ok
811: ofproto-dpif megaflow - disabled                ok
812: ofproto-dpif - datapath port number change      ok
813: ofproto - bundle with variable bfd/cfm config   ok
814: ofproto-dpif - ofproto-dpif-monitor 1           FAILED (ofproto-dpif.at:4510)
815: ofproto-dpif - ofproto-dpif-monitor 2           FAILED (ofproto-dpif.at:4561)

ofproto-dpif - flow translation resource limits

816: ofproto-dpif - infinite resubmit                ok
817: ofproto-dpif - exponential resubmit chain       ok
818: ofproto-dpif - too many output actions          ok
819: ofproto-dpif - stack too deep                   ok
820: ofproto-dpif - ICMPv6                           ok

VLAN splinters

821: VLAN splinters                                  ok

OVSDB -- logging

822: create empty, reread                            ok
823: write one, reread                               ok
824: check that create fails if file exists          ok
825: write one, reread                               ok
826: write one, reread, append                       ok
827: write, reread one, overwrite                    ok
828: write, add corrupted data, read                 ok
829: write, add corrupted data, read, overwrite      ok
830: write, corrupt some data, read, overwrite       ok
831: write, truncate file, read, overwrite           ok
832: write bad JSON, read, overwrite                 ok

OVSDB -- atomic types

833: integer - C                                     ok
834: integer - Python                                ok
835: real - C                                        ok
836: real - Python                                   ok
837: boolean - C                                     ok
838: boolean - Python                                ok
839: string - C                                      ok
840: string - Python                                 ok
841: uuid - C                                        ok
842: uuid - Python                                   ok
843: void is not a valid atomic-type - C             ok
844: void is not a valid atomic-type - Python        ok

OVSDB -- base types

845: integer enum - C                                ok
846: integer enum - Python                           ok
847: integer >= 5 - C                                ok
848: integer >= 5 - Python                           ok
849: integer <= 7 - C                                ok
850: integer <= 7 - Python                           ok
851: integer between -5 and 10 - C                   ok
852: integer between -5 and 10 - Python              ok
853: integer max may not be less than min - C        ok
854: integer max may not be less than min - Python   ok
855: real enum - C                                   ok
856: real enum - Python                              ok
857: real >= -1.5 - C                                ok
858: real >= -1.5 - Python                           ok
859: real <= 1e5 - C                                 ok
860: real <= 1e5 - Python                            ok
861: real between -2.5 and 3.75 - C                  ok
862: real between -2.5 and 3.75 - Python             ok
863: real max may not be less than min - C           ok
864: real max may not be less than min - Python      ok
865: boolean - C                                     ok
866: boolean - Python                                ok
867: boolean enum - C                                ok
868: boolean enum - Python                           ok
869: string enum - C                                 ok
870: string enum - Python                            ok
871: string minLength - C                            ok
872: string minLength - Python                       ok
873: string maxLength - C                            ok
874: string maxLength - Python                       ok
875: string minLength and maxLength - C              ok
876: string minLength and maxLength - Python         ok
877: maxLength must not be less than minLength - C   ok
878: maxLength must not be less than minLength - Python ok
879: maxLength must not be negative - C              ok
880: maxLength must not be negative - Python         ok
881: uuid enum - C                                   ok
882: uuid enum - Python                              ok
883: uuid refTable - C                               ok
884: uuid refTable - Python                          ok
885: uuid refTable must be valid id - C              ok
886: uuid refTable must be valid id - Python         ok
887: void is not a valid base-type - C               ok
888: void is not a valid base-type - Python          ok
889: "type" member must be present - C               ok
890: "type" member must be present - Python          ok

OVSDB -- simple types

891: simple integer - C                              ok
892: simple integer - Python                         ok
893: simple real - C                                 ok
894: simple real - Python                            ok
895: simple boolean - C                              ok
896: simple boolean - Python                         ok
897: simple string - C                               ok
898: simple string - Python                          ok
899: simple uuid - C                                 ok
900: simple uuid - Python                            ok
901: integer in object - C                           ok
902: integer in object - Python                      ok
903: real in object with explicit min and max - C    ok
904: real in object with explicit min and max - Python ok
905: key type is required - C                        ok
906: key type is required - Python                   ok
907: void is not a valid type - C                    ok
908: void is not a valid type - Python               ok

OVSDB -- set types

909: optional boolean - C                            ok
910: optional boolean - Python                       ok
911: set of 1 to 3 uuids - C                         ok
912: set of 1 to 3 uuids - Python                    ok
913: set of 0 to 3 strings - C                       ok
914: set of 0 to 3 strings - Python                  ok
915: set of 0 or more integers - C                   ok
916: set of 0 or more integers - Python              ok
917: set of 1 or more reals - C                      ok
918: set of 1 or more reals - Python                 ok
919: set max cannot be less than min - C             ok
920: set max cannot be less than min - Python        ok
921: set max cannot be negative - C                  ok
922: set max cannot be negative - Python             ok
923: set min cannot be negative - C                  ok
924: set min cannot be negative - Python             ok
925: set min cannot be greater than one - C          ok
926: set min cannot be greater than one - Python     ok

OVSDB -- map types

927: map of 1 integer to boolean - C                 ok
928: map of 1 integer to boolean - Python            ok
929: map of 1 boolean to integer, explicit min and max - C ok
930: map of 1 boolean to integer, explicit min and max - Python ok
931: map of 1 to 5 uuid to real - C                  ok
932: map of 1 to 5 uuid to real - Python             ok
933: map of 0 to 10 string to uuid - C               ok
934: map of 0 to 10 string to uuid - Python          ok
935: map of 1 to 20 real to string - C               ok
936: map of 1 to 20 real to string - Python          ok
937: map of 0 or more string to real - C             ok
938: map of 0 or more string to real - Python        ok
939: map key type is required - C                    ok
940: map key type is required - Python               ok

OVSDB -- default values

941: default atoms - C                               ok
942: default atoms - Python                          ok
943: default data - C                                ok
944: default data - Python                           ok

OVSDB -- atoms without constraints

945: integer atom from JSON - C                      ok
946: integer atom from JSON - Python                 ok
947: integer atom from string                        ok
948: real atom from JSON - C                         ok
949: real atom from JSON - Python                    ok
950: real atom from string                           ok
951: boolean atom from JSON - C                      ok
952: boolean atom from JSON - Python                 ok
953: boolean atom from string                        ok
954: string atom from JSON - C                       ok
955: string atom from JSON - Python                  ok
956: string atom from string                         ok
957: uuid atom from JSON - C                         ok
958: uuid atom from JSON - Python                    ok
959: uuid atom from string                           ok
960: integer atom sorting - C                        ok
961: integer atom sorting - Python                   ok
962: real atom sorting - C                           ok
963: real atom sorting - Python                      ok
964: boolean atom sorting - C                        ok
965: boolean atom sorting - Python                   ok
966: string atom sorting - C                         ok
967: string atom sorting - Python                    ok
968: uuid atom sorting - C                           ok
969: uuid atom sorting - Python                      ok
970: real not acceptable integer JSON atom - C       ok
971: real not acceptable integer JSON atom - Python  ok
972: no invalid UTF-8 sequences in strings           ok
973: no invalid UTF-8 sequences in strings - Python  ok
974: real not acceptable integer string atom         ok
975: string "true" not acceptable boolean JSON atom - C ok
976: string "true" not acceptable boolean JSON atom - Python ok
977: string "true" not acceptable boolean string atom ok
978: integer not acceptable string JSON atom - C     ok
979: integer not acceptable string JSON atom - Python ok
980: uuid atom must be expressed as JSON array - C   ok
981: uuid atom must be expressed as JSON array - Python ok
982: named-uuid requires symbol table - C            ok
983: named-uuid requires symbol table - Python       ok
984: empty string atom must be quoted                ok
985: quotes must be balanced                         ok
986: uuids must be valid                             ok

OVSDB -- atoms with enum constraints

987: integer atom enum - C                           ok
988: integer atom enum - Python                      ok
989: real atom enum - C                              ok
990: real atom enum - Python                         ok
991: boolean atom enum - C                           ok
992: boolean atom enum - Python                      ok
993: string atom enum - C                            ok
994: string atom enum - Python                       ok
995: uuid atom enum - C                              ok
996: uuid atom enum - Python                         ok

OVSDB -- atoms with other constraints

997: integers >= 5 - C                               ok
998: integers >= 5 - Python                          ok
999: integers <= -1 - C                              ok
1000: integers <= -1 - Python                         ok
1001: integers in range -10 to 10 - C                 ok
1002: integers in range -10 to 10 - Python            ok
1003: reals >= 5 - C                                  ok
1004: reals >= 5 - Python                             ok
1005: reals <= -1 - C                                 ok
1006: reals <= -1 - Python                            ok
1007: reals in range -10 to 10 - C                    ok
1008: reals in range -10 to 10 - Python               ok
1009: strings at least 2 characters long - C          ok
1010: strings at least 2 characters long - Python     skipped (ovsdb-data.at:458)
1011: strings no more than 2 characters long - C      ok
1012: strings no more than 2 characters long - Python ok

OSVDB -- simple data

1013: integer JSON datum - C                          ok
1014: integer JSON datum - Python                     ok
1015: integer string datum                            ok
1016: real JSON datum - C                             ok
1017: real JSON datum - Python                        ok
1018: real string datum                               ok
1019: boolean JSON datum - C                          ok
1020: boolean JSON datum - Python                     ok
1021: boolean string datum                            ok
1022: string JSON datum - C                           ok
1023: string JSON datum - Python                      ok
1024: string string datum                             ok

OVSDB -- set data

1025: JSON optional boolean - C                       ok
1026: JSON optional boolean - Python                  ok
1027: string optional boolean                         ok
1028: JSON set of 0 or more integers - C              ok
1029: JSON set of 0 or more integers - Python         ok
1030: string set of 0 or more integers                ok
1031: JSON set of 1 to 3 uuids - C                    ok
1032: JSON set of 1 to 3 uuids - Python               ok
1033: string set of 1 to 3 uuids                      ok
1034: JSON set of 0 to 3 strings - C                  ok
1035: JSON set of 0 to 3 strings - Python             ok
1036: string set of 0 to 3 strings                    ok
1037: duplicate boolean not allowed in JSON set - C   ok
1038: duplicate boolean not allowed in JSON set - Python ok
1039: duplicate boolean not allowed in string set     ok
1040: duplicate integer not allowed in JSON set - C   ok
1041: duplicate integer not allowed in JSON set - Python ok
1042: duplicate integer not allowed in string set     ok
1043: duplicate real not allowed in JSON set - C      ok
1044: duplicate real not allowed in JSON set - Python ok
1045: duplicate real not allowed in string set        ok
1046: duplicate string not allowed in JSON set - C    ok
1047: duplicate string not allowed in JSON set - Python ok
1048: duplicate string not allowed in string set      ok
1049: duplicate uuid not allowed in JSON set - C      ok
1050: duplicate uuid not allowed in JSON set - Python ok
1051: duplicate uuid not allowed in string set        ok

OVSDB -- map data

1052: JSON map of 1 integer to boolean - C            ok
1053: JSON map of 1 integer to boolean - Python       ok
1054: string map of 1 integer to boolean              ok
1055: JSON map of at least 1 integer to boolean - C   ok
1056: JSON map of at least 1 integer to boolean - Python ok
1057: string map of at least 1 integer to boolean     ok
1058: JSON map of 1 boolean to integer - C            ok
1059: JSON map of 1 boolean to integer - Python       ok
1060: string map of 1 boolean to integer              ok
1061: JSON map of 1 uuid to real - C                  ok
1062: JSON map of 1 uuid to real - Python             ok
1063: string map of 1 uuid to real                    ok
1064: JSON map of 10 string to string - C             ok
1065: JSON map of 10 string to string - Python        ok
1066: string map of 10 string to string               ok
1067: duplicate integer key not allowed in JSON map - C ok
1068: duplicate integer key not allowed in JSON map - Python ok
1069: duplicate integer key not allowed in string map ok

OVSDB -- columns

1070: ordinary column - C                             ok
1071: ordinary column - Python                        ok
1072: immutable column - C                            ok
1073: immutable column - Python                       ok
1074: ephemeral column - C                            ok
1075: ephemeral column - Python                       ok

OVSDB -- tables

1076: non-root table with one column - C              ok
1077: non-root table with one column - Python         ok
1078: immutable table with one column - C             ok
1079: immutable table with one column - Python        ok
1080: root table with one column - C                  ok
1081: root table with one column - Python             ok
1082: non-root table with default_is_root=true - C    ok
1083: non-root table with default_is_root=true - Python ok
1084: root table with default_is_root=true - C        ok
1085: root table with default_is_root=true - Python   ok
1086: table with maxRows of 2 - C                     ok
1087: table with maxRows of 2 - Python                ok
1088: table with index - C                            ok
1089: table with index - Python                       ok
1090: table with syntax error in index - C            ok
1091: table with syntax error in index - Python       ok
1092: table with empty index - C                      ok
1093: table with empty index - Python                 ok
1094: table with index of ephemeral column - C        ok
1095: table with index of ephemeral column - Python   ok
1096: column names may not begin with _ - C           ok
1097: column names may not begin with _ - Python      ok
1098: table must have at least one column (1) - C     ok
1099: table must have at least one column (1) - Python ok
1100: table must have at least one column (2) - C     ok
1101: table must have at least one column (2) - Python ok
1102: table maxRows must be positive - C              ok
1103: table maxRows must be positive - Python         ok

OVSDB -- rows

1104: row with one string column                      ok
1105: row with one integer column                     ok
1106: row with one real column                        ok
1107: row with one boolean column                     ok
1108: row with one uuid column                        ok
1109: row with set of 1 to 2 elements                 ok
1110: row with map of 1 to 2 elements                 ok
1111: row with several columns                        ok
1112: row hashing (scalars)                           ok
1113: row hashing (sets)                              ok
1114: row hashing (maps)                              ok

OVSDB -- schemas

1115: schema with valid refTables - C                 ok
1116: schema with valid refTables - Python            ok
1117: schema with ephemeral strong references - C     ok
1118: schema with ephemeral strong references - Python ok
1119: schema without version number - C               ok
1120: schema without version number - Python          ok
1121: schema with invalid refTables - C               ok
1122: schema with invalid refTables - Python          ok
1123: schema with invalid version number - C          ok
1124: schema with invalid version number - Python     ok

OVSDB -- conditions

1125: null condition                                  ok
1126: conditions on scalars                           ok
1127: disallowed conditions on scalars                ok
1128: conditions on sets                              ok
1129: condition sorting                               ok
1130: evaluating null condition                       ok
1131: evaluating conditions on integers               ok
1132: evaluating conditions on reals                  ok
1133: evaluating conditions on booleans               ok
1134: evaluating conditions on strings                ok
1135: evaluating conditions on UUIDs                  ok
1136: evaluating conditions on sets                   ok
1137: evaluating conditions on maps (1)               ok
1138: evaluating conditions on maps (2)               ok

OVSDB -- mutations

1139: null mutation                                   ok
1140: mutations on scalars                            ok
1141: disallowed mutations on scalars                 ok
1142: disallowed mutations on immutable columns       ok
1143: mutations on sets                               ok
1144: executing null mutation                         ok
1145: executing mutations on integers                 ok
1146: integer overflow detection                      ok
1147: executing mutations on integers with constraints ok
1148: executing mutations on reals                    ok
1149: real overflow detection                         ok
1150: executing mutations on reals with constraints   ok
1151: executing mutations on integer sets             ok
1152: executing mutations on integer sets with constraints ok
1153: executing mutations on real sets                ok
1154: executing mutations on boolean sets             ok
1155: executing mutations on string sets              ok
1156: executing mutations on uuid sets                ok
1157: executing mutations on integer maps             ok

OVSDB -- queries

1158: queries on scalars                              ok
1159: queries on sets                                 ok
1160: queries on maps (1)                             ok
1161: queries on maps (2)                             ok
1162: UUID-distinct queries on scalars                ok
1163: Boolean-distinct queries on scalars             ok
1164: parse colunn set containing bad name            ok

OVSDB -- transactions

1165: empty table, empty transaction                  ok
1166: nonempty table, empty transaction               ok
1167: insert, commit                                  ok
1168: insert, abort                                   ok
1169: modify, commit                                  ok
1170: modify, abort                                   ok
1171: delete, commit                                  ok
1172: delete, abort                                   ok
1173: modify, delete, commit                          ok
1174: modify, delete, abort                           ok
1175: insert, delete, commit                          ok
1176: insert, delete, abort                           ok
1177: insert, modify, delete, commit                  ok
1178: insert, modify, delete, abort                   ok
1179: deletes are aborted cleanly                     ok

OVSDB -- execution

1180: uuid-name must be <id>                          ok
1181: named-uuid must be <id>                         ok
1182: duplicate uuid-name not allowed                 ok
1183: insert default row, query table                 ok
1184: insert row, query table                         ok
1185: insert rows, query by value                     ok
1186: insert rows, query by named-uuid                ok
1187: insert rows, update rows by value               ok
1188: insert rows, mutate rows                        ok
1189: insert rows, delete by named-uuid               ok
1190: insert rows, delete rows by value               ok
1191: insert rows, delete by (non-matching) value     ok
1192: insert rows, delete all                         ok
1193: insert row, query table, commit                 ok
1194: insert row, query table, commit durably         ok
1195: equality wait with correct rows                 ok
1196: equality wait with extra row                    ok
1197: equality wait with missing row                  ok
1198: inequality wait with correct rows               ok
1199: inequality wait with extra row                  ok
1200: inequality wait with missing row                ok
1201: insert and update constraints                   ok
1202: index uniqueness checking                       ok
1203: referential integrity -- simple                 ok
1204: referential integrity -- mutual references      ok
1205: weak references                                 ok
1206: immutable columns                               ok
1207: garbage collection                              ok

OVSDB -- triggers

1208: trigger fires immediately                       ok
1209: trigger times out                               ok
1210: trigger fires after delay                       ok
1211: delayed trigger modifies database               ok
1212: one delayed trigger wakes up another            ok

OVSDB -- ovsdb-tool

1213: insert default row, query table                 ok
1214: insert row, query table                         ok
1215: insert rows, query by value                     ok
1216: insert rows, query by named-uuid                ok
1217: insert rows, update rows by value               ok
1218: insert rows, mutate rows                        ok
1219: insert rows, delete by named-uuid               ok
1220: insert rows, delete rows by value               ok
1221: insert rows, delete by (non-matching) value     ok
1222: insert rows, delete all                         ok
1223: insert row, query table, commit                 ok
1224: insert row, query table, commit durably         ok
1225: equality wait with correct rows                 ok
1226: equality wait with extra row                    ok
1227: equality wait with missing row                  ok
1228: inequality wait with correct rows               ok
1229: inequality wait with extra row                  ok
1230: inequality wait with missing row                ok
1231: insert and update constraints                   ok
1232: index uniqueness checking                       ok
1233: referential integrity -- simple                 ok
1234: referential integrity -- mutual references      ok
1235: weak references                                 ok
1236: immutable columns                               ok
1237: garbage collection                              ok
1238: transaction comments                            ok
1239: ovsdb-tool compact                              ok
1240: ovsdb-tool convert -- removing a column         ok
1241: ovsdb-tool convert -- adding a column           ok
1242: ovsdb-tool schema-version                       ok
1243: ovsdb-tool db-version                           ok
1244: ovsdb-tool schema-cksum                         ok
1245: ovsdb-tool db-cksum                             ok
1246: ovsdb-tool needs-conversion (no conversion needed) ok
1247: ovsdb-tool needs-conversion (conversion needed) ok

OVSDB -- ovsdb-server transactions (Unix sockets)

1248: insert default row, query table                 ok
1249: insert row, query table                         ok
1250: insert rows, query by value                     ok
1251: insert rows, query by named-uuid                ok
1252: insert rows, update rows by value               ok
1253: insert rows, mutate rows                        ok
1254: insert rows, delete by named-uuid               ok
1255: insert rows, delete rows by value               ok
1256: insert rows, delete by (non-matching) value     ok
1257: insert rows, delete all                         ok
1258: insert row, query table, commit                 ok
1259: insert row, query table, commit durably         ok
1260: equality wait with correct rows                 ok
1261: equality wait with extra row                    ok
1262: equality wait with missing row                  ok
1263: inequality wait with correct rows               ok
1264: inequality wait with extra row                  ok
1265: inequality wait with missing row                ok
1266: insert and update constraints                   ok
1267: index uniqueness checking                       ok
1268: referential integrity -- simple                 ok
1269: referential integrity -- mutual references      ok
1270: weak references                                 ok
1271: immutable columns                               ok
1272: garbage collection                              ok

ovsdb-server miscellaneous features

1273: truncating corrupted database log               ok
1274: truncating database log with bad transaction    ok
1275: ovsdb-client get-schema-version                 ok
1276: database multiplexing implementation            ok
1277: ovsdb-server/add-db and remove-db               ok
1278: ovsdb-server/add-db with --monitor              ok
1279: ovsdb-server/add-db and remove-db with --monitor ok
1280: --remote=db: implementation                     ok
1281: ovsdb-server/add-remote and remove-remote       ok
1282: ovsdb-server/add-remote with --monitor          ok
1283: ovsdb-server/add-remote and remove-remote with --monitor ok
1284: SSL db: implementation                          ok
1285: compacting online                               ok
1286: ovsdb-server combines updates on backlogged connections skipped (ovsdb-server.at:681)

OVSDB -- ovsdb-server transactions (SSL IPv4 sockets)

1287: insert default row, query table                 ok
1288: insert row, query table                         ok
1289: insert rows, query by value                     ok
1290: insert rows, query by named-uuid                ok
1291: insert rows, update rows by value               ok
1292: insert rows, mutate rows                        ok
1293: insert rows, delete by named-uuid               ok
1294: insert rows, delete rows by value               ok
1295: insert rows, delete by (non-matching) value     ok
1296: insert rows, delete all                         ok
1297: insert row, query table, commit                 ok
1298: insert row, query table, commit durably         ok
1299: equality wait with correct rows                 ok
1300: equality wait with extra row                    ok
1301: equality wait with missing row                  ok
1302: inequality wait with correct rows               ok
1303: inequality wait with extra row                  ok
1304: inequality wait with missing row                ok
1305: insert and update constraints                   ok
1306: index uniqueness checking                       ok
1307: referential integrity -- simple                 ok
1308: referential integrity -- mutual references      ok
1309: weak references                                 ok
1310: immutable columns                               ok
1311: garbage collection                              ok

OVSDB -- ovsdb-server transactions (SSL IPv6 sockets)

1312: insert default row, query table                 ok

OVSDB -- ovsdb-server transactions (TCP IPv4 sockets)

1313: ovsdb-client get-schema-version - tcp socket    ok
1314: insert default row, query table                 ok
1315: insert row, query table                         ok
1316: insert rows, query by value                     ok
1317: insert rows, query by named-uuid                ok
1318: insert rows, update rows by value               ok
1319: insert rows, mutate rows                        ok
1320: insert rows, delete by named-uuid               ok
1321: insert rows, delete rows by value               ok
1322: insert rows, delete by (non-matching) value     ok
1323: insert rows, delete all                         ok
1324: insert row, query table, commit                 ok
1325: insert row, query table, commit durably         ok
1326: equality wait with correct rows                 ok
1327: equality wait with extra row                    ok
1328: equality wait with missing row                  ok
1329: inequality wait with correct rows               ok
1330: inequality wait with extra row                  ok
1331: inequality wait with missing row                ok
1332: insert and update constraints                   ok
1333: index uniqueness checking                       ok
1334: referential integrity -- simple                 ok
1335: referential integrity -- mutual references      ok
1336: weak references                                 ok
1337: immutable columns                               ok
1338: garbage collection                              ok

OVSDB -- ovsdb-server transactions (TCP IPv6 sockets)

1339: insert default row, query table                 ok

OVSDB -- transactions on transient ovsdb-server

1340: insert default row, query table                 ok
1341: insert row, query table                         ok
1342: insert rows, query by value                     ok
1343: insert rows, query by named-uuid                ok
1344: insert rows, update rows by value               ok
1345: insert rows, mutate rows                        ok
1346: insert rows, delete by named-uuid               ok
1347: insert rows, delete rows by value               ok
1348: insert rows, delete by (non-matching) value     ok
1349: insert rows, delete all                         ok
1350: insert row, query table, commit                 ok
1351: insert row, query table, commit durably         ok
1352: equality wait with correct rows                 ok
1353: equality wait with extra row                    ok
1354: equality wait with missing row                  ok
1355: inequality wait with correct rows               ok
1356: inequality wait with extra row                  ok
1357: inequality wait with missing row                ok
1358: insert and update constraints                   ok
1359: index uniqueness checking                       ok
1360: referential integrity -- simple                 ok
1361: referential integrity -- mutual references      ok
1362: weak references                                 ok
1363: immutable columns                               ok
1364: garbage collection                              ok

OVSDB -- ovsdb-server monitors

1365: monitor insert into empty table                 ok
1366: monitor insert into populated table             ok
1367: monitor delete                                  ok
1368: monitor row update                              ok
1369: monitor no-op row updates                       ok
1370: monitor insert-and-update transaction           ok
1371: monitor insert-update-and-delete transaction    ok
1372: monitor weak reference change                   ok
1373: monitor insert-update-and-delete transaction    ok

ovsdb -- ovsdb-monitor monitor only some operations

1374: monitor all operations                          ok
1375: monitor initial only                            ok
1376: monitor insert only                             ok
1377: monitor delete only                             ok
1378: monitor modify only                             ok

OVSDB -- interface description language (IDL)

1379: simple idl, initially empty, no ops - C         ok
1380: simple idl, initially empty, no ops - Python    ok
1381: simple idl, initially empty, no ops - Python tcp ok
1382: simple idl, initially empty, no ops - Python tcp6 ok
1383: simple idl, initially empty, various ops - C    ok
1384: simple idl, initially empty, various ops - Python ok
1385: simple idl, initially empty, various ops - Python tcp ok
1386: simple idl, initially empty, various ops - Python tcp6 ok
1387: simple idl, initially populated - C             ok
1388: simple idl, initially populated - Python        ok
1389: simple idl, initially populated - Python tcp    ok
1390: simple idl, initially populated - Python tcp6   ok
1391: simple idl, writing via IDL - C                 ok
1392: simple idl, writing via IDL - Python            ok
1393: simple idl, writing via IDL - Python tcp        ok
1394: simple idl, writing via IDL - Python tcp6       ok
1395: simple idl, handling verification failure - C   ok
1396: simple idl, handling verification failure - Python ok
1397: simple idl, handling verification failure - Python tcp ok
1398: simple idl, handling verification failure - Python tcp6 ok
1399: simple idl, increment operation - C             ok
1400: simple idl, increment operation - Python        ok
1401: simple idl, increment operation - Python tcp    ok
1402: simple idl, increment operation - Python tcp6   ok
1403: simple idl, aborting - C                        ok
1404: simple idl, aborting - Python                   ok
1405: simple idl, aborting - Python tcp               ok
1406: simple idl, aborting - Python tcp6              ok
1407: simple idl, destroy without commit or abort - C ok
1408: simple idl, destroy without commit or abort - Python ok
1409: simple idl, destroy without commit or abort - Python tcp ok
1410: simple idl, destroy without commit or abort - Python tcp6 ok
1411: self-linking idl, consistent ops - C            ok
1412: self-linking idl, consistent ops - Python       ok
1413: self-linking idl, consistent ops - Python tcp   ok
1414: self-linking idl, consistent ops - Python tcp6  ok
1415: self-linking idl, inconsistent ops - C          ok
1416: self-linking idl, inconsistent ops - Python     ok
1417: self-linking idl, inconsistent ops - Python tcp ok
1418: self-linking idl, inconsistent ops - Python tcp6 ok
1419: self-linking idl, sets - C                      ok
1420: self-linking idl, sets - Python                 ok
1421: self-linking idl, sets - Python tcp             ok
1422: self-linking idl, sets - Python tcp6            ok
1423: external-linking idl, consistent ops - C        ok
1424: external-linking idl, consistent ops - Python   ok
1425: external-linking idl, consistent ops - Python tcp ok
1426: external-linking idl, consistent ops - Python tcp6 ok
1427: external-linking idl, insert ops - Python       ok
1428: getattr idl, insert ops - Python                ok

ovs-vsctl unit tests

1429: ovs-vsctl connection retry                      ok

ovs-vsctl unit tests -- real bridges

1430: add-br a                                        ok
1431: add-br a, add-br a                              ok
1432: add-br a, add-br b                              ok
1433: add-br a, add-br b, del-br a                    ok
1434: add-br a, del-br a, add-br a                    ok
1435: add-br a, add-port a a1, add-port a a2          ok
1436: add-br a, add-port a a1, add-port a a1          ok
1437: add-br a b, add-port a a1, add-port b b1, del-br a ok
1438: add-br a, add-bond a bond0 a1 a2 a3             ok
1439: add-br a b, add-port a a1, add-port b b1, del-port a a1 ok
1440: add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 ok
1441: external IDs                                    ok
1442: controllers                                     ok

ovs-vsctl unit tests -- fake bridges (VLAN 9)

1443: simple fake bridge (VLAN 9)                     ok
1444: list bridges -- real and fake (VLAN 9)          ok
1445: simple fake bridge + del-br fake bridge (VLAN 9) ok
1446: simple fake bridge + del-br real bridge (VLAN 9) ok
1447: simple fake bridge + external IDs (VLAN 9)      ok

ovs-vsctl unit tests -- fake bridges (VLAN 0)

1448: simple fake bridge (VLAN 0)                     ok
1449: list bridges -- real and fake (VLAN 0)          ok
1450: simple fake bridge + del-br fake bridge (VLAN 0) ok
1451: simple fake bridge + del-br real bridge (VLAN 0) ok
1452: simple fake bridge + external IDs (VLAN 0)      ok
1453: fake bridge on bond                             ok
1454: fake bridge on bond + del-br fake bridge        ok
1455: fake bridge on bond + del-br real bridge        ok

ovs-vsctl unit tests -- manager commands

1456: managers                                        ok

ovs-vsctl unit tests -- database commands

1457: database commands -- positive checks            ok
1458: database commands -- negative checks            ok
1459: database commands -- conditions                 ok
1460: database commands -- wait-until immediately true ok
1461: database commands -- wait-until must wait       ok
1462: --id option on create, get commands             ok
1463: unreferenced record warnings                    ok
1464: created row UUID is wrong in same execution     ok
1465: --all option on destroy command                 ok

ovs-vsctl add-port -- reserved port names

1466: add-port -- reserved names 1                    FAILED (ovs-vsctl.at:1205)
1467: add-port -- reserved names 2                    FAILED (ovs-vsctl.at:1231)

ovs-monitor-ipsec

1468: ovs-monitor-ipsec                               ok

ovs-xapi-sync

1469: ovs-xapi-sync                                   ok

interface-reconfigure

1470: non-VLAN, non-bond                              ok
1471: VLAN, non-bond                                  ok
1472: Bond, non-VLAN                                  ok
1473: VLAN on bond                                    ok
1474: Re-create port with different types             FAILED (interface-reconfigure.at:1038)

Spanning Tree Protocol unit tests

1475: STP example from IEEE 802.1D-1998               ok
1476: STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 ok
1477: STP example from IEEE 802.1D-2004 figure 17.6   ok
1478: STP example from IEEE 802.1D-2004 figure 17.7   ok
1479: STP.io.1.1: Link Failure                        ok
1480: STP.io.1.2: Repeated Network                    ok
1481: STP.io.1.4: Network Initialization              ok
1482: STP.io.1.5: Topology Change                     ok
1483: STP.op.1.1 and STP.op.1.2                       ok
1484: STP.op.1.4: All Ports Initialized to Designated Ports ok
1485: STP.op.3.1: Root Bridge Selection: Root ID Values ok
1486: STP.op.3.3: Root Bridge Selection: Bridge ID Values ok
1487: STP.op.3.3: Root Bridge Selection: Bridge ID Values ok

vlog

1488: vlog - Python                                   ok
1489: vlog - vlog/reopen - Python                     ok
1490: vlog - vlog/reopen without log file - Python    ok
1491: vlog - vlog/reopen can't reopen log file - Python skipped (vlog.at:155)
1492: vlog - vlog/set and vlog/list - Python          ok

vtep-ctl unit tests -- physical switch tests

1493: add-ps a                                        ok
1494: add-ps a, add-ps a                              ok
1495: add-ps a, add-ps b                              ok
1496: add-ps a, add-ps b, del-ps a                    ok
1497: add-ps a, del-ps a, add-ps a                    ok
1498: add-ps a, add-port a a1, add-port a a2          ok
1499: add-ps a, add-port a a1, add-port a a1          ok
1500: add-ps a b, add-port a a1, add-port b b1, del-ps a ok
1501: add-ps a b, add-port a a1, add-port b b1, del-port a a1 ok
1502: add-ps a b, add-port a p1, add-port b p1, del-port a p1 ok

vtep-ctl unit tests -- logical switch tests

1503: add-ls a                                        ok
1504: add-ls a, add-ls a                              ok
1505: add-ls a, add-ls b                              ok
1506: add-ls a, add-ls b, del-ls a                    ok
1507: add-ls a, del-ls a, add-ls a                    ok

vtep-ctl unit tests -- logical binding tests

1508: bind-ls ps1 pp1 300 ls1                         ok
1509: bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 ok
1510: bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2    ok

vtep-ctl unit tests -- MAC binding tests

1511: add-ucast-local ls1                             ok
1512: add-ucast-local ls1, overwrite                  ok
1513: add-ucast-local ls1, del-ucast-local ls1        ok
1514: add-ucast-remote ls1                            ok
1515: add-ucast-remote ls1, overwrite                 ok
1516: add-ucast-remote ls1, del-ucast-remote ls1      ok
1517: add-ucast-local ls1, add-ucast-remote ls1       ok
1518: add-mcast-local ls1                             ok
1519: add-mcast-local ls1, del-mcast-local ls1        ok
1520: add-mcast-remote ls1                            ok
1521: add-mcast-remote ls1, del-mcast-remote ls1      ok
1522: add-mcast-local ls1, add-mcast-remote ls1       ok
1523: add local and remote macs, clear-local-macs     ok
1524: add local and remote macs, clear-remote-macs    ok

vtep-ctl unit tests -- manager commands

1525: managers                                        ok

## ------------- ##
## Test results. ##
## ------------- ##

ERROR: 1520 tests were run,
21 failed (1 expected failure).
5 tests were skipped.
## -------------------------- ##
## testsuite.log was created. ##
## -------------------------- ##

Please send `tests/testsuite.log' and all information you think might help:

   To: <bugs@openvswitch.org>
   Subject: [openvswitch 2.3.1] testsuite: 5 12 31 578 579 580 581 582 583 584 586 588 771 772 808 814 815 1466 1467 1474 failed

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below `tests/testsuite.dir'.

make[4]: *** [check-local] Error 1
make[4]: Leaving directory `$(@D)'
make[3]: *** [check-am] Error 2
make[3]: Leaving directory `$(@D)'
make[2]: *** [check-recursive] Error 1
make[2]: Leaving directory `$(@D)'
make[1]: *** [check] Error 2
make[1]: Leaving directory `$(@D)'
