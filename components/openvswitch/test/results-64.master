make[1]: Entering directory '$(@D)'
/usr/gnu/bin/make  check-recursive
make[2]: Entering directory '$(@D)'
Making check in datapath
make[3]: Entering directory '$(@D)/datapath'
make[4]: Entering directory '$(@D)/datapath'
make[4]: Leaving directory '$(@D)/datapath'
make[3]: Leaving directory '$(@D)/datapath'
make[3]: Entering directory '$(@D)'
/usr/gnu/bin/make  utilities/ovs-appctl-bashcomp.bash utilities/ovs-vsctl-bashcomp.bash tests/flowgen.pl \
  tests/testpki-cacert.pem tests/testpki-cert.pem tests/testpki-privkey.pem tests/testpki-req.pem tests/testpki-cert2.pem tests/testpki-privkey2.pem tests/testpki-req2.pem
make[4]: Entering directory '$(@D)'
make[4]: Nothing to be done for '$(SOURCE_DIR)/utilities/ovs-appctl-bashcomp.bash'.
make[4]: Nothing to be done for '$(SOURCE_DIR)/utilities/ovs-vsctl-bashcomp.bash'.
make[4]: Nothing to be done for '$(SOURCE_DIR)/tests/flowgen.pl'.
rm -f tests/pki/stamp
rm -rf tests/pki
/usr/gnu/bin/sh $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log init && \
/usr/gnu/bin/sh $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log req+sign tests/pki/test && \
/usr/gnu/bin/sh $(SOURCE_DIR)/utilities/ovs-pki.in --dir=tests/pki --log=tests/ovs-pki.log req+sign tests/pki/test2 && \
: > tests/pki/stamp
Creating controllerca...
Creating switchca...




cp tests/pki/switchca/cacert.pem tests/testpki-cacert.pem
cp tests/pki/test-cert.pem tests/testpki-cert.pem
cp tests/pki/test-privkey.pem tests/testpki-privkey.pem
cp tests/pki/test-req.pem tests/testpki-req.pem
cp tests/pki/test2-cert.pem tests/testpki-cert2.pem
cp tests/pki/test2-privkey.pem tests/testpki-privkey2.pem
cp tests/pki/test2-req.pem tests/testpki-req2.pem
make[4]: Leaving directory '$(@D)'
/usr/gnu/bin/make  check-local
make[4]: Entering directory '$(@D)'
set /usr/gnu/bin/sh '$(SOURCE_DIR)/tests/testsuite' -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests::ovn/controller-vtep:ovn/northd:ovn/utilities:ovn/controller -j8; \
"$@" || (test X'' = Xyes && "$@" --recheck)
## ----------------------------- ##
## openvswitch 2.6.1 test suite. ##
## ----------------------------- ##

  5: appctl-bashcomp - complex completion check 4    ok
  3: appctl-bashcomp - complex completion check 2    ok
  2: appctl-bashcomp - complex completion check 1    ok
 11: bfd - Verify tunnel down detection              skipped (bfd.at:92)
  6: appctl-bashcomp - negative test                 ok
  1: appctl-bashcomp - basic verification            ok
 14: bfd - check_tnl_key                             skipped (bfd.at:227)
  4: appctl-bashcomp - complex completion check 3    ok
 10: bfd - basic config on different bridges         ok
 12: bfd - concatenated path down                    ok
 13: bfd - Edit the Min Tx/Rx values                 ok
  9: vsctl-bashcomp - negative test                  ok
 17: bfd - bfd forwarding_if_rx - bfd on both sides  ok
 21: cfm - check update ovsdb 1                      skipped (cfm.at:50)
 16: bfd - bfd forwarding_if_rx - bfd on one side    ok
 23: cfm - demand mode                               skipped (cfm.at:115)
  7: vsctl-bashcomp - basic verification             ok
 25: cfm - flap_count                                skipped (cfm.at:220)
 22: cfm - check update ovsdb 2                      ok
 18: bfd - bfd forwarding_if_rx - with bfd decay     ok
 27: lacp - config                                   ok
 26: cfm - fault_override                            ok
 30: flow extractor                                  ok
 31: TCP/IP checksumming                             ok
 28: lacp - multi port config                        ok
 33: hash map                                        ok
 34: hash index                                      ok
 32: hash functions                                  ok
 36: counting cockoo hash                            ok
 37: atomic operations                               ok
 38: test linked lists                               ok
 39: packet library                                  ok
 40: SHA-1                                           ok
 41: type properties                                 ok
 42: strtok_r bug fix                                FAILED (library.at:65)
 43: byte order conversion                           ok
 44: random number generator                         ok
 45: ctz() function                                  ok
 46: clz() function                                  ok
 47: round_up_pow2() function                        ok
 48: round_down_pow2() function                      ok
 49: count_1bits() function                          ok
 29: lacp - negotiation                              ok
 50: log_2_floor() function                          ok
 51: bitwise_copy() function                         ok
 52: bitwise_zero() function                         ok
 53: bitwise_one() function                          ok
 54: bitwise_is_all_zeros() function                 ok
 56: ovs_scan() function                             ok
 57: unix socket, short pathname - C                 ok
 58: unix socket, long pathname - C                  ok
 55: bitwise_rscan() function                        ok
 59: unix socket, short pathname - Python2           ok
 61: unix socket, long pathname - Python2            ok
 60: unix socket, short pathname - Python3           ok
 63: ovs_assert                                      ok
 64: snprintf                                        ok
 62: unix socket, long pathname - Python3            ok
 65: bitmap functions                                ok
 66: use of public headers                           ok
 67: ofpbuf module                                   ok
 68: rcu                                             ok
 69: heap library -- insert delete same order        ok
 70: heap library -- insert delete reverse order     ok
 71: heap library -- insert delete every order       ok
 73: heap library -- raw insert                      ok
 74: heap library -- raw delete                      ok
 72: heap library -- insert delete same order with dups ok
 76: active_backup bundle link selection             ok
 75: hrw bundle link selection                       ok
 77: hrw bundle single link selection                ok
 79: bundle action missing argument                  ok
 78: hrw bundle no link selection                    ok
 80: bundle action bad fields                        ok
 35: cuckoo hash                                     ok
 81: bundle action bad algorithm                     ok
 82: bundle action bad slave type                    ok
 83: bundle action bad slave delimiter               ok
 85: flow classifier - empty                         ok
 86: flow classifier - destroy null                  ok
 84: bundle action with many ports                   ok
 89: flow classifier - many rules in one list        ok
 20: bfd - flap_count                                ok
 90: flow classifier - versioned many rules in one list ok
 87: flow classifier - single rule                   ok
 91: flow classifier - many rules in one table       ok
 92: flow classifier - versioned many rules in one table ok
 88: flow classifier - rule replacement              ok
 15: bfd - bfd decay                                 ok
 97: miniflow - miniflow                             ok
 98: miniflow - minimask_has_extra                   ok
 99: miniflow - minimask_combine                     ok
100: flow classifier - lookup segmentation           ok
101: flow classifier - prefix lookup                 ok
  8: vsctl-bashcomp - argument completion            ok
 93: flow classifier - many rules in two tables      ok
 95: flow classifier - many rules in five tables     ok
105: conjunctive match and other actions             ok
106: check struct tail padding                       ok
107: check struct internal alignment                 ok
108: check struct declared size                      ok
109: check wrong struct's declared size              ok
104: conjunctive match priority fallback             ok
102: single conjunctive match                        ok
112: daemon --detach                                 ok
 19: bfd - bfd forwarding_if_rx - demand_rx_bfd      ok
110: daemon                                          ok
113: daemon --detach --monitor                       FAILED (daemon.at:124)
114: daemon --detach startup errors                  ok
116: daemon --service                                skipped (daemon.at:175)
111: daemon --monitor                                FAILED (daemon.at:46)
117: OpenFlow 1.0 action translation                 ok
118: OpenFlow 1.0 "instruction" translations         ok
119: OpenFlow 1.1 action translation                 ok
115: daemon --detach --monitor startup errors        ok
120: OpenFlow 1.1 instruction translation            ok
122: OpenFlow 1.3 action translation                 ok
121: OpenFlow 1.2 action translation                 ok
123: OpenFlow 1.5 action translation                 ok
124: ofp-actions - inconsistent MPLS actions         ok
125: reg_load <-> set_field translation corner case  ok
126: enqueue action for OF1.1+                       ok
127: mod_nw_ttl action for OF1.0                     ok
129: empty                                           ok
130: too short                                       ok
131: wrong OpenFlow version                          ok
132: truncated message                               ok
133: message only uses part of buffer                ok
134: OFPT_HELLO - ordinary                           ok
135: OFPT_HELLO with extra data                      ok
136: OFPT_HELLO with version bitmap                  ok
137: OFPT_HELLO with version bitmap and extra data   ok
140: OFPT_ECHO_REQUEST, empty payload                ok
138: OFPT_HELLO with higher than supported version   ok
 94: flow classifier - versioned many rules in two tables ok
141: OFPT_ECHO_REQUEST, 5-byte payload               ok
142: OFPT_ECHO_REPLY, empty payload                  ok
143: OFPT_ECHO_REPLY, 5-byte payload                 ok
139: OFPT_HELLO with contradictory version bitmaps   ok
144: OFPT_FEATURES_REQUEST                           ok
145: OFPT_FEATURES_REPLY - OF1.0                     ok
147: OFPT_FEATURES_REPLY - OF1.1                     ok
146: OFPT_FEATURES_REPLY cut off mid-port - OF1.0    ok
149: OFPT_FEATURES_REPLY - OF1.2                     ok
148: OFPT_FEATURES_REPLY cut off mid-port - OF1.1    ok
151: OFPT_FEATURES_REPLY - OF1.3                     ok
150: OFPT_FEATURES_REPLY cut off mid-port - OF1.2    ok
152: OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 ok
153: OFPT_GET_CONFIG_REQUEST                         ok
154: OFPT_GET_CONFIG_REPLY, most common form         ok
128: mod_nw_ecn action translation                   ok
155: OFPT_GET_CONFIG_REPLY, frags and miss_send_len  ok
156: OFPT_PACKET_IN - OF1.0                          ok
157: OFPT_PACKET_IN - OF1.0, with hex output of packet data ok
159: OFPT_PACKET_IN - OF1.2                          ok
158: OFPT_PACKET_IN - OF1.1                          ok
160: OFPT_PACKET_IN - OF1.2, with hex output of packet data ok
161: OFPT_PACKET_IN - OF1.3                          ok
162: OFPT_PACKET_IN - OF1.4                          ok
163: OFPT_PACKET_IN - OF1.5                          ok
164: OFPT_PACKET_IN - OF1.3, with hex output of packet data ok
165: OFPT_FLOW_REMOVED - OF1.0                       ok
166: OFPT_FLOW_REMOVED - OF1.2                       ok
167: OFPT_FLOW_REMOVED - OF1.3                       ok
168: OFPT_PORT_STATUS - OF1.0                        ok
169: OFPT_PORT_STATUS - OF1.1                        ok
170: OFPT_PORT_STATUS - OF1.4                        ok
171: OFPT_PACKET_OUT - OF1.0                         ok
172: OFPT_PACKET_OUT - OF1.0, with packet            ok
173: OFPT_PACKET_OUT - OF1.0, with hex output of packet data ok
174: OFPT_PACKET_OUT - OF1.1                         ok
175: OFPT_PACKET_OUT - OF1.1, with packet            ok
176: OFPT_FLOW_MOD - OF1.0 - low verbosity           ok
177: OFPT_FLOW_MOD - OF1.1 - low verbosity           ok
178: OFPT_FLOW_MOD - OF1.2 - low verbosity           ok
179: OFPT_FLOW_MOD - OF1.0 - high verbosity          ok
180: OFPT_FLOW_MOD - OF1.2 - low verbosity           ok
 96: flow classifier - versioned many rules in five tables ok
181: OFPT_FLOW_MOD - OF1.3 - flags - low verbosity   ok
182: OFPT_FLOW_MOD - OF1.2 - set-field ip_src        ok
183: OFPT_FLOW_MOD - OF1.2 - set-field ip_dst        ok
184: OFPT_FLOW_MOD - OF1.2 - set-field sctp_src      ok
185: OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst      ok
186: OFPT_FLOW_MOD - OF1.2 - experimenter OXM        ok
187: OFPT_FLOW_MOD - OF1.2 - set-field nd_target, nd_sll ok
188: OFPT_FLOW_MOD - OF1.3 - meter                   ok
189: OFPT_FLOW reply - OF1.2 - set-field ip_src      ok
190: OFPT_FLOW reply - OF1.2 - set-field ip_dst      ok
191: OFPT_FLOW reply - OF1.2 - set-field sctp_src    ok
192: OFPT_FLOW reply - OF1.2 - set-field sctp_dst    ok
193: OFPT_PORT_MOD - OF1.0                           ok
194: OFPT_PORT_MOD - OF1.1                           ok
195: OFPT_PORT_MOD - OF1.2                           ok
196: OFPT_PORT_MOD - OF1.3                           ok
197: OFPT_PORT_MOD - OF1.4                           ok
198: OFPT_TABLE_MOD - OF1.1                          ok
200: OFPT_TABLE_MOD - OF1.3                          ok
199: OFPT_TABLE_MOD - OF1.2                          ok
201: OFPT_TABLE_MOD - OF1.4                          ok
202: OFPST_DESC request                              ok
203: OFPST_DESC reply                                ok
204: OFPST_FLOW request - OF1.0                      ok
205: OFPST_FLOW request - OF1.2                      ok
206: OFPST_FLOW request - OF1.3                      ok
207: OFPST_FLOW reply - OF1.0                        ok
208: OFPST_FLOW reply - OF1.2                        ok
209: OFPST_AGGREGATE request - OF1.0                 ok
211: OFPST_AGGREGATE request - OF1.3                 ok
210: OFPST_AGGREGATE request - OF1.2                 ok
212: OFPST_AGGREGATE reply - OF1.0                   ok
213: OFPST_AGGREGATE reply - OF1.2                   ok
214: OFPST_AGGREGATE reply - OF1.3                   ok
215: OFPST_TABLE request - OF1.0                     ok
216: OFPST_TABLE request - OF1.1                     ok
217: OFPST_TABLE request - OF1.2                     ok
218: OFPST_TABLE request - OF1.3                     ok
219: OFPST_TABLE reply - OF1.0                       ok
221: OFPST_TABLE reply - OF1.3                       ok
222: OFPST_PORT request - 1.0                        ok
223: OFPST_PORT request - 1.1                        ok
224: OFPST_PORT request - 1.2                        ok
225: OFPST_PORT request - 1.3                        ok
226: OFPST_PORT reply - OF1.0                        ok
227: OFPST_PORT reply - OF1.2                        ok
228: OFPST_PORT reply - OF1.3                        ok
229: OFPST_PORT reply - OF1.4                        ok
230: OFPST_QUEUE request - OF1.0                     ok
231: OFPST_QUEUE request - OF1.1                     ok
232: OFPST_QUEUE request - OF1.2                     ok
233: OFPST_QUEUE request - OF1.3                     ok
234: OFPST_QUEUE reply - OF1.0                       ok
235: OFPST_QUEUE reply - OF1.1                       ok
236: OFPST_QUEUE reply - OF1.2                       ok
237: OFPST_QUEUE reply - OF1.3                       ok
239: OFPST_GROUP request                             ok
238: OFPST_QUEUE reply - OF1.4                       ok
240: OFPST_GROUP reply - OF1.1                       ok
241: OFPST_GROUP reply - OF1.3                       ok
242: OFPST_GROUP_DESC request - OF1.1                ok
243: OFPST_GROUP_DESC request - OF1.5                ok
244: OFPST_GROUP_DESC reply - OF1.1                  ok
245: OFPST_GROUP_DESC reply - OF1.5                  ok
246: OFPST_GROUP_FEATURES request                    ok
247: OFPST_GROUP_FEATURES reply                      ok
248: OFPST_PORT_DESC request - OF1.0                 ok
249: OFPST_PORT_DESC request - OF1.5                 ok
250: OFPST_PORT_DESC reply - OF1.0                   ok
251: OFPST_PORT_DESC reply - OF1.4                   ok
252: OFPT_METER_MOD request - OF1.3                  ok
253: OFPT_METER_MOD request - bad band - OF1.3       ok
254: OFPT_METER_MOD request - bad command - OF1.3    ok
255: OFPT_METER_MOD request - bad flags - OF1.3      ok
256: OFPST_METER request - OF1.3                     ok
258: OFPST_METER_FEATURES request - OF1.3            ok
257: OFPST_METER_CONFIG request - OF1.3              ok
259: OFPST_METER_FEATURES reply - OF1.3              ok
260: OFPST_METER_CONFIG reply - OF1.3                ok
261: OFPST_METER reply - OF1.3                       ok
263: OFPT_BARRIER_REQUEST - OF1.0                    ok
262: OFPST_TABLE_FEATURES request - OF1.3            ok
264: OFPT_BARRIER_REQUEST - OF1.1                    ok
265: OFPT_BARRIER_REQUEST - OF1.2                    ok
266: OFPT_BARRIER_REQUEST - OF1.3                    ok
267: OFPT_BARRIER_REPLY - OF1.0                      ok
268: OFPT_BARRIER_REPLY - OF1.1                      ok
269: OFPT_BARRIER_REPLY - OF1.2                      ok
270: OFPT_BARRIER_REPLY - OF1.3                      ok
271: OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0           ok
273: OFPST_QUEUE_DESC request - OF1.4                ok
272: OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2           ok
274: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0             ok
275: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.1             ok
276: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2             ok
277: OFPT_QUEUE_GET_CONFIG_REPLY - OF1.3             ok
278: OFPST_QUEUE_DESC reply - OF1.4                  ok
279: OFPT_SET_ASYNC - OF1.3                          ok
280: OFPT_ROLE_REQUEST - OF1.2                       ok
281: OFPT_ROLE_REQUEST - nochange - OF1.2            ok
282: NXT_ROLE_REQUEST                                ok
283: OFPT_ROLE_REPLY - OF1.2                         ok
284: NXT_ROLE_REPLY                                  ok
285: OFP_ROLE_STATUS - master, experimenter - OF1.4  ok
286: OFP_ROLE_STATUS - master, config - OF1.4        ok
287: OFP_ROLE_STATUS - master, config,generation - OF1.4 ok
289: OFP_REQUESTFORWARD - OF1.4                      ok
288: OFP_REQUESTFORWARD - OF1.4                      ok
290: OFP_REQUESTFORWARD - OF1.4                      ok
291: OFP_REQUESTFORWARD - OF1.4                      ok
292: NXT_SET_PACKET_IN                               ok
293: NXT_PACKET_IN                                   ok
294: NXT_PACKET_IN, with hex output of packet data   ok
295: NX_PACKET_IN2                                   ok
296: NXT_SET_ASYNC_CONFIG                            ok
297: OFPT_SET_ASYNC_CONFIG                           ok
298: OFPT_SET_ASYNC_CONFIG - invalid mask - OF1.4    ok
299: OFPT_SET_ASYNC_CONFIG - unsupported configuration - OF1.4 ok
300: NXT_SET_CONTROLLER_ID                           ok
301: NXT_FLOW_MONITOR_CANCEL                         ok
302: NXT_FLOW_MONITOR_PAUSED                         ok
304: NXT_SET_FLOW_FORMAT                             ok
303: NXT_FLOW_MONITOR_RESUMED                        ok
305: NXT_FLOW_MOD, low verbosity                     ok
306: NXT_FLOW_MOD, high verbosity                    ok
307: OFPT_GROUP_MOD - OF1.1                          ok
308: OFPT_GROUP_MOD add - OF1.5                      ok
309: OFPT_GROUP_MOD insert bucket - OF1.5            ok
310: NXT_FLOW_REMOVED                                ok
311: NXT_FLOW_MOD_TABLE_ID                           ok
312: NXT_RESUME                                      ok
313: NXST_FLOW request                               ok
314: NXST_FLOW reply                                 ok
315: NXST_AGGREGATE request                          ok
316: NXST_AGGREGATE reply                            ok
317: NXST_FLOW_MONITOR request                       ok
318: NXST_FLOW_MONITOR reply                         ok
319: OFPT_BUNDLE_CONTROL - atomic OPEN_REQUEST       ok
320: OFPT_BUNDLE_CONTROL - ordered OPEN_REQUEST      ok
321: OFPT_BUNDLE_CONTROL - atomic ordered OPEN_REQUEST ok
322: OFPT_BUNDLE_CONTROL - OPEN_REPLY                ok
323: OFPT_BUNDLE_CONTROL - CLOSE_REQUEST             ok
324: OFPT_BUNDLE_CONTROL - CLOSE_REPLY               ok
325: OFPT_BUNDLE_CONTROL - COMMIT_REQUEST            ok
326: OFPT_BUNDLE_CONTROL - COMMIT_REPLY              ok
327: OFPT_BUNDLE_CONTROL - DISCARD_REQUEST           ok
328: OFPT_BUNDLE_CONTROL - DISCARD_REPLY             ok
329: OFPT_BUNDLE_ADD_MESSAGE - verify xid            ok
330: OFPT_BUNDLE_ADD_MESSAGE - reject OFPT_HELLO     ok
331: OFPT_BUNDLE_ADD_MESSAGE - FLOW_MOD              ok
332: OFPT_BUNDLE_ADD_MESSAGE - PORT_MOD              ok
333: OFPT_BUNDLE_ADD_MESSAGE - GROUP_MOD             ok
334: NXST_IPFIX_BRIDGE - request                     ok
335: NXST_IPFIX_BRIDGE - reply                       ok
336: NXST_IPFIX_FLOW - request                       ok
337: NXST_IPFIX_FLOW - reply                         ok
338: NXT_CT_FLUSH_ZONE                               ok
341: OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 ok
342: OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 ok
343: OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0  ok
344: OFPT_ERROR prints type of truncated inner messages ok
345: OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0  ok
346: OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1  ok
340: parsing key-value pairs                         ok
347: OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0    ok
348: OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1  ok
349: OFPT_ERROR with type OFPBIC_DUP_INST - OF1.4    ok
350: encoding OFPBIC_* experimenter errors           ok
339: encoding hellos                                 ok
351: encoding errors extension that became official  ok
352: decoding OFPBIC_* experimenter errors           ok
357: ovs-ofctl parse-flows (OpenFlow 1.1)            ok
356: ovs-ofctl parse-flows (OpenFlow 1.0)            ok
353: decoding experimenter errors                    ok
358: ovs-ofctl parse-flows (OpenFlow 1.2)            ok
360: ovs-ofctl action inconsistency (OpenFlow 1.1)   ok
361: ovs-ofctl parse-flows (skb_priority)            ok
354: encoding experimenter errors                    ok
362: ovs-ofctl parse-flows (NXM)                     ok
363: ovs-ofctl -F nxm parse-flows                    ok
364: ovs-ofctl -F nxm -mmm parse-flows               ok
365: ovs-ofctl parse-nx-match                        ok
366: ovs-ofctl parse-ofp10-match                     ok
367: ovs-ofctl parse-ofp11-match                     ok
369: ovs-ofctl parse-oxm (OpenFlow 1.2)              ok
368: ovs-ofctl parse-nx-match loose                  ok
370: ovs-ofctl parse-oxm (OpenFlow 1.3)              ok
371: ovs-ofctl parse-oxm (OpenFlow 1.5)              ok
372: ovs-ofctl parse-oxm loose                       ok
373: experimenter OXM encoding                       ok
376: ovs-ofctl -F option and NXM features            ok
374: check TCP flags expression in OXM and NXM       ok
359: ovs-ofctl parse-flow with invalid mask          ok
375: ovs-ofctl check-vlan                            ok
377: ovs-ofctl -F option with flow_mods              ok
378: ovs-ofctl dump-flows honors -F option           ok
379: ovs-ofctl dump-flows rejects bad -F option      ok
380: ovs-ofctl add-flow reports non-normalized flows ok
220: OFPST_TABLE reply - OF1.2                       ok
385: ovs-ofctl -F and -O interaction                 ok
381: ovs-ofctl dump-flows with sorting               ok
383: ovs-ofctl diff-flows - tunnel metadata          ok
386: ovs-ofctl ofp-parse                             ok
384: ovs-ofctl diff-flows - suppress false differences ok
389: ovs-ofctl replace-flows with importance         ok
388: ovs-ofctl rule with importance                  ok
390: ovs-ofctl replace-flows with --bundle           ok
392: OVS datapath key parsing and formatting - valid forms ok
393: OVS datapath wildcarded key parsing and formatting - valid forms ok
387: tcp flags - filtering                           ok
396: MPLS xlate action                               skipped (mpls-xlate.at:5)
395: OVS datapath actions parsing and formatting - valid forms ok
391: ovs-ofctl ct-flush-zone                         ok
394: OVS datapath wildcarded key filtering.          ok
398: hash_threshold multipath link selection         ok
397: modulo_n multipath link selection               ok
401: multipath action missing argument               ok
402: multipath action bad fields                     ok
403: multipath action bad algorithm                  ok
404: multipath action bad n_links                    ok
405: multipath action destination too narrow         ok
406: learning action - parsing and formatting        ok
407: learning action - parsing and formatting - illegal in_port_oxm ok
408: learning action - parsing and formatting - OXM  ok
409: learning action - examples                      ok
410: learning action - satisfied prerequisites       ok
411: learning action - invalid prerequisites         ok
400: iter_hash multipath link selection              ok
412: learning action - too-long immediate value      ok
415: learning action - TCPv4 port learning           ok
413: learning action - standard VLAN+MAC learning    ok
399: hrw multipath link selection                    ok
416: learning action - TCPv6 port learning           ok
355: ovs-ofctl parse-flows choice of protocol        ok
420: learning action - fin_timeout feature           ok
417: learning action - self-modifying flow           ok
422: unix vconn - refuse connection                  ok
423: unix vconn - accept then close                  ok
424: unix vconn - read hello                         ok
425: unix vconn - send plain hello                   ok
426: unix vconn - send long hello                    ok
427: unix vconn - send echo hello                    ok
428: unix vconn - send short hello                   ok
429: unix vconn - send invalid version hello         ok
430: tcp vconn - refuse connection                   ok
431: tcp vconn - accept then close                   ok
421: learning action - delete_learned feature        ok
432: tcp vconn - read hello                          ok
433: tcp vconn - send plain hello                    ok
434: tcp vconn - send long hello                     ok
435: tcp vconn - send echo hello                     ok
436: tcp vconn - send short hello                    ok
437: tcp vconn - send invalid version hello          ok
438: ssl vconn - refuse connection                   ok
439: ssl vconn - accept then close                   ok
440: ssl vconn - read hello                          ok
441: ssl vconn - send plain hello                    ok
442: ssl vconn - send long hello                     ok
443: ssl vconn - send echo hello                     ok
444: ssl vconn - send short hello                    ok
445: ssl vconn - send invalid version hello          ok
446: components of "/usr/lib" are "/usr", "lib"      ok
447: components of "/usr/" are "/", "usr"            ok
448: components of "usr" are ".", "usr"              ok
449: components of "/" are "/", "/"                  ok
450: components of "." are ".", "."                  ok
451: components of ".." are ".", ".."                ok
452: components of "//" are "//", "//"               ok
453: components of "//foo" are "//", "foo"           ok
454: components of "" are ".", "."                   ok
455: components of "dir/file" are "dir", "file"      ok
456: components of "dir/file/" are "dir", "file"     ok
414: learning action - learn refreshes hard_age      ok
457: components of "dir/file//" are "dir", "file"    ok
458: components of "///foo" are "/", "foo"           ok
418: learning action - self-modifying flow with idle_timeout ok
459: follow_symlinks - relative symlinks             ok
460: follow_symlinks - absolute symlinks             ok
461: follow_symlinks - symlinks to directories       ok
462: follow_symlinks - nonexistent targets           ok
463: follow_symlinks - regular files                 ok
464: follow_symlinks - device targets                skipped (file_name.at:99)
467: wikipedia test vector 1                         ok
419: learning action - self-modifying flow with hard_timeout ok
468: wikipedia test vector 2                         ok
466: follow_symlinks - symlink loop                  ok
469: NIST KAT ECBKeySbox128e vector 0                ok
470: NIST KAT ECBKeySbox128e vector 1                ok
471: NIST KAT ECBKeySbox128e vector 2                ok
465: follow_symlinks - nonexistent files             ok
472: NIST KAT ECBKeySbox128e vector 3                ok
473: NIST KAT ECBKeySbox128e vector 4                ok
474: NIST KAT ECBKeySbox128e vector 5                ok
475: NIST KAT ECBKeySbox128e vector 6                ok
476: NIST KAT ECBKeySbox128e vector 7                ok
477: NIST KAT ECBKeySbox128e vector 8                ok
478: NIST KAT ECBKeySbox128e vector 9                ok
479: NIST KAT ECBKeySbox128e vector 10               ok
480: NIST KAT ECBKeySbox128e vector 11               ok
481: NIST KAT ECBKeySbox128e vector 12               ok
482: NIST KAT ECBKeySbox128e vector 13               ok
483: NIST KAT ECBKeySbox128e vector 14               ok
485: NIST KAT ECBKeySbox128e vector 16               ok
484: NIST KAT ECBKeySbox128e vector 15               ok
486: NIST KAT ECBKeySbox128e vector 17               ok
487: NIST KAT ECBKeySbox128e vector 18               ok
488: NIST KAT ECBKeySbox128e vector 19               ok
489: NIST KAT ECBKeySbox128e vector 20               ok
492: unixctl ovs-vswitchd list-commands - Python2    ok
493: unixctl ovs-vswitchd list-commands - Python3    ok
490: unixctl ovs-vswitchd exit - Python2             ok
491: unixctl ovs-vswitchd exit - Python3             ok
496: unixctl bad target - Python2                    ok
497: unixctl bad target - Python3                    ok
500: unixctl server errors - Python2                 ok
494: unixctl ovs-vswitchd arguments - Python2        ok
501: unixctl server errors - Python3                 ok
503: empty array - C                                 ok
504: empty array - Python2                           ok
505: empty array - Python3                           ok
506: single-element array - C                        ok
507: single-element array - Python2                  ok
103: multiple conjunctive match                      ok
508: single-element array - Python3                  ok
509: 2-element array - C                             ok
495: unixctl ovs-vswitchd arguments - Python3        ok
510: 2-element array - Python2                       ok
512: many-element array - C                          ok
511: 2-element array - Python3                       ok
513: many-element array - Python2                    ok
515: missing comma - C                               ok
514: many-element array - Python3                    ok
516: missing comma - Python2                         ok
518: trailing comma not allowed - C                  ok
517: missing comma - Python3                         ok
519: trailing comma not allowed - Python2            ok
521: doubled comma not allowed - C                   ok
522: doubled comma not allowed - Python2             ok
520: trailing comma not allowed - Python3            ok
524: empty string - C                                ok
523: doubled comma not allowed - Python3             ok
525: empty string - Python2                          ok
527: 1-character strings - C                         ok
528: 1-character strings - Python2                   ok
526: empty string - Python3                          ok
530: escape sequences - C                            ok
529: 1-character strings - Python3                   ok
531: escape sequences - Python2                      ok
533: Unicode escape sequences - C                    ok
534: Unicode escape sequences - Python2              ok
532: escape sequences - Python3                      ok
536: surrogate pairs - C                             ok
535: Unicode escape sequences - Python3              ok
537: surrogate pairs - Python                        expected failure (json.at:111)
538: a string by itself is not valid JSON - C        ok
539: a string by itself is not valid JSON - Python2  ok
541: end of line in quoted string - C                ok
540: a string by itself is not valid JSON - Python3  ok
542: end of line in quoted string - Python2          ok
498: unixctl server - Python2                        ok
544: formfeed in quoted string - C                   ok
543: end of line in quoted string - Python3          ok
545: formfeed in quoted string - Python2             ok
547: bad escape in quoted string - C                 ok
546: formfeed in quoted string - Python3             ok
548: bad escape in quoted string - Python2           ok
550: \u must be followed by 4 hex digits (1) - C     ok
549: bad escape in quoted string - Python3           ok
551: \u must be followed by 4 hex digits (1) - Python2 ok
553: \u must be followed by 4 hex digits (2) - C     ok
552: \u must be followed by 4 hex digits (1) - Python3 ok
554: \u must be followed by 4 hex digits (2) - Python2 ok
556: isolated leading surrogate not allowed - C      ok
555: \u must be followed by 4 hex digits (2) - Python3 ok
557: isolated leading surrogate not allowed - Python2 ok
559: surrogatess must paired properly - C            ok
558: isolated leading surrogate not allowed - Python3 ok
560: surrogatess must paired properly - Python2      ok
562: null bytes not allowed - C                      ok
561: surrogatess must paired properly - Python3      ok
563: null bytes not allowed - Python2                ok
565: properly quoted backslash at end of string - C  ok
564: null bytes not allowed - Python3                ok
566: properly quoted backslash at end of string - Python2 ok
567: properly quoted backslash at end of string - Python3 ok
568: stray backslash at end of string - C            ok
569: stray backslash at end of string - Python2      ok
571: end of input in quoted string - C               ok
572: end of input in quoted string - Python          ok
570: stray backslash at end of string - Python3      ok
573: empty object - C                                ok
574: empty object - Python2                          ok
576: simple object - C                               ok
575: empty object - Python3                          ok
577: simple object - Python2                         ok
579: bad value - C                                   ok
578: simple object - Python3                         ok
580: bad value - Python2                             ok
582: missing colon - C                               ok
499: unixctl server - Python3                        ok
581: bad value - Python3                             ok
583: missing colon - Python2                         ok
585: missing comma - C                               ok
586: missing comma - Python2                         ok
584: missing colon - Python3                         ok
588: trailing comma not allowed - C                  ok
587: missing comma - Python3                         ok
589: trailing comma not allowed - Python2            ok
591: doubled comma not allowed - C                   ok
592: doubled comma not allowed - Python2             ok
590: trailing comma not allowed - Python3            ok
594: names must be strings - C                       ok
595: names must be strings - Python2                 ok
593: doubled comma not allowed - Python3             ok
597: null - C                                        ok
598: null - Python2                                  ok
600: false - C                                       ok
596: names must be strings - Python3                 ok
601: false - Python2                                 ok
599: null - Python3                                  ok
603: true - C                                        ok
604: true - Python2                                  ok
602: false - Python3                                 ok
606: a literal by itself is not valid JSON - C       ok
605: true - Python3                                  ok
607: a literal by itself is not valid JSON - Python2 ok
609: nullify is invalid - C                          ok
610: nullify is invalid - Python2                    ok
608: a literal by itself is not valid JSON - Python3 ok
612: nubs is invalid - C                             ok
613: nubs is invalid - Python2                       ok
611: nullify is invalid - Python3                    ok
615: xxx is invalid - C                              ok
616: xxx is invalid - Python2                        ok
614: nubs is invalid - Python3                       ok
618: integers expressed as reals - C                 ok
619: integers expressed as reals - Python2           ok
621: large integers - C                              ok
617: xxx is invalid - Python3                        ok
620: integers expressed as reals - Python3           ok
622: large integers - Python2                        ok
624: large integers expressed as reals - C           ok
625: large integers expressed as reals - Python2     ok
623: large integers - Python3                        ok
627: C - large integers that overflow to reals       ok
628: large integers that overflow to reals - Python2 ok
626: large integers expressed as reals - Python3     ok
630: negative zero - C                               ok
631: negative zero - Python2                         ok
629: large integers that overflow to reals - Python3 ok
633: reals - C                                       ok
634: reals - Python2                                 ok
632: negative zero - Python3                         ok
636: scientific notation - C                         ok
637: scientific notation - Python2                   ok
635: reals - Python3                                 ok
639: C - +/- DBL_MAX                                 ok
640: +/- DBL_MAX - Python2                           ok
638: scientific notation - Python3                   ok
642: negative reals - C                              ok
641: +/- DBL_MAX - Python3                           ok
643: negative reals - Python2                        ok
645: negative scientific notation - C                ok
646: negative scientific notation - Python2          ok
644: negative reals - Python3                        ok
648: 1e-9999 underflows to 0 - C                     ok
649: 1e-9999 underflows to 0 - Python2               ok
647: negative scientific notation - Python3          ok
651: a number by itself is not valid JSON - C        ok
652: a number by itself is not valid JSON - Python2  ok
650: 1e-9999 underflows to 0 - Python3               ok
654: leading zeros not allowed - C                   ok
655: leading zeros not allowed - Python2             ok
653: a number by itself is not valid JSON - Python3  ok
657: 1e9999 is too big - C                           ok
658: 1e9999 is too big - Python2                     ok
656: leading zeros not allowed - Python3             ok
660: exponent bigger than INT_MAX - C                ok
661: exponent bigger than INT_MAX - Python2          ok
659: 1e9999 is too big - Python3                     ok
663: decimal point must be followed by digit - C     ok
662: exponent bigger than INT_MAX - Python3          ok
664: decimal point must be followed by digit - Python2 ok
666: exponent must contain at least one digit (1) - C ok
667: exponent must contain at least one digit (1) - Python2 ok
665: decimal point must be followed by digit - Python3 ok
669: exponent must contain at least one digit (2) - C ok
670: exponent must contain at least one digit (2) - Python2 ok
668: exponent must contain at least one digit (1) - Python3 ok
672: exponent must contain at least one digit (3) - C ok
673: exponent must contain at least one digit (3) - Python2 ok
671: exponent must contain at least one digit (2) - Python3 ok
675: RFC 4267 object example - C                     ok
676: RFC 4267 object example - Python2               ok
674: exponent must contain at least one digit (3) - Python3 ok
678: RFC 4267 array example - C                      ok
679: RFC 4267 array example - Python2                ok
677: RFC 4267 object example - Python3               ok
681: trailing garbage - C                            ok
682: trailing garbage - Python2                      ok
680: RFC 4267 array example - Python3                ok
684: formfeeds are not valid white space - C         ok
683: trailing garbage - Python3                      ok
685: formfeeds are not valid white space - Python2   ok
687: ';' is not a valid token - C                    ok
688: ';' is not a valid token - Python2              ok
686: formfeeds are not valid white space - Python3   ok
690: arrays nesting too deep - C                     ok
693: objects nesting too deep - C                    ok
689: ';' is not a valid token - Python3              ok
691: arrays nesting too deep - Python2               ok
692: arrays nesting too deep - Python3               ok
696: input may not be empty                          ok
697: multiple adjacent objects - C                   ok
694: objects nesting too deep - Python2              ok
695: objects nesting too deep - Python3              ok
698: multiple adjacent objects - Python2             ok
700: multiple space-separated objects - C            ok
701: multiple space-separated objects - Python2      ok
699: multiple adjacent objects - Python3             ok
703: multiple objects on separate lines - C          ok
704: multiple objects on separate lines - Python2    ok
706: multiple objects and arrays - C                 ok
702: multiple space-separated objects - Python3      ok
705: multiple objects on separate lines - Python3    ok
707: multiple objects and arrays - Python2           ok
709: garbage between multiple objects - C            ok
708: multiple objects and arrays - Python3           ok
710: garbage between multiple objects - Python2      ok
712: garbage after multiple objects - C              ok
713: garbage after multiple objects - Python2        ok
711: garbage between multiple objects - Python3      ok
715: JSON-RPC request and successful reply           ok
714: garbage after multiple objects - Python3        ok
716: JSON-RPC request and error reply                ok
717: JSON-RPC notification                           ok
502: UUID generation, parsing, serialization         ok
718: JSON-RPC request and successful reply - Python2 ok
724: lock and unlock                                 ok
721: JSON-RPC request and error reply - Python3      ok
720: JSON-RPC request and error reply - Python2      ok
719: JSON-RPC request and successful reply - Python3 ok
722: JSON-RPC notification - Python2                 ok
725: lock and unlock twice                           ok
726: lock blocks same process                        ok
727: lock blocks same process twice                  ok
728: lock blocks other process                       ok
729: lock twice blocks other process                 ok
730: lock and unlock allows other process            ok
731: lock multiple                                   ok
732: lock symlink                                    ok
733: lock symlink to dir                             ok
734: nothing happens if not enabled - C              ok
735: nothing happens if not enabled - Python2        ok
737: quick connect, idle disconnect - C              ok
738: quick connect, idle disconnect - Python2        ok
736: nothing happens if not enabled - Python3        ok
740: slow connect, idle disconnect - C               ok
723: JSON-RPC notification - Python3                 ok
739: quick connect, idle disconnect - Python3        ok
741: slow connect, idle disconnect - Python2         ok
743: connect backs off - C                           ok
744: connect backs off - Python2                     ok
746: connections with no data preserve backoff - C   ok
742: slow connect, idle disconnect - Python3         ok
745: connect backs off - Python3                     ok
747: connections with no data preserve backoff - Python2 ok
749: brief connection preserves backoff - C          ok
748: connections with no data preserve backoff - Python3 ok
752: brief connection with data preserves backoff - C ok
750: brief connection preserves backoff - Python2    ok
751: brief connection preserves backoff - Python3    ok
755: long connection resets backoff - C              ok
753: brief connection with data preserves backoff - Python2 ok
756: long connection resets backoff - Python2        ok
754: brief connection with data preserves backoff - Python3 ok
758: connection attempt fails quickly - C            ok
757: long connection resets backoff - Python3        ok
759: connection attempt fails quickly - Python2      ok
761: max-tries of 1 honored - C                      ok
762: max-tries of 1 honored - Python2                ok
760: connection attempt fails quickly - Python3      ok
764: max-tries of 0 honored - C                      ok
765: max-tries of 0 honored - Python2                ok
763: max-tries of 1 honored - Python3                ok
767: passive mode - C                                ok
766: max-tries of 0 honored - Python3                ok
768: passive mode - Python2                          ok
769: passive mode - Python3                          ok
770: ovs-vswitchd detaches correctly with empty db   ok
382: ovs-ofctl diff-flows                            ok
775: ovs-vswitchd -- set service controller          ok
777: ovs-vswitchd - do not create sockets with unsafe names ok
778: ofproto - echo request                          ok
776: ovs-vswitchd -- Compatible with OVSDB server - w/o monitor_cond ok
779: ofproto - handling messages with bad version    ok
780: ofproto - feature request, config request       ok
781: ofproto - set OpenFlow port number              ok
771: ovs-vswitchd -- stats-update-interval           ok
772: ovs-vswitchd -- start additional ovs-vswitchd process ok
782: ofproto - port stats - (OpenFlow 1.0)           ok
783: ofproto - port stats - (OpenFlow 1.2)           ok
784: ofproto - port stats - (OpenFlow 1.4)           ok
785: ofproto - port-desc stats (OpenFlow 1.0)        ok
786: ofproto - port-desc stats (OpenFlow 1.2)        ok
787: ofproto - port-desc stats (OpenFlow 1.5)        ok
788: ofproto - queue stats - (OpenFlow 1.0)          ok
789: ofproto - queue stats - (OpenFlow 1.1)          ok
774: ovs-vswitchd -- invalid database path           ok
790: ofproto - queue stats - (OpenFlow 1.2)          ok
791: ofproto - queue stats - (OpenFlow 1.3)          ok
773: ovs-vswitchd -- switch over to another ovs-vswitchd process ok
792: ofproto - queue stats - (OpenFlow 1.4)          ok
794: ofproto - queue configuration - (OpenFlow 1.1)  ok
793: ofproto - queue configuration - (OpenFlow 1.0)  ok
795: ofproto - queue configuration - (OpenFlow 1.2)  ok
796: ofproto - queue configuration - (OpenFlow 1.4)  ok
797: ofproto - no group support (OpenFlow 1.0)       ok
799: ofproto - add indirect group                    ok
798: ofproto - del group (OpenFlow 1.1)              ok
800: ofproto - group mod with mod and add_or_mod command ok
801: ofproto - del group (OpenFlow 1.5)              ok
802: ofproto - del group deletes flows               ok
806: ofproto - bundle add indirect group             ok
807: ofproto - bundle group mod with mod and add_or_mod command ok
805: ofproto - bundle del group (OpenFlow 1.3)       ok
804: ofproto - remove group buckets                  ok
803: ofproto - insert group buckets                  ok
808: ofproto - bundle del group (OpenFlow 1.5)       ok
809: ofproto - bundle del group deletes flows        ok
813: ofproto - bundle flow mod checks group availability ok
812: ofproto - flow mod checks group availability    ok
814: ofproto - group description                     ok
815: ofproto - group description                     ok
816: ofproto - group features                        ok
811: ofproto - bundle remove group buckets           ok
810: ofproto - bundle insert group buckets           ok
817: ofproto - group stats (OpenFlow 1.1)            ok
818: ofproto - group stats (OpenFlow 1.3)            ok
819: ofproto - group stats (OpenFlow 1.5)            ok
820: ofproto - group add then bridge delete (OpenFlow 1.3) ok
825: ofproto - basic flow_mod commands (OpenFlow 1.0) ok
824: ofproto - basic flow_mod commands (NXM)         ok
826: ofproto - add-flow and flags                    ok
827: ofproto - basic flow_mod commands (OpenFlow 1.1) ok
821: ofproto - mod-port (OpenFlow 1.0)               ok
822: ofproto - mod-port (OpenFlow 1.2)               ok
823: ofproto - mod-port (OpenFlow 1.4)               ok
828: ofproto - flow_mod negative test (OpenFlow 1.1) ok
829: ofproto - set-field flow_mod commands (NXM)     ok
831: ofproto - set-field flow_mod commands (OF1.2)   ok
830: ofproto - basic flow_mod commands (OpenFlow 1.2) ok
833: ofproto - mod flow with cookie change (OpenFlow 1.0) ok
834: ofproto - mod flow with cookie change (NXM)     ok
832: ofproto - dump flows with cookie                ok
835: ofproto - no mod flow with cookie change (OpenFlow 1.1) ok
836: ofproto - no mod flow with cookie change (OpenFlow 1.2) ok
837: ofproto - mod flows based on cookie mask (OpenFlow 1.0) ok
838: ofproto - mod flows based on cookie mask (OpenFlow 1.1) ok
841: ofproto - mod flow with cookie miss (mask==0) - NXM ok
842: ofproto - mod flow with cookie miss (mask==0) - OF1.1 ok
840: ofproto - mod flows based on cookie mask with cookie change ok
839: ofproto - mod flows based on cookie mask (OpenFlow 1.2) ok
843: ofproto - mod flow with cookie miss (mask==0) - OF1.2 ok
844: ofproto - mod flow with cookie miss (mask!=0) - NXM ok
845: ofproto - mod flow with cookie miss (mask!=0) - OF1.1 ok
846: ofproto - mod flow with cookie miss (mask!=0) - OF1.2 ok
847: ofproto - del flows with cookies                ok
849: ofproto - del flows based on cookie mask        ok
848: ofproto - del flows based on cookie             ok
850: ofproto - del flows based on table id (NXM)     ok
851: ofproto - del flows based on table id (OpenFlow 1.1) ok
852: ofproto - del flows based on table id (OpenFlow 1.2) ok
853: ofproto - flow_mod with out_port matching (OpenFlow 1.0) ok
854: ofproto - flow_mod with out_port matching (OpenFlow 1.1) ok
856: ofproto - bundle flow_mod with out group matching (OpenFlow 1.4) ok
855: ofproto - flow_mod with out_group matching (OpenFlow 1.1) ok
863: ofproto - hard limits on flow table size (OpenFlow 1.2) ok
862: ofproto - hard limits on flow table size (OpenFlow 1.0) ok
858: ofproto - hidden rules not in table stats       ok
864: ofproto - eviction upon table overflow (OpenFlow 1.0) ok
865: ofproto - eviction upon table overflow (OpenFlow 1.2) ok
861: ofproto - table description (OpenFlow 1.4)      ok
857: ofproto - flow table configuration (OpenFlow 1.0) ok
867: ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) ok
866: ofproto - eviction using importance upon table overflow (OpenFlow 1.4) ok
868: ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) ok
869: ofproto - eviction upon table overflow, with modified hard timeout ok
859: ofproto - flow table configuration (OpenFlow 1.2) ok
870: ofproto - eviction upon table overflow, with modified idle timeout ok
875: ofproto - asynchronous message control (OpenFlow 1.5) ok
876: ofproto - controller role (OpenFlow 1.2)        ok
877: ofproto - controller role (OpenFlow 1.4)        ok
878: ofproto - requestforward (OpenFlow 1.4)         ok
879: ofproto - packet-out from controller (OpenFlow 1.0) ok
871: ofproto - asynchronous message control (OpenFlow 1.0) ok
860: ofproto - table features (OpenFlow 1.3)         ok
873: ofproto - asynchronous message control (OpenFlow 1.3) ok
880: ofproto - packet-out from controller (OpenFlow 1.2) ok
881: ofproto - packet-out from controller (OpenFlow 1.1) ok
882: ofproto - packet-out with metadata and userdata (NXT_PACKET_IN2) ok
883: ofproto - packet-out with metadata (NXM)        ok
884: ofproto - packet-out with metadata (OpenFlow 1.2) ok
885: ofproto - packet-out with metadata and dual set_field (OpenFlow 1.3) ok
890: ofproto - flow monitoring pause and resume      skipped (ofproto.at:4269)
886: ofproto - packet-out with tunnel metadata (OpenFlow 1.2) ok
872: ofproto - asynchronous message control (OpenFlow 1.2) ok
888: ofproto - flow monitoring with !own             ok
891: ofproto - event filtering (OpenFlow 1.3)        ok
874: ofproto - asynchronous message control (OpenFlow 1.4) ok
889: ofproto - flow monitoring with out_port         ok
893: ofproto - bundle open (OpenFlow 1.4)            ok
895: ofproto - bundle close without open (OpenFlow 1.4) ok
894: ofproto - bundle double open (OpenFlow 1.4)     ok
887: ofproto - flow monitoring                       ok
897: ofproto - bundle close, different flags (OpenFlow 1.4) ok
896: ofproto - bundle double close (OpenFlow 1.4)    ok
898: ofproto - bundle commit without open (OpenFlow 1.4) ok
 24: cfm - demand_rx_ccm                             ok
900: ofproto - bundle discard without open (OpenFlow 1.4) ok
899: ofproto - bundle commit, different flags (OpenFlow 1.4) ok
901: ofproto - bundle with multiple flow mods (OpenFlow 1.4) ok
902: ofproto - failing bundle commit (OpenFlow 1.4)  ok
904: ofproto - bundle open (OpenFlow 1.3)            ok
903: ofproto - bundle timeout (OpenFlow 1.4)         ok
906: ofproto - bundle close without open (OpenFlow 1.3) ok
905: ofproto - bundle double open (OpenFlow 1.3)     ok
907: ofproto - bundle double close (OpenFlow 1.3)    ok
909: ofproto - bundle commit without open (OpenFlow 1.3) ok
908: ofproto - bundle close, different flags (OpenFlow 1.3) ok
910: ofproto - bundle commit, different flags (OpenFlow 1.3) ok
911: ofproto - bundle discard without open (OpenFlow 1.3) ok
913: ofproto - failing bundle add message (OpenFlow 1.3) ok
914: ofproto - failing bundle commit (OpenFlow 1.3)  ok
912: ofproto - bundle with multiple flow mods (OpenFlow 1.3) ok
915: dpif-netdev - dummy interface                   ok
921: dpctl - add-dp del-dp                           ok
916: dpif-netdev - dummy-pmd interface               ok
917: dpif-netdev - miss upcall key matches flow_install - dummy ok
918: dpif-netdev - miss upcall key matches flow_install - dummy-pmd ok
924: ofproto-dpif - active-backup bonding            skipped (ofproto-dpif.at:13)
926: ofproto-dpif - balance-tcp bonding              skipped (ofproto-dpif.at:105)
927: ofproto-dpif - balance-tcp bonding, different recirc flow  skipped (ofproto-dpif.at:155)
919: dpif-netdev - miss upcall key matches flow_dump - dummy ok
923: ofproto-dpif - revalidator/wait                 ok
920: dpif-netdev - miss upcall key matches flow_dump - dummy-pmd ok
928: ofproto-dpif - resubmit                         ok
922: dpctl - add-if set-if del-if                    ok
930: ofproto-dpif - write actions                    FAILED (ofproto-dpif.at:256)
931: ofproto-dpif - modify IPv6 Neighbor Solitication (ND) FAILED (ofproto-dpif.at:273)
932: ofproto-dpif - clear actions                    FAILED (ofproto-dpif.at:291)
929: ofproto-dpif - goto table                       ok
934: ofproto-dpif - all group in action list         FAILED (ofproto-dpif.at:319)
933: ofproto-dpif - group chaining                   FAILED (ofproto-dpif.at:305)
936: ofproto-dpif - group actions have no effect afterwards FAILED (ofproto-dpif.at:344)
935: ofproto-dpif - indirect group in action list    ok
937: ofproto-dpif - all group in action set          FAILED (ofproto-dpif.at:358)
938: ofproto-dpif - indirect group in action set     ok
940: ofproto-dpif - select group with watch port     ok
941: ofproto-dpif - select group with weight         ok
943: ofproto-dpif - fast failover group              ok
944: ofproto-dpif - group stats single bucket        ok
939: ofproto-dpif - select group                     ok
946: ofproto-dpif - registers                        ok
947: ofproto-dpif - extended registers               ok
945: ofproto-dpif - group stats all buckets          ok
949: ofproto-dpif - load and move order              FAILED (ofproto-dpif.at:605)
948: ofproto-dpif - extended-extended registers      ok
950: ofproto-dpif - copy-field into extended registers ok
951: ofproto-dpif - masked set-field into metadata   ok
952: ofproto-dpif - actset_output                    ok
942: ofproto-dpif - select group with hash selection method ok
953: ofproto-dpif - push-pop                         ok
955: ofproto-dpif - dec_ttl                          FAILED (ofproto-dpif.at:748)
954: ofproto-dpif - output                           ok
959: ofproto-dpif - note action deep inside ofpacts  ok
960: ofproto-dpif - output, OFPP_NONE ingress port   ok
961: ofproto-dpif - DSCP                             FAILED (ofproto-dpif.at:868)
963: ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) ok
964: ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) ok
962: ofproto-dpif - output/flood flags               ok
925: ofproto-dpif - balance-slb bonding              ok
956: ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts ok
957: ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts ok
958: ofproto-dpif - note at offset 24 in ofpacts     ok
966: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER ok
965: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER ok
967: ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE ok
970: ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP ok
968: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE ok
969: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE ok
971: ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP ok
972: ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP ok
975: ofproto-dpif - MPLS handling with goto_table    ok
976: ofproto-dpif - MPLS handling with write_actions ok
977: ofproto-dpif - table-miss flow (OpenFlow 1.0)   ok
978: ofproto-dpif - table-miss flow (OpenFlow 1.3)   ok
979: ofproto-dpif - table-miss flow with async config (OpenFlow 1.3) ok
980: ofproto-dpif - table-miss flow (OpenFlow 1.4)   ok
973: ofproto-dpif - controller                       ok
981: ofproto-dpif - packet-in reasons (Openflow 1.3) ok
983: ofproto-dpif - ARP modification slow-path       ok
982: ofproto-dpif - packet-in reasons (Openflow 1.4) ok
988: ofproto-dpif - fragment handling - upcall       skipped (ofproto-dpif.at:3771)
989: ofproto-dpif - fragment handling - actions      skipped (ofproto-dpif.at:3847)
991: ofproto-dpif - mirroring, select_all            ok
990: ofproto-dpif - exit                             ok
985: ofproto-dpif - MPLS handling                    ok
987: ofproto-dpif - fragment handling - trace        ok
993: ofproto-dpif - mirroring, OFPP_NONE ingress port ok
992: ofproto-dpif - mirroring, select_src            ok
994: ofproto-dpif - mirroring, select_dst            ok
995: ofproto-dpif - mirroring, select_vlan           ok
996: ofproto-dpif - mirroring, output_port           ok
998: ofproto-dpif - multiple VLAN output mirrors     ok
997: ofproto-dpif - mirroring, output_vlan           ok
986: ofproto-dpif - VLAN+MPLS handling               ok
999: ofproto-dpif - mirroring with recirculation     ok
1000: ofproto-dpif - mirroring, select_all with snaplen ok
1002: ofproto-dpif - mirroring, OFPP_NONE ingress port with snaplen ok
1001: ofproto-dpif - mirroring, select_src with snaplen ok
1003: ofproto-dpif - mirroring, select_dst with snaplen ok
1004: ofproto-dpif - mirroring, select_vlan with snaplen ok
1005: ofproto-dpif - mirroring, output_port with snaplen ok
1007: ofproto-dpif - multiple VLAN output mirrors with snaplen ok
1006: ofproto-dpif - mirroring, output_vlan with snaplen ok
1008: ofproto-dpif - resubmit with recirculation      ok
1009: ofproto-dpif - recirculation after resubmit     ok
1010: ofproto-dpif - continuation - pause at end of pipeline ok
1013: ofproto-dpif - continuation - action set        ok
1011: ofproto-dpif - continuation - actions           ok
1014: ofproto-dpif - continuation - data stack        ok
1015: ofproto-dpif - continuation - mirroring         ok
974: ofproto-dpif - MPLS handling                    ok
1019: ofproto-dpif - ofproto/trace from dpctl output  ok
1017: ofproto-dpif - ofproto/trace command 1          ok
1020: ofproto-dpif - ofproto/trace-packet-out         ok
1018: ofproto-dpif - ofproto/trace command 2          ok
1016: ofproto-dpif - continuation - patch ports       ok
1021: ofproto-dpif - MAC learning                     ok
1025: ofproto-dpif - truncate and output to patch port ok
1027: ofproto-dpif - sFlow packet sampling - IPv4 collector skipped (ofproto-dpif.at:5697)
1012: ofproto-dpif - continuation - resubmit          ok
1028: ofproto-dpif - sFlow packet sampling - IPv6 collector skipped (ofproto-dpif.at:5702)
1029: ofproto-dpif - sFlow packet sampling - LACP structures skipped (ofproto-dpif.at:5709)
1030: ofproto-dpif - sFlow packet sampling - tunnel set skipped (ofproto-dpif.at:5766)
1031: ofproto-dpif - sFlow packet sampling - tunnel push skipped (ofproto-dpif.at:5836)
1032: ofproto-dpif - sFlow packet sampling - MPLS     skipped (ofproto-dpif.at:5939)
1026: ofproto-dpif - truncate and output to gre tunnel FAILED (ofproto-dpif.at:5670)
1024: ofproto-dpif - basic truncate action            ok
1022: ofproto-dpif - MAC table overflow               ok
1023: ofproto-dpif - MAC table overflow fairness      ok
984: ofproto-dpif - VLAN handling                    ok
1039: ofproto-dpif - Flow IPFIX sanity check          skipped (ofproto-dpif.at:6251)
1040: ofproto-dpif - Flow IPFIX sanity check - tunnel set FAILED (ofproto-dpif.at:6293)
1033: ofproto-dpif - NetFlow flow expiration - IPv4 collector ok
1034: ofproto-dpif - NetFlow flow expiration - IPv6 collector ok
1037: ofproto-dpif - Bridge IPFIX sanity check        ok
1038: ofproto-dpif - Bridge IPFIX statistics check    ok
1042: ofproto-dpif - flow stats                       ok
1043: ofproto-dpif - flow stats, set-n-threads        ok
1041: ofproto-dpif - Flow IPFIX statistics check      ok
1044: ofproto-dpif - idle_age and hard_age increase over time ok
1046: ofproto-dpif - ovs-appctl dpif/dump-dps         ok
1045: ofproto-dpif - fin_timeout                      ok
1049: ofproto-dpif - ovs-appctl dpif/get-flow         FAILED (ofproto-dpif.at:6672)
1047: ofproto-dpif - ovs-appctl dpif/show             ok
1050: ofproto-dpif - ovs-appctl dpif/get-flow - pmd   FAILED (ofproto-dpif.at:6673)
1054: ofproto-dpif - patch ports - stack              skipped (ofproto-dpif.at:6825)
1051: ofproto-dpif - MPLS actions that result in a userspace action ok
1055: ofproto-dpif - port duration                    ok
1048: ofproto-dpif - ovs-appctl dpif/dump-flows       ok
1052: ofproto-dpif - MPLS actions that result in a drop ok
1057: ofproto-dpif megaflow - L2 classification       ok
1058: ofproto-dpif megaflow - L3 classification       ok
1059: ofproto-dpif megaflow - IPv6 classification     ok
1056: ofproto-dpif megaflow - port classification     ok
892: ofproto - ofport_request                        ok
1061: ofproto-dpif megaflow - normal                  FAILED (ofproto-dpif.at:7003)
1062: ofproto-dpif megaflow - normal - pmd            FAILED (ofproto-dpif.at:7004)
1066: ofproto-dpif megaflow - normal, active-backup bonding - dummy skipped (ofproto-dpif.at:7085)
1067: ofproto-dpif megaflow - normal, active-backup bonding - dummy-pmd skipped (ofproto-dpif.at:7086)
1053: ofproto-dpif - patch ports                      ok
1063: ofproto-dpif megaflow - mpls                    ok
1060: ofproto-dpif megaflow - L4 classification       ok
1064: ofproto-dpif megaflow - netflow - IPv4 collector ok
1065: ofproto-dpif megaflow - netflow - IPv6 collector ok
1068: ofproto-dpif megaflow - normal, balance-slb bonding ok
1069: ofproto-dpif megaflow - normal, balance-tcp bonding ok
1035: ofproto-dpif - NetFlow active expiration - IPv4 collector ok
1070: ofproto-dpif megaflow - resubmit port action    ok
1071: ofproto-dpif megaflow - resubmit table action   ok
1072: ofproto-dpif megaflow - goto_table action       ok
1036: ofproto-dpif - NetFlow active expiration - IPv6 collector ok
1074: ofproto-dpif megaflow - mirroring, select_vlan  ok
1078: ofproto-dpif megaflow - tunnels                 FAILED (ofproto-dpif.at:7321)
1075: ofproto-dpif megaflow - move action             ok
1073: ofproto-dpif megaflow - mirroring, select_all   ok
1076: ofproto-dpif megaflow - push action             ok
1081: ofproto-dpif megaflow - disabled                FAILED (ofproto-dpif.at:7425)
1082: ofproto-dpif megaflow - disabled - pmd          FAILED (ofproto-dpif.at:7426)
1079: ofproto-dpif megaflow - dec_ttl                 FAILED (ofproto-dpif.at:7362)
1077: ofproto-dpif megaflow - learning                ok
1083: ofproto-dpif - datapath port number change      ok
1080: ofproto-dpif megaflow - set dl_dst              FAILED (ofproto-dpif.at:7383)
1085: ofproto-dpif - ofproto-dpif-monitor 1           FAILED (ofproto-dpif.at:7529)
1089: ofproto-dpif - infinite resubmit                ok
1092: ofproto-dpif - stack too deep                   ok
1084: ofproto - bundle with variable bfd/cfm config   ok
1088: ofproto-dpif - backward resubmit                ok
1086: ofproto-dpif - ofproto-dpif-monitor 2           FAILED (ofproto-dpif.at:7580)
1087: ofproto-dpif - forward resubmit                 ok
1097: ofproto-dpif - ICMPv6                           ok
1098: ofproto-dpif - ICMPv6 type match                ok
1093: ofproto-dpif packet-out controller              ok
1099: ofproto-dpif - Neighbor Discovery set-field with checksum update ok
1100: ofproto-dpif - vlan matching                    ok
1095: ofproto-dpif packet-out goto_table              ok
1096: ofproto-dpif packet-out table-miss (continue)   ok
1103: ofproto-dpif - trace (unchanged)                ok
1101: ofproto-dpif - in place modification            ok
1104: ofproto-dpif - conntrack - controller           ok
1105: ofproto-dpif - conntrack - ipv6                 ok
1102: ofproto-dpif - in place modification (vlan)     ok
1094: ofproto-dpif packet-out controller (patch port) ok
1106: ofproto-dpif - conntrack - output action        ok
1107: ofproto-dpif - conntrack - expiration           ok
1108: ofproto-dpif - conntrack - untrackable traffic  ok
1114: ofproto-dpif - conntrack - ct_label datapath flow skipped (ofproto-dpif.at:8676)
1110: ofproto-dpif - conntrack - recirc,commit        ok
1109: ofproto-dpif - conntrack - zones                ok
1091: ofproto-dpif - too many output actions          ok
1112: ofproto-dpif - conntrack - ct_mark              ok
1113: ofproto-dpif - conntrack - ct_label             FAILED (ofproto-dpif.at:8655)
1115: ofproto-dpif - conntrack - no output            ok
1090: ofproto-dpif - exponential resubmit chain       ok
1117: ofproto-dpif - conntrack - tcp pick up          FAILED (ofproto-dpif.at:8883)
1122: create empty, reread                            ok
1123: write one, reread                               ok
1121: bridge - set MAC address of internal port       ok
1120: bridge - ports that disappear get added back    ok
1119: ofproto - fragment prerequisites                ok
1118: ofproto - set mtu                               ok
1125: write one, reread                               ok
1116: ofproto-dpif - conntrack - tcp port reuse       ok
1124: check that create fails if file exists          ok
1126: write one, reread, append                       ok
1127: write, reread one, overwrite                    ok
1128: write, add corrupted data, read                 ok
1133: integer - C                                     ok
1129: write, add corrupted data, read, overwrite      ok
1130: write, corrupt some data, read, overwrite       ok
1136: real - C                                        ok
1132: write bad JSON, read, overwrite                 ok
1131: write, truncate file, read, overwrite           ok
1139: boolean - C                                     ok
1142: string - C                                      ok
1134: integer - Python2                               ok
1135: integer - Python3                               ok
1137: real - Python2                                  ok
1140: boolean - Python2                               ok
1145: uuid - C                                        ok
1141: boolean - Python3                               ok
1138: real - Python3                                  ok
1148: void is not a valid atomic-type - C             ok
1143: string - Python2                                ok
1150: integer enum - C                                ok
1111: ofproto-dpif - conntrack - ICMP related         FAILED (ofproto-dpif.at:8551)
1153: integer >= 5 - C                                ok
1144: string - Python3                                ok
1146: uuid - Python2                                  ok
1156: integer <= 7 - C                                ok
1147: uuid - Python3                                  ok
1151: integer enum - Python2                          ok
1149: void is not a valid atomic-type - Python2       ok
1159: integer between -5 and 10 - C                   ok
1152: integer enum - Python3                          ok
1154: integer >= 5 - Python2                          ok
1162: integer max may not be less than min - C        ok
1155: integer >= 5 - Python3                          ok
1164: real enum - C                                   ok
1167: real >= -1.5 - C                                ok
1157: integer <= 7 - Python2                          ok
1158: integer <= 7 - Python3                          ok
1160: integer between -5 and 10 - Python2             ok
1170: real <= 1e5 - C                                 ok
1161: integer between -5 and 10 - Python3             ok
1165: real enum - Python2                             ok
1173: real between -2.5 and 3.75 - C                  ok
1163: integer max may not be less than min - Python2  ok
1166: real enum - Python3                             ok
1176: real max may not be less than min - C           ok
1168: real >= -1.5 - Python2                          ok
1178: boolean - C                                     ok
1169: real >= -1.5 - Python3                          ok
1181: boolean enum - C                                ok
1171: real <= 1e5 - Python2                           ok
1172: real <= 1e5 - Python3                           ok
1174: real between -2.5 and 3.75 - Python2            ok
1184: string enum - C                                 ok
1175: real between -2.5 and 3.75 - Python3            ok
1177: real max may not be less than min - Python2     ok
1179: boolean - Python2                               ok
1187: string minLength - C                            ok
1190: string maxLength - C                            ok
1180: boolean - Python3                               ok
1182: boolean enum - Python2                          ok
1183: boolean enum - Python3                          ok
1193: string minLength and maxLength - C              ok
1185: string enum - Python2                           ok
1186: string enum - Python3                           ok
1188: string minLength - Python2                      ok
1196: maxLength must not be less than minLength - C   ok
1189: string minLength - Python3                      ok
1191: string maxLength - Python2                      ok
1198: maxLength must not be negative - C              ok
1200: uuid enum - C                                   ok
1192: string maxLength - Python3                      ok
1203: uuid refTable - C                               ok
1194: string minLength and maxLength - Python2        ok
1195: string minLength and maxLength - Python3        ok
1206: uuid refTable must be valid id - C              ok
1197: maxLength must not be less than minLength - Python2 ok
1208: void is not a valid base-type - C               ok
1201: uuid enum - Python2                             ok
1199: maxLength must not be negative - Python2        ok
1210: "type" member must be present - C               ok
1202: uuid enum - Python3                             ok
1204: uuid refTable - Python2                         ok
1212: simple integer - C                              ok
1215: simple real - C                                 ok
1205: uuid refTable - Python3                         ok
1218: simple boolean - C                              ok
1207: uuid refTable must be valid id - Python2        ok
1209: void is not a valid base-type - Python2         ok
1221: simple string - C                               ok
1213: simple integer - Python2                        ok
1211: "type" member must be present - Python2         ok
1216: simple real - Python2                           ok
1214: simple integer - Python3                        ok
1224: simple uuid - C                                 ok
1217: simple real - Python3                           ok
1227: integer in object - C                           ok
1219: simple boolean - Python2                        ok
1230: real in object with explicit min and max - C    ok
1220: simple boolean - Python3                        ok
1222: simple string - Python2                         ok
1223: simple string - Python3                         ok
1225: simple uuid - Python2                           ok
1233: key type is required - C                        ok
1226: simple uuid - Python3                           ok
1235: void is not a valid type - C                    ok
1228: integer in object - Python2                     ok
1237: optional boolean - C                            ok
1229: integer in object - Python3                     ok
1240: set of 1 to 3 uuids - C                         ok
1231: real in object with explicit min and max - Python2 ok
1243: set of 0 to 3 strings - C                       ok
1232: real in object with explicit min and max - Python3 ok
1234: key type is required - Python2                  ok
1236: void is not a valid type - Python2              ok
1238: optional boolean - Python2                      ok
1246: set of 0 or more integers - C                   ok
1249: set of 1 or more reals - C                      ok
1241: set of 1 to 3 uuids - Python2                   ok
1239: optional boolean - Python3                      ok
1252: set max cannot be less than min - C             ok
1242: set of 1 to 3 uuids - Python3                   ok
1244: set of 0 to 3 strings - Python2                 ok
1254: set max cannot be negative - C                  ok
1245: set of 0 to 3 strings - Python3                 ok
1256: set min cannot be negative - C                  ok
1247: set of 0 or more integers - Python2             ok
1248: set of 0 or more integers - Python3             ok
1258: set min cannot be greater than one - C          ok
1250: set of 1 or more reals - Python2                ok
1260: map of 1 integer to boolean - C                 ok
1251: set of 1 or more reals - Python3                ok
1263: map of 1 boolean to integer, explicit min and max - C ok
1253: set max cannot be less than min - Python2       ok
1255: set max cannot be negative - Python2            ok
1266: map of 1 to 5 uuid to real - C                  ok
1257: set min cannot be negative - Python2            ok
1259: set min cannot be greater than one - Python2    ok
1261: map of 1 integer to boolean - Python2           ok
1269: map of 0 to 10 string to uuid - C               ok
1272: map of 1 to 20 real to string - C               ok
1262: map of 1 integer to boolean - Python3           ok
1264: map of 1 boolean to integer, explicit min and max - Python2 ok
1265: map of 1 boolean to integer, explicit min and max - Python3 ok
1275: map of 0 or more string to real - C             ok
1267: map of 1 to 5 uuid to real - Python2            ok
1268: map of 1 to 5 uuid to real - Python3            ok
1278: map key type is required - C                    ok
1280: default atoms - C                               ok
1270: map of 0 to 10 string to uuid - Python2         ok
1271: map of 0 to 10 string to uuid - Python3         ok
1273: map of 1 to 20 real to string - Python2         ok
1283: default data - C                                ok
1274: map of 1 to 20 real to string - Python3         ok
1286: integer atom from JSON - C                      ok
1277: map of 0 or more string to real - Python3       ok
1276: map of 0 or more string to real - Python2       ok
1279: map key type is required - Python2              ok
1289: integer atom from string                        ok
1281: default atoms - Python2                         ok
1290: real atom from JSON - C                         ok
1282: default atoms - Python3                         ok
1284: default data - Python2                          ok
1293: real atom from string                           ok
1294: boolean atom from JSON - C                      ok
1285: default data - Python3                          ok
1297: boolean atom from string                        ok
1298: string atom from JSON - C                       ok
1287: integer atom from JSON - Python2                ok
1288: integer atom from JSON - Python3                ok
1301: string atom from string                         ok
1302: uuid atom from JSON - C                         ok
1291: real atom from JSON - Python2                   ok
1292: real atom from JSON - Python3                   ok
1305: uuid atom from string                           ok
1295: boolean atom from JSON - Python2                ok
1306: integer atom sorting - C                        ok
1296: boolean atom from JSON - Python3                ok
1309: real atom sorting - C                           ok
1299: string atom from JSON - Python2                 ok
1312: boolean atom sorting - C                        ok
1300: string atom from JSON - Python3                 ok
1303: uuid atom from JSON - Python2                   ok
1315: string atom sorting - C                         ok
1304: uuid atom from JSON - Python3                   ok
1307: integer atom sorting - Python2                  ok
1310: real atom sorting - Python2                     ok
1318: uuid atom sorting - C                           ok
1308: integer atom sorting - Python3                  ok
1311: real atom sorting - Python3                     ok
1321: real not acceptable integer JSON atom - C       ok
1313: boolean atom sorting - Python2                  ok
1314: boolean atom sorting - Python3                  ok
1324: no invalid UTF-8 sequences in strings           ok
1316: string atom sorting - Python2                   ok
1326: real not acceptable integer string atom         ok
1327: string "true" not acceptable boolean JSON atom - C ok
1317: string atom sorting - Python3                   ok
1319: uuid atom sorting - Python2                     ok
1330: string "true" not acceptable boolean string atom ok
1331: integer not acceptable string JSON atom - C     ok
1320: uuid atom sorting - Python3                     ok
1322: real not acceptable integer JSON atom - Python2 ok
1323: real not acceptable integer JSON atom - Python3 ok
1334: uuid atom must be expressed as JSON array - C   ok
1325: no invalid UTF-8 sequences in strings - Python  ok
1337: named-uuid requires symbol table - C            ok
1328: string "true" not acceptable boolean JSON atom - Python2 ok
1329: string "true" not acceptable boolean JSON atom - Python3 ok
1340: empty string atom must be quoted                ok
1341: quotes must be balanced                         ok
1335: uuid atom must be expressed as JSON array - Python2 ok
1342: quoted string must not contain unescaped quote  ok
1332: integer not acceptable string JSON atom - Python2 ok
1333: integer not acceptable string JSON atom - Python3 ok
1343: quoted string must not end with backslash       ok
1345: integer atom enum - C                           ok
1344: uuids must be valid                             ok
1336: uuid atom must be expressed as JSON array - Python3 ok
1338: named-uuid requires symbol table - Python2      ok
1348: real atom enum - C                              ok
1339: named-uuid requires symbol table - Python3      ok
1351: boolean atom enum - C                           ok
1354: string atom enum - C                            ok
1346: integer atom enum - Python2                     ok
1349: real atom enum - Python2                        ok
1347: integer atom enum - Python3                     ok
1357: uuid atom enum - C                              ok
1352: boolean atom enum - Python2                     ok
1350: real atom enum - Python3                        ok
1353: boolean atom enum - Python3                     ok
1355: string atom enum - Python2                      ok
1360: integers >= 5 - C                               ok
1363: integers <= -1 - C                              ok
1356: string atom enum - Python3                      ok
1366: integers in range -10 to 10 - C                 ok
1358: uuid atom enum - Python2                        ok
1369: reals >= 5 - C                                  ok
1361: integers >= 5 - Python2                         ok
1359: uuid atom enum - Python3                        ok
1364: integers <= -1 - Python2                        ok
1372: reals <= -1 - C                                 ok
1362: integers >= 5 - Python3                         ok
1365: integers <= -1 - Python3                        ok
1367: integers in range -10 to 10 - Python2           ok
1375: reals in range -10 to 10 - C                    ok
1368: integers in range -10 to 10 - Python3           ok
1378: strings at least 2 characters long - C          ok
1379: strings at least 2 characters long - Python2    skipped (ovsdb-data.at:466)
1370: reals >= 5 - Python2                            ok
1381: strings no more than 2 characters long - C      ok
1371: reals >= 5 - Python3                            ok
1373: reals <= -1 - Python2                           ok
1384: integer JSON datum - C                          ok
1376: reals in range -10 to 10 - Python2              ok
1374: reals <= -1 - Python3                           ok
1387: integer string datum                            ok
1388: real JSON datum - C                             ok
1377: reals in range -10 to 10 - Python3              ok
1380: strings at least 2 characters long - Python3    ok
1391: real string datum                               ok
1382: strings no more than 2 characters long - Python2 ok
1392: boolean JSON datum - C                          ok
1385: integer JSON datum - Python2                    ok
1395: boolean string datum                            ok
1383: strings no more than 2 characters long - Python3 ok
1396: string JSON datum - C                           ok
1386: integer JSON datum - Python3                    ok
1399: string string datum                             ok
1389: real JSON datum - Python2                       ok
1400: JSON optional boolean - C                       ok
1390: real JSON datum - Python3                       ok
1393: boolean JSON datum - Python2                    ok
1404: JSON set of 0 or more integers - C              ok
1403: string optional boolean                         ok
1394: boolean JSON datum - Python3                    ok
1407: string set of 0 or more integers                ok
1397: string JSON datum - Python2                     ok
1408: JSON set of 1 to 3 uuids - C                    ok
1398: string JSON datum - Python3                     ok
1411: string set of 1 to 3 uuids                      ok
1401: JSON optional boolean - Python2                 ok
1412: JSON set of 0 to 3 strings - C                  ok
1402: JSON optional boolean - Python3                 ok
1415: string set of 0 to 3 strings                    ok
1405: JSON set of 0 or more integers - Python2        ok
1416: duplicate boolean not allowed in JSON set - C   ok
1406: JSON set of 0 or more integers - Python3        ok
1418: duplicate boolean not allowed in string set     ok
1409: JSON set of 1 to 3 uuids - Python2              ok
1419: duplicate integer not allowed in JSON set - C   ok
1421: duplicate integer not allowed in string set     ok
1422: duplicate real not allowed in JSON set - C      ok
1410: JSON set of 1 to 3 uuids - Python3              ok
1413: JSON set of 0 to 3 strings - Python2            ok
1424: duplicate real not allowed in string set        ok
1425: duplicate string not allowed in JSON set - C    ok
1414: JSON set of 0 to 3 strings - Python3            ok
1427: duplicate string not allowed in string set      ok
1428: duplicate uuid not allowed in JSON set - C      ok
1431: JSON map of 1 integer to boolean - C            ok
1430: duplicate uuid not allowed in string set        ok
1417: duplicate boolean not allowed in JSON set - Python2 ok
1434: string map of 1 integer to boolean              ok
1435: JSON map of at least 1 integer to boolean - C   ok
1420: duplicate integer not allowed in JSON set - Python2 ok
1423: duplicate real not allowed in JSON set - Python2 ok
1438: string map of at least 1 integer to boolean     ok
1439: JSON map of 1 boolean to integer - C            ok
1426: duplicate string not allowed in JSON set - Python2 ok
1442: string map of 1 boolean to integer              ok
1429: duplicate uuid not allowed in JSON set - Python2 ok
1432: JSON map of 1 integer to boolean - Python2      ok
1443: JSON map of 1 uuid to real - C                  ok
1433: JSON map of 1 integer to boolean - Python3      ok
1446: string map of 1 uuid to real                    ok
1436: JSON map of at least 1 integer to boolean - Python2 ok
1437: JSON map of at least 1 integer to boolean - Python3 ok
1447: JSON map of 10 string to string - C             ok
1440: JSON map of 1 boolean to integer - Python2      ok
1450: string map of 10 string to string               ok
1451: duplicate integer key not allowed in JSON map - C ok
1441: JSON map of 1 boolean to integer - Python3      ok
1453: duplicate integer key not allowed in string map ok
1454: generate and apply diff -- integer              ok
1444: JSON map of 1 uuid to real - Python2            ok
1455: generate and apply diff -- boolean              ok
1456: generate and apply diff -- string               ok
1457: generate and apply diff -- set                  ok
1445: JSON map of 1 uuid to real - Python3            ok
1458: generate and apply diff -- set -- size error    ok
1459: generate and apply diff -- map                  ok
1461: ordinary column - C                             ok
1460: generate and apply diff with map -- size error  ok
1448: JSON map of 10 string to string - Python2       ok
1464: immutable column - C                            ok
1467: ephemeral column - C                            ok
1449: JSON map of 10 string to string - Python3       ok
1470: non-root table with one column - C              ok
1452: duplicate integer key not allowed in JSON map - Python2 ok
1462: ordinary column - Python2                       ok
1465: immutable column - Python2                      ok
1463: ordinary column - Python3                       ok
1468: ephemeral column - Python2                      ok
1466: immutable column - Python3                      ok
1473: immutable table with one column - C             ok
1469: ephemeral column - Python3                      ok
1476: root table with one column - C                  ok
1471: non-root table with one column - Python2        ok
1479: non-root table with default_is_root=true - C    ok
1472: non-root table with one column - Python3        ok
1482: root table with default_is_root=true - C        ok
1474: immutable table with one column - Python2       ok
1477: root table with one column - Python2            ok
1475: immutable table with one column - Python3       ok
1485: table with maxRows of 2 - C                     ok
1478: root table with one column - Python3            ok
1480: non-root table with default_is_root=true - Python2 ok
1488: table with index - C                            ok
1481: non-root table with default_is_root=true - Python3 ok
1483: root table with default_is_root=true - Python2  ok
1491: table with syntax error in index - C            ok
1493: table with empty index - C                      ok
1484: root table with default_is_root=true - Python3  ok
1495: table with index of ephemeral column - C        ok
1486: table with maxRows of 2 - Python2               ok
1497: column names may not begin with _ - C           ok
1489: table with index - Python2                      ok
1487: table with maxRows of 2 - Python3               ok
1490: table with index - Python3                      ok
1499: table must have at least one column (1) - C     ok
1501: table must have at least one column (2) - C     ok
1492: table with syntax error in index - Python2      ok
1503: table maxRows must be positive - C              ok
1494: table with empty index - Python2                ok
1505: row with one string column                      ok
1506: row with one integer column                     ok
1507: row with one real column                        ok
1496: table with index of ephemeral column - Python2  ok
1508: row with one boolean column                     ok
1509: row with one uuid column                        ok
1510: row with set of 1 to 2 elements                 ok
1511: row with map of 1 to 2 elements                 ok
1512: row with several columns                        ok
1513: row hashing (scalars)                           ok
1498: column names may not begin with _ - Python2     ok
1514: row hashing (sets)                              ok
1500: table must have at least one column (1) - Python2 ok
1515: row hashing (maps)                              ok
1516: schema with valid refTables - C                 ok
1502: table must have at least one column (2) - Python2 ok
1519: schema with ephemeral strong references - C     ok
1504: table maxRows must be positive - Python2        ok
1522: schema with immutable weak references - C       ok
1525: schema without version number - C               ok
1517: schema with valid refTables - Python2           ok
1520: schema with ephemeral strong references - Python2 ok
1518: schema with valid refTables - Python3           ok
1523: schema with immutable weak references - Python2 ok
1521: schema with ephemeral strong references - Python3 ok
1528: schema with invalid refTables - C               ok
1526: schema without version number - Python2         ok
1524: schema with immutable weak references - Python3 ok
1532: null condition                                  ok
1530: schema with invalid version number - C          ok
1533: conditions on scalars                           ok
1534: disallowed conditions on scalars                ok
1527: schema without version number - Python3         ok
1537: boolean condition                               ok
1535: conditions on sets                              ok
1536: condition sorting                               ok
1538: boolean condition                               ok
1539: evaluating null condition                       ok
1540: evaluating conditions on integers               ok
1542: evaluating conditions on booleans               ok
1541: evaluating conditions on reals                  ok
1543: evaluating conditions on strings                ok
1544: evaluating conditions on UUIDs                  ok
1545: evaluating conditions on sets                   ok
1546: evaluating conditions on maps (1)               ok
1547: evaluating conditions on maps (2)               ok
1549: evaluating conditions on optional strings       ok
1548: evaluating conditions on optional integers      ok
1550: evaluating conditions on optional reals         ok
1551: evaluating false boolean condition              ok
1529: schema with invalid refTables - Python2         ok
1552: evaluating true boolean condition               ok
1555: mutations on scalars                            ok
1553: compare condition                               ok
1554: null mutation                                   ok
1556: disallowed mutations on scalars                 ok
1557: disallowed mutations on immutable columns       ok
1559: executing null mutation                         ok
1558: mutations on sets                               ok
1531: schema with invalid version number - Python2    ok
1560: executing mutations on integers                 ok
1561: integer overflow detection                      ok
1562: executing mutations on integers with constraints ok
1563: executing mutations on reals                    ok
1565: executing mutations on reals with constraints   ok
1564: real overflow detection                         ok
1566: executing mutations on integer sets             ok
1567: executing mutations on integer sets with constraints ok
1568: executing mutations on real sets                ok
1569: executing mutations on boolean sets             ok
1570: executing mutations on string sets              ok
1571: executing mutations on uuid sets                ok
1573: queries on scalars                              ok
1572: executing mutations on integer maps             ok
1574: queries on sets                                 ok
1575: queries on maps (1)                             ok
1576: queries on maps (2)                             ok
1577: UUID-distinct queries on scalars                ok
1578: Boolean-distinct queries on scalars             ok
1579: parse colunn set containing bad name            ok
1580: empty table, empty transaction                  ok
1581: nonempty table, empty transaction               ok
1583: insert, abort                                   ok
1582: insert, commit                                  ok
1584: modify, commit                                  ok
1585: modify, abort                                   ok
1586: delete, commit                                  ok
1587: delete, abort                                   ok
1589: modify, delete, abort                           ok
1588: modify, delete, commit                          ok
1590: insert, delete, commit                          ok
1591: insert, delete, abort                           ok
1592: insert, modify, delete, commit                  ok
1593: insert, modify, delete, abort                   ok
1594: deletes are aborted cleanly                     ok
1595: block insert on read only DB                    ok
1596: allow select on read only DB                    ok
1597: uuid-name must be <id>                          ok
1598: named-uuid must be <id>                         ok
1599: duplicate uuid-name not allowed                 ok
1600: insert default row, query table                 ok
1601: insert row, query table                         ok
1602: insert rows, query by value                     ok
1603: insert rows, query by named-uuid                ok
1604: insert rows, update rows by value               ok
1605: insert rows, mutate rows                        ok
1607: insert rows, delete rows by value               ok
1606: insert rows, delete by named-uuid               ok
1608: insert rows, delete by (non-matching) value     ok
1609: insert rows, delete all                         ok
1610: insert row, query table, commit                 ok
1611: insert row, query table, commit durably         ok
1612: equality wait with correct rows                 ok
1613: equality wait with extra row                    ok
1614: equality wait with missing row                  ok
1615: inequality wait with correct rows               ok
1616: inequality wait with extra row                  ok
1617: inequality wait with missing row                ok
1618: insert and update constraints                   ok
1619: index uniqueness checking                       ok
1620: referential integrity -- simple                 ok
1621: referential integrity -- mutual references      ok
1623: immutable columns                               ok
1622: weak references                                 ok
1624: garbage collection                              ok
1625: trigger fires immediately                       ok
1626: trigger times out                               ok
1627: trigger fires after delay                       ok
1628: delayed trigger modifies database               ok
1629: one delayed trigger wakes up another            ok
1630: insert default row, query table                 ok
1633: insert rows, query by named-uuid                ok
1631: insert row, query table                         ok
1636: insert rows, delete by named-uuid               ok
1632: insert rows, query by value                     ok
1634: insert rows, update rows by value               ok
1635: insert rows, mutate rows                        ok
1639: insert rows, delete all                         ok
1640: insert row, query table, commit                 ok
1637: insert rows, delete rows by value               ok
1641: insert row, query table, commit durably         ok
1642: equality wait with correct rows                 ok
1638: insert rows, delete by (non-matching) value     ok
1643: equality wait with extra row                    ok
1645: inequality wait with correct rows               ok
1644: equality wait with missing row                  ok
1646: inequality wait with extra row                  ok
1647: inequality wait with missing row                ok
1655: transaction comments                            ok
1648: insert and update constraints                   ok
1653: immutable columns                               ok
1651: referential integrity -- mutual references      ok
1649: index uniqueness checking                       ok
1650: referential integrity -- simple                 ok
1659: ovsdb-tool schema-version                       ok
1660: ovsdb-tool db-version                           ok
1661: ovsdb-tool schema-cksum                         ok
1662: ovsdb-tool db-cksum                             ok
1663: ovsdb-tool needs-conversion (no conversion needed) ok
1664: ovsdb-tool needs-conversion (conversion needed) ok
1652: weak references                                 ok
1654: garbage collection                              ok
1657: ovsdb-tool convert -- removing a column         ok
1665: insert default row, query table                 ok
1658: ovsdb-tool convert -- adding a column           ok
1666: insert row, query table                         ok
1668: insert rows, query by named-uuid                ok
1667: insert rows, query by value                     ok
1656: ovsdb-tool compact                              ok
1671: insert rows, delete by named-uuid               ok
1669: insert rows, update rows by value               ok
1670: insert rows, mutate rows                        ok
1674: insert rows, delete all                         ok
1675: insert row, query table, commit                 ok
1672: insert rows, delete rows by value               ok
1673: insert rows, delete by (non-matching) value     ok
1676: insert row, query table, commit durably         ok
1677: equality wait with correct rows                 ok
1678: equality wait with extra row                    ok
1679: equality wait with missing row                  ok
1680: inequality wait with correct rows               ok
1681: inequality wait with extra row                  ok
1682: inequality wait with missing row                ok
1683: insert and update constraints                   ok
1684: index uniqueness checking                       ok
1688: immutable columns                               ok
1686: referential integrity -- mutual references      ok
1690: truncating corrupted database log               ok
1685: referential integrity -- simple                 ok
1692: ovsdb-client get-schema-version                 ok
1691: truncating database log with bad transaction    ok
1693: database multiplexing implementation            ok
1687: weak references                                 ok
1689: garbage collection                              ok
1697: --remote=db: implementation                     ok
1695: ovsdb-server/add-db with --monitor              ok
1696: ovsdb-server/add-db and remove-db with --monitor ok
1703: ovsdb-server combines updates on backlogged connections skipped (ovsdb-server.at:700)
1698: ovsdb-server/add-remote and remove-remote       ok
1701: SSL db: implementation                          ok
1699: ovsdb-server/add-remote with --monitor          ok
1694: ovsdb-server/add-db and remove-db               ok
1700: ovsdb-server/add-remote and remove-remote with --monitor ok
1704: insert default row, query table                 ok
1705: insert row, query table                         ok
1707: insert rows, query by named-uuid                ok
1706: insert rows, query by value                     ok
1710: insert rows, delete by named-uuid               ok
1708: insert rows, update rows by value               ok
1709: insert rows, mutate rows                        ok
1713: insert rows, delete all                         ok
1711: insert rows, delete rows by value               ok
1714: insert row, query table, commit                 ok
1712: insert rows, delete by (non-matching) value     ok
1702: compacting online                               ok
1715: insert row, query table, commit durably         ok
1716: equality wait with correct rows                 ok
1717: equality wait with extra row                    ok
1718: equality wait with missing row                  ok
1719: inequality wait with correct rows               ok
1720: inequality wait with extra row                  ok
1721: inequality wait with missing row                ok
1729: insert default row, query table                 ok
1722: insert and update constraints                   ok
1727: immutable columns                               ok
1725: referential integrity -- mutual references      ok
1723: index uniqueness checking                       ok
1724: referential integrity -- simple                 ok
1730: ovsdb-client get-schema-version - tcp socket    ok
1731: insert default row, query table                 ok
1732: insert row, query table                         ok
1734: insert rows, query by named-uuid                ok
1726: weak references                                 ok
1733: insert rows, query by value                     ok
1737: insert rows, delete by named-uuid               ok
1735: insert rows, update rows by value               ok
1728: garbage collection                              ok
1736: insert rows, mutate rows                        ok
1740: insert rows, delete all                         ok
1741: insert row, query table, commit                 ok
1738: insert rows, delete rows by value               ok
1739: insert rows, delete by (non-matching) value     ok
1742: insert row, query table, commit durably         ok
1743: equality wait with correct rows                 ok
1744: equality wait with extra row                    ok
1745: equality wait with missing row                  ok
1746: inequality wait with correct rows               ok
1747: inequality wait with extra row                  ok
1748: inequality wait with missing row                ok
1749: insert and update constraints                   ok
1752: referential integrity -- mutual references      ok
1756: insert default row, query table                 ok
1750: index uniqueness checking                       ok
1751: referential integrity -- simple                 ok
1754: immutable columns                               ok
1757: insert default row, query table                 ok
1760: insert rows, query by named-uuid                ok
1758: insert row, query table                         ok
1753: weak references                                 ok
1763: insert rows, delete by named-uuid               ok
1755: garbage collection                              ok
1759: insert rows, query by value                     ok
1761: insert rows, update rows by value               ok
1762: insert rows, mutate rows                        ok
1766: insert rows, delete all                         ok
1767: insert row, query table, commit                 ok
1769: equality wait with correct rows                 ok
1768: insert row, query table, commit durably         ok
1764: insert rows, delete rows by value               ok
1770: equality wait with extra row                    ok
1772: inequality wait with correct rows               ok
1771: equality wait with missing row                  ok
1773: inequality wait with extra row                  ok
1765: insert rows, delete by (non-matching) value     ok
1774: inequality wait with missing row                ok
1775: insert and update constraints                   ok
1780: immutable columns                               ok
1782: insert default row, query table                 ok
1778: referential integrity -- mutual references      ok
1776: index uniqueness checking                       ok
1777: referential integrity -- simple                 ok
1783: insert row, query table                         ok
1785: insert rows, query by named-uuid                ok
1784: insert rows, query by value                     ok
1786: insert rows, update rows by value               ok
1788: insert rows, delete by named-uuid               ok
1779: weak references                                 ok
1787: insert rows, mutate rows                        ok
1781: garbage collection                              ok
1791: insert rows, delete all                         ok
1792: insert row, query table, commit                 ok
1789: insert rows, delete rows by value               ok
1790: insert rows, delete by (non-matching) value     ok
1793: insert row, query table, commit durably         ok
1795: equality wait with extra row                    ok
1794: equality wait with correct rows                 ok
1796: equality wait with missing row                  ok
1797: inequality wait with correct rows               ok
1798: inequality wait with extra row                  ok
1799: inequality wait with missing row                ok
1800: insert and update constraints                   ok
1803: referential integrity -- mutual references      ok
1801: index uniqueness checking                       ok
1802: referential integrity -- simple                 ok
1805: immutable columns                               ok
1807: insert monitored table, insert excluded table   ok
1804: weak references                                 ok
1808: insert monitored table, update excluded table   ok
1813: ovsdb-server/get-active-ovsdb-server            ok
1809: update monitored table, insert excluded table   ok
1810: update monitored table, update excluded table   ok
1806: garbage collection                              ok
1814: ovsdb-server/set-active-ovsdb-server            ok
1815: ovsdb-server/get-sync-exclude-tables            ok
1811: delete monitored table, insert excluded table   ok
1812: delete monitored table, update excluded table   ok
1820: monitor insert into empty table                 ok
1821: monitor insert into populated table             ok
1816: ovsdb-server/set-sync-exclude-tables            ok
1822: monitor delete                                  ok
1817: ovsdb-server/connect-active-server              ok
1823: monitor row update                              ok
1825: monitor insert-and-update transaction           ok
1824: monitor no-op row updates                       ok
1826: monitor insert-update-and-delete transaction    ok
1827: monitor weak reference change                   ok
1818: ovsdb-server/disconnect-active-server           ok
1828: monitor insert-update-and-delete transaction    ok
1829: monitor all operations                          ok
1830: monitor initial only                            ok
1831: monitor insert only                             ok
1832: monitor delete only                             ok
1833: monitor modify only                             ok
1834: monitor-cond empty condition                    ok
1835: monitor-cond multiple conditions                ok
1819: ovsdb-server/active-backup-role-switching       ok
1836: monitor-cond delete from populated table        ok
1837: monitor-cond insert due to modify               ok
1839: monitor-cond condition non-monitored columns    ok
1838: monitor-cond delete due to modify               ok
1842: simple idl, initially empty, no ops - C         ok
1840: monitor-cond-change                             ok
1843: simple idl, initially empty, no ops - Python2   ok
1844: simple idl, initially empty, no ops - Python3   ok
1845: simple idl, initially empty, no ops - Python2 - register_columns ok
1841: simple passive idl, initially empty, select empty - Python ptcp ok
1846: simple idl, initially empty, no ops - Python3 - register_columns ok
1847: simple idl, initially empty, no ops - Python2 - tcp ok
1848: simple idl, initially empty, no ops - Python3 - tcp ok
1849: simple idl, initially empty, no ops - Python2 - tcp6 ok
1851: simple idl, initially empty, various ops - C    ok
1850: simple idl, initially empty, no ops - Python3 - tcp6 ok
1852: simple idl, initially empty, various ops - Python2 ok
1853: simple idl, initially empty, various ops - Python3 ok
1856: simple idl, initially empty, various ops - Python2 - tcp ok
1854: simple idl, initially empty, various ops - Python2 - register_columns ok
1855: simple idl, initially empty, various ops - Python3 - register_columns ok
1860: simple idl, initially populated - C             ok
1857: simple idl, initially empty, various ops - Python3 - tcp ok
1858: simple idl, initially empty, various ops - Python2 - tcp6 ok
1859: simple idl, initially empty, various ops - Python3 - tcp6 ok
1861: simple idl, initially populated - Python2       ok
1863: simple idl, initially populated - Python2 - register_columns ok
1862: simple idl, initially populated - Python3       ok
1864: simple idl, initially populated - Python3 - register_columns ok
1865: simple idl, initially populated - Python2 - tcp ok
1869: simple idl, writing via IDL - C                 ok
1866: simple idl, initially populated - Python3 - tcp ok
1867: simple idl, initially populated - Python2 - tcp6 ok
1868: simple idl, initially populated - Python3 - tcp6 ok
1870: simple idl, writing via IDL - Python2           ok
1872: simple idl, writing via IDL - Python2 - register_columns ok
1871: simple idl, writing via IDL - Python3           ok
1874: simple idl, writing via IDL - Python2 - tcp     ok
1873: simple idl, writing via IDL - Python3 - register_columns ok
1878: simple idl, handling verification failure - C   ok
1876: simple idl, writing via IDL - Python2 - tcp6    ok
1875: simple idl, writing via IDL - Python3 - tcp     ok
1877: simple idl, writing via IDL - Python3 - tcp6    ok
1879: simple idl, handling verification failure - Python2 ok
1880: simple idl, handling verification failure - Python3 ok
1881: simple idl, handling verification failure - Python2 - register_columns ok
1882: simple idl, handling verification failure - Python3 - register_columns ok
1883: simple idl, handling verification failure - Python2 - tcp ok
1885: simple idl, handling verification failure - Python2 - tcp6 ok
1884: simple idl, handling verification failure - Python3 - tcp ok
1887: simple idl, increment operation - C             ok
1886: simple idl, handling verification failure - Python3 - tcp6 ok
1888: simple idl, increment operation - Python2       ok
1890: simple idl, increment operation - Python2 - register_columns ok
1889: simple idl, increment operation - Python3       ok
1891: simple idl, increment operation - Python3 - register_columns ok
1892: simple idl, increment operation - Python2 - tcp ok
1896: simple idl, aborting - C                        ok
1894: simple idl, increment operation - Python2 - tcp6 ok
1893: simple idl, increment operation - Python3 - tcp ok
1895: simple idl, increment operation - Python3 - tcp6 ok
1897: simple idl, aborting - Python2                  ok
1898: simple idl, aborting - Python3                  ok
1899: simple idl, aborting - Python2 - register_columns ok
1900: simple idl, aborting - Python3 - register_columns ok
1901: simple idl, aborting - Python2 - tcp            ok
1903: simple idl, aborting - Python2 - tcp6           ok
1902: simple idl, aborting - Python3 - tcp            ok
1905: simple idl, destroy without commit or abort - C ok
1904: simple idl, aborting - Python3 - tcp6           ok
1906: simple idl, destroy without commit or abort - Python2 ok
1908: simple idl, destroy without commit or abort - Python2 - register_columns ok
1907: simple idl, destroy without commit or abort - Python3 ok
1909: simple idl, destroy without commit or abort - Python3 - register_columns ok
1910: simple idl, destroy without commit or abort - Python2 - tcp ok
1912: simple idl, destroy without commit or abort - Python2 - tcp6 ok
1911: simple idl, destroy without commit or abort - Python3 - tcp ok
1914: simple idl, conditional, false condition - C    ok
1913: simple idl, destroy without commit or abort - Python3 - tcp6 ok
1915: simple idl, conditional, false condition - Python2 ok
1916: simple idl, conditional, false condition - Python3 ok
1917: simple idl, conditional, false condition - Python2 - register_columns ok
1918: simple idl, conditional, false condition - Python3 - register_columns ok
1919: simple idl, conditional, false condition - Python2 - tcp ok
1920: simple idl, conditional, false condition - Python3 - tcp ok
1921: simple idl, conditional, false condition - Python2 - tcp6 ok
1923: simple idl, conditional, true condition - C     ok
1922: simple idl, conditional, false condition - Python3 - tcp6 ok
1924: simple idl, conditional, true condition - Python2 ok
1925: simple idl, conditional, true condition - Python3 ok
1926: simple idl, conditional, true condition - Python2 - register_columns ok
1927: simple idl, conditional, true condition - Python3 - register_columns ok
1928: simple idl, conditional, true condition - Python2 - tcp ok
1929: simple idl, conditional, true condition - Python3 - tcp ok
1930: simple idl, conditional, true condition - Python2 - tcp6 ok
1932: simple idl, conditional, multiple clauses in condition - C ok
1931: simple idl, conditional, true condition - Python3 - tcp6 ok
1933: simple idl, conditional, multiple clauses in condition - Python2 ok
1935: simple idl, conditional, multiple clauses in condition - Python2 - register_columns ok
1934: simple idl, conditional, multiple clauses in condition - Python3 ok
1936: simple idl, conditional, multiple clauses in condition - Python3 - register_columns ok
1937: simple idl, conditional, multiple clauses in condition - Python2 - tcp ok
1939: simple idl, conditional, multiple clauses in condition - Python2 - tcp6 ok
1938: simple idl, conditional, multiple clauses in condition - Python3 - tcp ok
1941: simple idl, conditional, modify as insert due to condition - C ok
1940: simple idl, conditional, multiple clauses in condition - Python3 - tcp6 ok
1942: simple idl, conditional, modify as insert due to condition - Python2 ok
1943: simple idl, conditional, modify as insert due to condition - Python3 ok
1944: simple idl, conditional, modify as insert due to condition - Python2 - register_columns ok
1945: simple idl, conditional, modify as insert due to condition - Python3 - register_columns ok
1946: simple idl, conditional, modify as insert due to condition - Python2 - tcp ok
1948: simple idl, conditional, modify as insert due to condition - Python2 - tcp6 ok
1950: simple idl, conditional, modify as delete due to condition - C ok
1947: simple idl, conditional, modify as insert due to condition - Python3 - tcp ok
1949: simple idl, conditional, modify as insert due to condition - Python3 - tcp6 ok
1951: simple idl, conditional, modify as delete due to condition - Python2 ok
1952: simple idl, conditional, modify as delete due to condition - Python3 ok
1953: simple idl, conditional, modify as delete due to condition - Python2 - register_columns ok
1954: simple idl, conditional, modify as delete due to condition - Python3 - register_columns ok
1955: simple idl, conditional, modify as delete due to condition - Python2 - tcp ok
1957: simple idl, conditional, modify as delete due to condition - Python2 - tcp6 ok
1959: simple idl, conditional, multiple tables - C    ok
1956: simple idl, conditional, modify as delete due to condition - Python3 - tcp ok
1958: simple idl, conditional, modify as delete due to condition - Python3 - tcp6 ok
1960: simple idl, conditional, multiple tables - Python2 ok
1962: simple idl, conditional, multiple tables - Python2 - register_columns ok
1961: simple idl, conditional, multiple tables - Python3 ok
1963: simple idl, conditional, multiple tables - Python3 - register_columns ok
1964: simple idl, conditional, multiple tables - Python2 - tcp ok
1968: self-linking idl, consistent ops - C            ok
1965: simple idl, conditional, multiple tables - Python3 - tcp ok
1966: simple idl, conditional, multiple tables - Python2 - tcp6 ok
1967: simple idl, conditional, multiple tables - Python3 - tcp6 ok
1969: self-linking idl, consistent ops - Python2      ok
1971: self-linking idl, consistent ops - Python2 - register_columns ok
1970: self-linking idl, consistent ops - Python3      ok
1972: self-linking idl, consistent ops - Python3 - register_columns ok
1975: self-linking idl, consistent ops - Python2 - tcp6 ok
1973: self-linking idl, consistent ops - Python2 - tcp ok
1974: self-linking idl, consistent ops - Python3 - tcp ok
1976: self-linking idl, consistent ops - Python3 - tcp6 ok
1977: self-linking idl, inconsistent ops - C          ok
1979: self-linking idl, inconsistent ops - Python3    ok
1978: self-linking idl, inconsistent ops - Python2    ok
1980: self-linking idl, inconsistent ops - Python2 - register_columns ok
1982: self-linking idl, inconsistent ops - Python2 - tcp ok
1983: self-linking idl, inconsistent ops - Python3 - tcp ok
1981: self-linking idl, inconsistent ops - Python3 - register_columns ok
1984: self-linking idl, inconsistent ops - Python2 - tcp6 ok
1986: self-linking idl, sets - C                      ok
1985: self-linking idl, inconsistent ops - Python3 - tcp6 ok
1987: self-linking idl, sets - Python2                ok
1988: self-linking idl, sets - Python3                ok
1989: self-linking idl, sets - Python2 - register_columns ok
1991: self-linking idl, sets - Python2 - tcp          ok
1990: self-linking idl, sets - Python3 - register_columns ok
1995: external-linking idl, consistent ops - C        ok
1993: self-linking idl, sets - Python2 - tcp6         ok
1992: self-linking idl, sets - Python3 - tcp          ok
1994: self-linking idl, sets - Python3 - tcp6         ok
1996: external-linking idl, consistent ops - Python2  ok
1998: external-linking idl, consistent ops - Python2 - register_columns ok
1997: external-linking idl, consistent ops - Python3  ok
1999: external-linking idl, consistent ops - Python3 - register_columns ok
2000: external-linking idl, consistent ops - Python2 - tcp ok
2002: external-linking idl, consistent ops - Python2 - tcp6 ok
2001: external-linking idl, consistent ops - Python3 - tcp ok
2003: external-linking idl, consistent ops - Python3 - tcp6 ok
2010: idl handling of missing tables and columns - C  ok
2004: external-linking idl, insert ops - Python2      ok
2006: getattr idl, insert ops - Python2               ok
2005: external-linking idl, insert ops - Python3      ok
2007: getattr idl, insert ops - Python3               ok
2008: row-from-json idl, whats this - Python2         ok
2009: row-from-json idl, whats this - Python3         ok
2013: track, simple idl, initially populated - C      ok
2011: simple idl, initially populated - Python fetch  ok
2015: map, simple2 idl-partial-update-map-column, initially populated - C ok
2014: track, simple idl, initially empty, various ops - C ok
2018: set, simple3 idl-partial-update-set-column, initially populated - C ok
2022: ovsdb lock -- lock                              ok
2016: partial-map idl - Python2                       ok
2012: simple idl disable monitor-cond - Python        ok
2023: ovsdb lock -- unlock                            ok
2017: partial-map idl - Python3                       ok
2019: partial-set idl - Python2                       ok
2020: partial-set idl - Python3                       ok
2024: ovsdb lock -- steal                             ok
2027: add-br a, add-br a                              ok
2021: simple idl verify notify - Python               ok
2025: ovs-vsctl connection retry                      ok
2032: add-br a, add-port a a1, add-port a a1          ok
2026: add-br a                                        ok
2029: add-br a, add-br b, del-br a                    ok
2030: add-br a, del-br a, add-br a                    ok
2033: add-br a b, add-port a a1, add-port b b1, del-br a ok
2028: add-br a, add-br b                              ok
2038: controllers                                     ok
2031: add-br a, add-port a a1, add-port a a2          ok
2036: add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 ok
2034: add-br a, add-bond a bond0 a1 a2 a3             ok
2040: list bridges -- real and fake (VLAN 9)          ok
2042: simple fake bridge + del-br real bridge (VLAN 9) ok
2035: add-br a b, add-port a a1, add-port b b1, del-port a a1 ok
2041: simple fake bridge + del-br fake bridge (VLAN 9) ok
2045: list bridges -- real and fake (VLAN 0)          ok
2037: external IDs                                    ok
2047: simple fake bridge + del-br real bridge (VLAN 0) ok
2039: simple fake bridge (VLAN 9)                     ok
2046: simple fake bridge + del-br fake bridge (VLAN 0) ok
2043: simple fake bridge + external IDs (VLAN 9)      ok
2052: managers                                        ok
2044: simple fake bridge (VLAN 0)                     ok
2051: fake bridge on bond + del-br real bridge        ok
2050: fake bridge on bond + del-br fake bridge        ok
2056: database commands -- wait-until immediately true ok
2049: fake bridge on bond                             ok
2057: database commands -- wait-until must wait       ok
2048: simple fake bridge + external IDs (VLAN 0)      ok
2053: database commands -- positive checks            ok
2058: --id option on create, get commands             ok
2059: unreferenced record warnings                    ok
2060: created row UUID is wrong in same execution     ok
2063: add-port -- reserved names 2                    FAILED (ovs-vsctl.at:1259)
2067: ovs-monitor-ipsec                               skipped (ovs-monitor-ipsec.at:12)
2064: naming in db commands                           ok
2062: add-port -- reserved names 1                    FAILED (ovs-vsctl.at:1231)
2054: database commands -- negative checks            ok
2065: bootstrap ca cert                               ok
2066: peer ca cert                                    ok
2070: VLAN, non-bond                                  ok
2074: STP example from IEEE 802.1D-1998               ok
2069: non-VLAN, non-bond                              ok
2073: Re-create port with different types             FAILED (interface-reconfigure.at:1042)
2061: --all option on destroy command                 ok
2071: Bond, non-VLAN                                  ok
2075: STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 ok
2076: STP example from IEEE 802.1D-2004 figure 17.6   ok
2077: STP example from IEEE 802.1D-2004 figure 17.7   ok
2078: STP.io.1.1: Link Failure                        ok
2079: STP.io.1.2: Repeated Network                    ok
2080: STP.io.1.4: Network Initialization              ok
2082: STP.op.1.1 and STP.op.1.2                       ok
2081: STP.io.1.5: Topology Change                     ok
2072: VLAN on bond                                    ok
2083: STP.op.1.4: All Ports Initialized to Designated Ports ok
2087: STP - dummy interface                           skipped (stp.at:384)
2084: STP.op.3.1: Root Bridge Selection: Root ID Values ok
2085: STP.op.3.3: Root Bridge Selection: Bridge ID Values ok
2086: STP.op.3.3: Root Bridge Selection: Bridge ID Values ok
2088: RSTP Single bridge                              ok
2089: RSTP Link failure                               ok
2090: RSTP Double link Failure                        ok
2068: ovs-xapi-sync                                   ok
2091: RSTP example from IEEE 802.1D-2004 figures 17.4 and 17.5 ok
2094: RSTP - dummy interface                          skipped (rstp.at:160)
2092: RSTP example from IEEE 802.1D-2004 figure 17.6  ok
2093: RSTP example from IEEE 802.1D-2004 figure 17.7  ok
2095: vlog - Python2                                  ok
2096: vlog - Python3                                  FAILED (vlog.at:106)
2100: vlog - vlog/reopen without log file - C         ok
2103: vlog - vlog/reopen can't reopen log file - C    skipped (vlog.at:212)
2104: vlog - vlog/reopen can't reopen log file - Python2 skipped (vlog.at:275)
2105: vlog - vlog/reopen can't reopen log file - Python3 skipped (vlog.at:276)
2097: vlog - vlog/reopen - C                          ok
2101: vlog - vlog/reopen without log file - Python2   ok
2098: vlog - vlog/reopen - Python2                    ok
2102: vlog - vlog/reopen without log file - Python3   ok
2099: vlog - vlog/reopen - Python3                    ok
2106: vlog - vlog/close - C                           ok
2109: vlog - vlog/set and vlog/list - C               ok
2107: vlog - vlog/close - Python2                     ok
2112: vlog - RFC5424 facility                         ok
2108: vlog - vlog/close - Python3                     ok
2055: database commands -- conditions                 ok
2116: add-ps a, add-ps a                              ok
2110: vlog - vlog/set and vlog/list - Python2         ok
2111: vlog - vlog/set and vlog/list - Python3         ok
2115: add-ps a                                        ok
2113: vlog - RFC5424 facility - Python2               FAILED (vlog.at:514)
2117: add-ps a, add-ps b                              ok
2121: add-ps a, add-port a a1, add-port a a1          ok
2118: add-ps a, add-ps b, del-ps a                    ok
2119: add-ps a, del-ps a, add-ps a                    ok
2114: vlog - RFC5424 facility - Python3               FAILED (vlog.at:515)
2122: add-ps a b, add-port a a1, add-port b b1, del-ps a ok
2120: add-ps a, add-port a a1, add-port a a2          ok
2126: add-ls a, add-ls a                              ok
2125: add-ls a                                        ok
2123: add-ps a b, add-port a a1, add-port b b1, del-port a a1 ok
2127: add-ls a, add-ls b                              ok
2130: add-ls a, get-replication-mode a                ok
2128: add-ls a, add-ls b, del-ls a                    ok
2129: add-ls a, del-ls a, add-ls a                    ok
2131: add-ls a, set-replication-mode a source_node    ok
2132: add-ls a, set-replication-mode a service_node   ok
2124: add-ps a b, add-port a p1, add-port b p1, del-port a p1 ok
2137: add-ucast-local ls1, overwrite                  ok
2136: add-ucast-local ls1                             ok
2133: bind-ls ps1 pp1 300 ls1                         ok
2138: add-ucast-local ls1, del-ucast-local ls1        ok
2139: add-ucast-remote ls1                            ok
2140: add-ucast-remote ls1, overwrite                 ok
2134: bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 ok
2135: bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2    ok
2141: add-ucast-remote ls1, del-ucast-remote ls1      ok
2142: add-ucast-local ls1, add-ucast-remote ls1       ok
2143: add-mcast-local ls1                             ok
2144: add-mcast-local ls1, del-mcast-local ls1        ok
2145: add-mcast-remote ls1                            ok
2150: managers                                        ok
2152: auto-attach - packets                           ok
2146: add-mcast-remote ls1, del-mcast-remote ls1      ok
2147: add-mcast-local ls1, add-mcast-remote ls1       ok
2151: show command                                    ok
2148: add local and remote macs, clear-local-macs     ok
2149: add local and remote macs, clear-remote-macs    ok

## ------------- ##
## Test results. ##
## ------------- ##

ERROR: 2119 tests were run,
36 failed (1 expected failure).
33 tests were skipped.
## -------------------------- ##
## testsuite.log was created. ##
## -------------------------- ##

Please send `tests/testsuite.log' and all information you think might help:

   To: <bugs@openvswitch.org>
   Subject: [openvswitch 2.6.1] testsuite: 42 111 113 930 931 932 933 934 936 937 949 955 961 1026 1040 1049 1050 1061 1062 1078 1079 1080 1081 1082 1085 1086 1111 1113 1117 2062 2063 2073 2096 2113 2114 failed

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below `tests/testsuite.dir'.

make[4]: *** [Makefile:6141: check-local] Error 1
make[4]: Leaving directory '$(@D)'
make[3]: *** [Makefile:5312: check-am] Error 2
make[3]: Leaving directory '$(@D)'
make[2]: *** [Makefile:5020: check-recursive] Error 1
make[2]: Leaving directory '$(@D)'
make[1]: *** [Makefile:5315: check] Error 2
make[1]: Leaving directory '$(@D)'
