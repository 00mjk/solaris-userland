LDAP API is not found if located on non-default path

Paths to LDAP C-SDK ("ldap" and "lber" libs) is currently "hard-wired"
to -L/usr/lib -I/usr/include. Here is the fix.

details in: https://bugzilla.samba.org/show_bug.cgi?id=12124

diff --git a/lib/ldb/wscript b/lib/ldb/wscript
index 13f1d93..ce1eae0 100755
--- a/lib/ldb/wscript
+++ b/lib/ldb/wscript
@@ -68,7 +68,7 @@ def configure(conf):
         conf.CHECK_XSLTPROC_MANPAGES()
 
         # we need this for the ldap backend
-        if conf.CHECK_FUNCS_IN('ber_flush ldap_open ldap_initialize', 'lber ldap', headers='lber.h ldap.h'):
+        if conf.CHECK_FUNCS('ber_flush ldap_open ldap_initialize', lib='ldap', headers='lber.h ldap.h'):
             conf.env.ENABLE_LDAP_BACKEND = True
 
         # we don't want any libraries or modules to rely on runtime
diff --git a/source3/wscript b/source3/wscript
index 497b673..88169be 100644
--- a/source3/wscript
+++ b/source3/wscript
@@ -666,24 +666,32 @@ msg.msg_accrightslen = sizeof(fd);
 
     # Check for LDAP
     if Options.options.with_ldap:
-        conf.CHECK_HEADERS('ldap.h lber.h ldap_pvt.h')
-        conf.CHECK_TYPE('ber_tag_t', 'unsigned int', headers='ldap.h lber.h')
-        conf.CHECK_FUNCS_IN('ber_scanf ber_sockbuf_add_io', 'lber')
-        conf.CHECK_VARIABLE('LDAP_OPT_SOCKBUF', headers='ldap.h')
+        if conf.CHECK_CFG(package='ldap', args="--cflags --libs", msg='Check for ldap', uselib_store="LDAP") :
+            conf.SET_TARGET_TYPE('ldap', 'SYSLIB')
+        else :
+            conf.CHECK_LIB('ldap', shlib=True)
+        if conf.CHECK_CFG(package='lber', args="--cflags --libs", msg='Check for lber', uselib_store="LBER") :
+            conf.SET_TARGET_TYPE('lber', 'SYSLIB')
+        else :
+            conf.CHECK_LIB('lber', shlib=True)
+        conf.CHECK_HEADERS('ldap.h lber.h ldap_pvt.h', lib='ldap')
+        conf.CHECK_TYPE('ber_tag_t', 'unsigned int', headers='ldap.h lber.h', lib='ldap lber')
+        conf.CHECK_FUNCS('ber_scanf ber_sockbuf_add_io', lib='ldap lber')
+        conf.CHECK_VARIABLE('LDAP_OPT_SOCKBUF', headers='ldap.h', lib='ldap')
 
         # if we LBER_OPT_LOG_PRINT_FN we can intercept ldap logging and print it out
         # for the samba logs
         conf.CHECK_VARIABLE('LBER_OPT_LOG_PRINT_FN',
-                            define='HAVE_LBER_LOG_PRINT_FN', headers='lber.h')
+                            define='HAVE_LBER_LOG_PRINT_FN', headers='lber.h', lib='ldap lber')
 
-        conf.CHECK_FUNCS_IN('ldap_init ldap_init_fd ldap_initialize ldap_set_rebind_proc', 'ldap')
-        conf.CHECK_FUNCS_IN('ldap_add_result_entry', 'ldap')
+        conf.CHECK_FUNCS('ldap_init ldap_init_fd ldap_initialize ldap_set_rebind_proc', lib='ldap')
+        conf.CHECK_FUNCS('ldap_add_result_entry', lib='ldap')
 
         # Check if ldap_set_rebind_proc() takes three arguments
         if conf.CHECK_CODE('ldap_set_rebind_proc(0, 0, 0)',
                            'LDAP_SET_REBIND_PROC_ARGS',
                            msg="Checking whether ldap_set_rebind_proc takes 3 arguments",
-                           headers='ldap.h lber.h', link=False):
+                           headers='ldap.h lber.h', link=False, lib='ldap'):
             conf.DEFINE('LDAP_SET_REBIND_PROC_ARGS', '3')
         else:
             conf.DEFINE('LDAP_SET_REBIND_PROC_ARGS', '2')
