#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
#

set name=pkg.fmri \
    value=pkg:/library/python/oslo.reports-$(PYV)@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)
set name=pkg.summary value="Oslo reports library"
set name=pkg.description \
    value="This library enables OpenStack projects to dump Guru Meditation Reports with useful debugging information to files or stderr. Additionally, it can be used for creating and serializing similar reports, to text, XML, and JSON."
set name=com.oracle.info.description value="the Python oslo.reports module"
set name=com.oracle.info.tpno value=$(TPNO)
set name=info.classification \
    value=org.opensolaris.category.2008:Development/Python
set name=info.source-url value=$(COMPONENT_ARCHIVE_URL)
set name=info.upstream value="OpenStack <openstack-dev@lists.openstack.org>"
set name=info.upstream-url value=$(COMPONENT_PROJECT_URL)
set name=org.opensolaris.arc-caseid value=PSARC/2016/376
set name=org.opensolaris.consolidation value=$(CONSOLIDATION)
#
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/PKG-INFO
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/SOURCES.txt
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/dependency_links.txt
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/entry_points.txt
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/not-zip-safe
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/pbr.json
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/requires.txt
file path=usr/lib/python$(PYVER)/vendor-packages/oslo.reports-$(COMPONENT_VERSION)-py$(PYVER).egg-info/top_level.txt
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/_i18n.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/_utils.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/generators/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/generators/conf.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/generators/process.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/generators/threading.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/generators/version.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/guru_meditation_report.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/base.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/conf.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/process.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/threading.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/version.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/models/with_default_views.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/opts.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/report.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/jinja_view.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/json/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/json/generic.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/text/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/text/generic.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/text/header.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/text/process.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/text/threading.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/xml/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/oslo_reports/views/xml/generic.py
#
license oslo.reports.license license="Apache v2.0"

# force a dependency on the Python runtime
depend type=require fmri=__TBD pkg.debug.depend.file=python$(PYVER) \
    pkg.debug.depend.path=usr/bin

# force a dependency on greenlet; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/greenlet-$(PYV)

# force a dependency on jinja2; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/jinja2-$(PYV)

# force a dependency on oslo.config; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/oslo.config-$(PYV)

# force a dependency on oslo.i18n; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/oslo.i18n-$(PYV)

# force a dependency on the oslo.reports package
depend type=require \
    fmri=library/python/oslo.reports@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)

# force a dependency on oslo.serialization; pkgdepend work is needed to flush
# this out.
depend type=require fmri=library/python/oslo.serialization-$(PYV)

# force a dependency on oslo.utils; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/oslo.utils-$(PYV)

# force a dependency on psutil; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/psutil-$(PYV)

# force a dependency on six; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/six-$(PYV)
