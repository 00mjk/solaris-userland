#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2014, 2015, Oracle and/or its affiliates. All rights reserved.
#

set name=pkg.fmri \
    value=pkg:/library/python/pycadf-$(PYV)@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)
set name=pkg.summary value="Python implementation of CADF data model"
set name=pkg.description \
    value="pyCADF is the Python implementation of the Cloud Audit Data Federation (CADF) Working Group specification. The CADF specification for audit event data, interface models, and a compatible interaction model describes interactions between IT resources for cloud deployment models."
set name=com.oracle.info.description value="the Python pyCADF module"
set name=com.oracle.info.tpno value=$(TPNO)
set name=info.classification \
    value=org.opensolaris.category.2008:Development/Python
set name=info.source-url value=$(COMPONENT_ARCHIVE_URL)
set name=info.upstream value="OpenStack <openstack-dev@lists.openstack.org>"
set name=info.upstream-url value=$(COMPONENT_PROJECT_URL)
set name=org.opensolaris.arc-caseid value=PSARC/2014/329
set name=org.opensolaris.consolidation value=$(CONSOLIDATION)
#
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf-$(COMPONENT_VERSION)-py$(PYVER).egg-info/PKG-INFO
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf-$(COMPONENT_VERSION)-py$(PYVER).egg-info/SOURCES.txt
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf-$(COMPONENT_VERSION)-py$(PYVER).egg-info/dependency_links.txt
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf-$(COMPONENT_VERSION)-py$(PYVER).egg-info/not-zip-safe
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf-$(COMPONENT_VERSION)-py$(PYVER).egg-info/requires.txt
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf-$(COMPONENT_VERSION)-py$(PYVER).egg-info/top_level.txt
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/attachment.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/audit/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/audit/api.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/cadftaxonomy.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/cadftype.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/credential.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/endpoint.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/event.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/eventfactory.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/geolocation.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/host.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/identifier.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/measurement.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/metric.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/middleware/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/middleware/audit.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/middleware/base.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/middleware/notifier.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/context.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/excutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fileutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fixture/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fixture/config.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fixture/lockutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fixture/logging.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fixture/mockpatch.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/fixture/moxstubout.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/gettextutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/importutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/jsonutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/local.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/lockutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/log.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/openstack/common/timeutils.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/path.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/reason.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/reporterstep.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/resource.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/tag.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/timestamp.py
file path=usr/lib/python$(PYVER)/vendor-packages/pycadf/utils.py
#
license LICENSE license="Apache v2.0"

# force a group dependency on the optional anyjson; pkgdepend work is needed
# to flush this out.
depend type=group fmri=library/python/anyjson-$(PYV)

# force a group dependency on the optional simplejson; pkgdepend work is needed
# to flush this out.
depend type=group fmri=library/python/simplejson-$(PYV)

# force a dependency on the Python runtime
depend type=require fmri=__TBD pkg.debug.depend.file=python$(PYVER) \
    pkg.debug.depend.path=usr/bin

# force a dependency on babel; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/babel-$(PYV)

# force a dependency on iso8601; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/iso8601-$(PYV)

# force a dependency on oslo.config; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/oslo.config-$(PYV)

# force a dependency on oslo.messaging; pkgdepend work is needed to flush this
# out.
depend type=require fmri=library/python/oslo.messaging-$(PYV)

# force a dependency on posix_ipc; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/posix_ipc-$(PYV)

# force a dependency on the pycadf package
depend type=require \
    fmri=library/python/pycadf@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)

# force a dependency on pytz; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/pytz-$(PYV)

# force a dependency on six; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/six-$(PYV)

# force a dependency on webob; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/webob-$(PYV)
