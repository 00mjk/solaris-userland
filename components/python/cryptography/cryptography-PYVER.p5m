#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
#

set name=pkg.fmri \
    value=pkg:/library/python/cryptography-$(PYV)@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)
set name=pkg.summary value="Python crytographic recipes and primitives"
set name=pkg.description \
    value="The cryptography package provides cryptographic recipes and primitives to Python developers. It includes both high level recipes, and low level interfaces to common cryptographic algorithms such as symmetric ciphers, message digests and key derivation functions."
set name=com.oracle.info.description value="the Python cryptography module"
set name=com.oracle.info.tpno value=$(TPNO)
set name=info.classification \
    value=org.opensolaris.category.2008:Development/Python \
    value=org.opensolaris.category.2008:System/Security
set name=info.source-url value=$(COMPONENT_ARCHIVE_URL)
set name=info.upstream \
    value="The cryptography developers <cryptography-dev@python.org>"
set name=info.upstream-url value=$(COMPONENT_PROJECT_URL)
set name=org.opensolaris.arc-caseid value=PSARC/2015/071
set name=org.opensolaris.consolidation value=$(CONSOLIDATION)
#
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/PKG-INFO
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/SOURCES.txt
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/dependency_links.txt
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/entry_points.txt
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/not-zip-safe
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/requires.txt
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography-$(COMPONENT_VERSION)-py$(PYVER).egg-info/top_level.txt
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/__about__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/exceptions.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/fernet.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/commoncrypto/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/commoncrypto/backend.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/commoncrypto/ciphers.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/commoncrypto/hashes.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/commoncrypto/hmac.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/interfaces.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/multibackend.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/backend.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/ciphers.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/cmac.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/dsa.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/ec.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/hashes.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/hmac.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/rsa.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/utils.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/backends/openssl/x509.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/64/_constant_time.so
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/64/_openssl.so
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/64/_padding.so
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/_constant_time.so
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/_openssl.so
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/_padding.so
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/commoncrypto/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/commoncrypto/binding.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/openssl/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/openssl/_conditional.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/bindings/openssl/binding.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/dh.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/dsa.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/ec.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/padding.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/rsa.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/asymmetric/utils.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/ciphers/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/ciphers/algorithms.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/ciphers/base.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/ciphers/modes.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/cmac.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/constant_time.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/hashes.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/hmac.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/interfaces/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/kdf/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/kdf/concatkdf.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/kdf/hkdf.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/kdf/pbkdf2.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/kdf/x963kdf.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/keywrap.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/padding.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/serialization.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/twofactor/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/twofactor/hotp.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/twofactor/totp.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/hazmat/primitives/twofactor/utils.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/utils.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/x509/__init__.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/x509/base.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/x509/extensions.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/x509/general_name.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/x509/name.py
file path=usr/lib/python$(PYVER)/vendor-packages/cryptography/x509/oid.py
#
license LICENSE.BSD license=BSD-like

# Dependencies on cffi must be incorporated.
depend type=incorporate fmri=library/python/cffi-$(PYV)@1.4.2

# force a dependency on the Python runtime
depend type=require fmri=__TBD pkg.debug.depend.file=python$(PYVER) \
    pkg.debug.depend.path=usr/bin

# force a dependency on cffi; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/cffi-$(PYV)

# force a dependency on the cryptography package
depend type=require \
    fmri=library/python/cryptography@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)

# force a dependency on enum; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/enum-$(PYV)

# force a dependency on idna; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/idna-$(PYV)

# force a dependency on ipaddress; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/ipaddress-$(PYV)

# force a dependency on pyasn1; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/pyasn1-$(PYV)

# force a dependency on setuptools; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/setuptools-$(PYV)

# force a dependency on six; pkgdepend work is needed to flush this out.
depend type=require fmri=library/python/six-$(PYV)
