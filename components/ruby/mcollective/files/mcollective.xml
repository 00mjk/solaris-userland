<?xml version="1.0" ?>
<!DOCTYPE service_bundle SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
<!--
 Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License"); you may
 not use this file except in compliance with the License. You may obtain
 a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 License for the specific language governing permissions and limitations
 under the License.

 NOTE:  This service manifest is not editable; its contents will
 be overwritten by package or patch operations, including
 operating system upgrade.  Make customizations in a different
 file.
-->
<service_bundle type="manifest" name="mcollective">
    <service version="1" type="service"
        name="application/mcollective">
        <!--
            The following dependency keeps us from starting until the
            multi-user milestone is reached.
        -->
        <dependency restart_on="error" type="service"
            name="multi_user_dependency" grouping="require_all">
            <service_fmri value="svc:/milestone/multi-user"/>
        </dependency>

        <exec_method timeout_seconds="60" type="method" name="start"
            exec="/lib/svc/method/mcollective %m"/>
        <exec_method timeout_seconds="60" type="method" name="stop"
            exec=":kill"/>
        <exec_method timeout_seconds="60" type="method" name="refresh"
            exec=":true"/>

        <property_group name='general' type='framework'>
            <propval name='action_authorization' type='astring'
                value='solaris.smf.manage.mcollective' />
            <propval name='value_authorization' type='astring'
                value='solaris.smf.value.mcollective' />
        </property_group>

        <instance enabled="false" name="server">
            <!-- Server instance of service -->
            <exec_method timeout_seconds="60" type="method" name="start"
                exec="/lib/svc/method/mcollective %m"/>
            <property_group name='config' type='application'>
                <propval name='server_config_path' type='astring'
                    value='/etc/mcollective/server.conf'/>
            </property_group>

        </instance>

        <instance enabled="false" name="client">
            <!-- Client instance of service -->
            <property_group name='general' type='framework'>
                <propval name='client_config_path' type='astring'
                    value='/etc/mcollective/client.conf'/>
            </property_group>

        </instance>

        <template>
            <common_name>
                <loctext xml:lang="C">
                        MCollective server
                </loctext>
            </common_name>
            <description>
                <!--
                    Replace loctext content with a brief description of the
                    service
                -->
                <loctext xml:lang="C">
                        mco-svr is MCOllective server daemon
                </loctext>
            </description>
        </template>
    </service>
</service_bundle>
