<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
 CDDL HEADER START

 The contents of this file are subject to the terms of the
 Common Development and Distribution License (the "License").
 You may not use this file except in compliance with the License.

 You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 or http://www.opensolaris.org/os/licensing.
 See the License for the specific language governing permissions
 and limitations under the License.

 When distributing Covered Code, include this CDDL HEADER in each
 file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 If applicable, add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your own identifying
 information: Portions Copyright [yyyy] [name of copyright owner]

 CDDL HEADER END

 Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.

 NOTE:  This service manifest is not editable; its contents will
 be overwritten by package or patch operations, including
 operating system upgrade.  Make customizations in a different
 file.
-->

<service_bundle type='manifest' name='puppet'>

<service
    name='application/puppet'
    type='service'
    version='1'>

    <dependency
        name='filesystem'
        grouping='require_all'
        restart_on='error'
        type='service'>
            <service_fmri value='svc:/system/filesystem/minimal' />
    </dependency>

    <dependency
        name='network'
        grouping='require_all'
        restart_on='error'
        type='service'>
            <service_fmri value='svc:/milestone/network' />
    </dependency>

    <dependency
        name='identity'
        grouping='require_all'
        restart_on='error'
        type='service'>
            <service_fmri value='svc:/system/identity:node' />
    </dependency>

    <exec_method type='method' name='start' exec=':true' timeout_seconds='60' />
    <exec_method type='method' name='stop' exec=':kill' timeout_seconds='60' />

    <property_group name='general' type='framework'>
        <!-- to start stop puppet -->
        <propval name='action_authorization' type='astring'
        value='solaris.smf.manage.puppet' />
        <!-- to change puppet properties -->
        <propval name='value_authorization' type='astring'
        value='solaris.smf.value.puppet' />
    </property_group>

    <property_group name='puppet_stencil' type='configfile'>
        <propval name='path' type='astring' value='/etc/puppet/puppet.conf'/>
        <propval name='stencil' type='astring' value='puppet.stencil'/>
        <propval name='mode' type='astring' value='0444'/>
    </property_group>

    <instance name='master' enabled='false'>
      <exec_method type='method' name='start'
        exec='/usr/sbin/puppet master --logdest %{config/logdest}'
        timeout_seconds='600' />

        <property_group name='config' type='application'>
            <propval name='logdest' type='astring'
                value='/var/log/puppet/puppet-master.log'/>
        </property_group>
    </instance>

    <instance name='agent' enabled='false'>
      <exec_method type='method' name='start'
        exec='/usr/sbin/puppet agent --logdest %{config/logdest}'
        timeout_seconds='600' />

        <property_group name='config' type='application'>
            <propval name='logdest' type='astring'
                value='/var/log/puppet/puppet-agent.log'/>
        </property_group>
    </instance>

    <stability value='Unstable' />

    <template>
        <common_name>
            <loctext xml:lang='C'>
            Puppet version 3.2.4
            </loctext>
        </common_name>
        <documentation>
            <manpage title='puppet-master' section='8' manpath='/usr/share/man' />
        </documentation>
        <pg_pattern name='config' type='application' required='false'>
            <prop_pattern name='server' type='host'
                required='false'>
                <common_name>
                    <loctext xml:lang='C'>
                    Server name or IP address of puppet master
                    </loctext>
                </common_name>
            </prop_pattern>
            <prop_pattern name='logdest' type='astring'
                required='false'>
                <common_name>
                    <loctext xml:lang='C'>
                    Logfile destination
                    </loctext>
                </common_name>
            </prop_pattern>
                <prop_pattern name='agent_catalog_run_lockfile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                             A lock file to indicate agent catalog run in progress
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='agent_disabled_lockfile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                             A lock file to indicate disabled puppet agent
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='allow_duplicate_certs' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to allowing duplication of existing certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='allow_variables_with_dashes' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Permit hyphens in variable name. Always set it to False
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='archive_file_server' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Allow archiving files on file bucket server
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='archive_files' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Permit to archive files whose contents are audited
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='async_storeconfigs' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Permit queueing system to provide asynchronous database integration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='autoflush' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether log files should always flush to disk
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='autosign' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to enable autosign
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='bindaddress' type='net_address'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The address a listening server should bind to
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='bucketdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where FileBucket files are stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ca' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether the master should function as a certificate authority
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ca_name' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The name to use the Certificate Authority certificate
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ca_port' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The port to use for the certificate authority
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ca_server' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Server to use for certificate authority requests
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ca_ttl' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The default TTL for new cetificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='cacert' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The CA certificate
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='cacrl' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The certificate revocation list for the CA
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='cadir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The root directory for the certificate authority
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='cakey' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The CA private key
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='capass' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The CA stores the password for the private key
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='caprivatedir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The CA stores private certificate information
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='capub' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The CA public key
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='catalog_cache_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Storing cached catalogs and valid values are json and yaml
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='catalog_format' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            What format to use to dump the catalog
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='catalog_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Location to access node catalogs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='cert_inventory' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            A complete listing of all certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='certdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The certificate directory
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='certificate_expire_warning' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The window of time leading up to a certificate's expiration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='certificate_revocation' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                             Whether Certificate revocation should be supported
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='certname' type='hostname'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The FQDN use to handle certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='classfile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The file in which agent stores a list of classes associated with the retrieved configuration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='client_datadir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory in which serialized data is stored on the client
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='clientbucketdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where FileBucket files are stores locally
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='clientyamldir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory in which client-side YAML data is stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='code' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Code to parse directly and only used by puppet
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='color' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Set colors when logging to the console
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='confdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The main Puppet configuration directory
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='config' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The configuration file for the current puppet application
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='config_file_name' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The name of the puppet config file
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='config_version' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Process to determine configuration version
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='configprint' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Print the value of a specific configuration setting
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='configtimeout' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Duration for which client should wait for the configuration to retrived
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='couchdb_url' type='uri'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The url where the puppet couchdb database will be created
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='csrdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the CA stores certificate requests
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='deamonize' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Send the process into the background
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='data_binding_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where to retrive information about data
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbadapter' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The type of database to use
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbconnections' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The number of database connections for networked databases
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dblocation' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The database cache for client configurations
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbmigrate' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to automatically migrate the database
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbname' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The name of the database to use
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbpassword' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The database password for caching
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbport' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The database port for caching
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbserver' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The database server for caching
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbsocket' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The database socket location
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dbuser' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The database user for caching
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='default_file_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The default source for files if no server is given in a uri
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='deviceconfig' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Path to the device config file for puppet device
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='devicedir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The root directory of devices
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='diff' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The command diff to see difference between files
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='diff_args' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Arguments to pass to the diff command
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dns_alt_names' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The list of alternative DNS names to use for the local host
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='document_all' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Document all resources
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='dynamicfacts' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Facts that are dynamic
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='environment' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The environment puppet is running in
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='evaltrace' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                           Whether each resource should log when it is being evaluated
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='external_nodes' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            An external command that can produce node information
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='factpath' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where Puppet should look for facts
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='facts_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The node facts terminus
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='fileserverconfig' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the fileserver configuration is stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='filetimeout' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The minimum time to wait between checking for updates in configuration files
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='freeze_main' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Freezes the main class, disallowing any code to be added to it
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='genconfig' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to just print a configuration to stdout and exit
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='genmanifest' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to just print a manifest to stdout and exit
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='graph' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to create dot graph files for different configuration graphs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='graphdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Location to store dot-outputted graphs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='group' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The group puppet master should run as
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='hiera_config' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The hiera configuration file
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='hostcert' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where individual hosts store and look for their certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='hostcrl' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the host's certificate revocation list can be found
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='hostcsr' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where individual hosts store and look for their certificate requests
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='hostprivkey' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where individual hosts store and look for their private key
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='hostpubkey' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where individual hosts store and look for their public key
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='http_compression' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Allow http compression in REST communication with the master
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='http_proxy_host' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The HTTP proxy host to use for outgoing connections
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='http_proxy_port' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The HTTP proxy port to use for outgoing connections
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='httplog' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the puppet agent web server logs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ignorecache' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Ignore cache and always recomplie the configuration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ignoreimport' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Allows the parser to continue without requiring all files referenced with import statements to exist
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ignoreschedules' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether puppet agent should ignore schedules
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='inventory_port' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The server which send facts
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='inventory_server' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The server which send facts
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='inventory_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Should usually be the same as the facts terminus
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='keylength' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The bit length of keys
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='lastrunfile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Location where puppet agent stores the last run report summary
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='lastrunreport' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Location where puppet agent stores the last run report
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapattrs' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The LDAP attributes to include when querying LDAP for nodes
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapbase' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The search base for LDAP searches
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapclassattrs' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The LDAP attributes to use to define Puppet classes
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapparentattr' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The attribute to use to define the parent node
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldappassword' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The password to use to connect to LDAP
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapport' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The LDAP port
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapserver' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The LDAP server
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapssl' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Set SSL to be used when searching for nodes
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapstackedattrs' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Stacked LDAP attributes in a tree
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapstring' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The search string used to find an LDAP node
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldaptls' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether TLS should be used when searching for nodes
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ldapuser' type='hostname'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The user to use to connect to LDAP
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='libdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            An extra search for puppet
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='listen' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether puppet agent should listen for connections
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='localcacert' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where each client stores the CA certificate
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='localconfig' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where each client stores the CA certificate
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='logdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory in which to store log files
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='manage_internal_files_permissions' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether puppet should manager the owner, group and mode of files it uses internally
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='manifest' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The entry-point manifest for puppet master
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='manifestdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where puppet master look for its manifests
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='masterhttplog' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where puppet master web server logs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='masterlog' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where puppet master logs
                        </loctext> </description>
                </prop_pattern>
               <prop_pattern name='masterport' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Which port puppet master listens on
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='maximum_uid' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The maximum allowed UID
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='mkusers' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to create the necessary user and group that puppet agent will run as
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='module_repository' type='uri'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The module repository
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='module_working_dir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory into which module tool data is stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='modulepath' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The search path for modules, as a list of directories
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='name' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The name of the application, if we are running as one
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='node_cache_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            How to store cached nodes
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='node_name' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Puppet master determines the client's identity
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='node_name_fact' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The fact name used to determine the node name
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='node_name_value' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The explicit value used for the node name
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='node_terminus' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where to find information about nodes
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='noop' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether puppet agent should be run in noop mode
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='onetime' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Run the configuration once
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='passfile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where puppet agent stores the password for its private key
                        </loctext> </description>
                </prop_pattern>
        <prop_pattern name='path' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The shell search path
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='pidfile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The file containing the PID of a running process
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='plugindest' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where puppet should store plugins that it pulls down from the central server
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='pluginsignore' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            What files to ignore when pulling down plugins
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='pluginsource' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Location to retrieve plugins
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='pluginsync' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether plugins should be synced with the central server
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='postrun_command' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            A command to run after every agent run
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='preferred_serialization_format' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The preferred means of serializing ruby instances
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='prerun_command' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            A command to run before every agrent run
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='privatedir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the client stores private certificate information
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='privatekeydir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The private key directory
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='publickeydir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The public key directory
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='puppetdlog' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Which port puppet agent listens on
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='queue_source' type='uri'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Which type of queue to use for asynchronous processing
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='queue_type' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Which type of queue to use for asynchronous procesing
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='rails_loglevel' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The log level for Rails connections
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='railslog' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where Rails-specific logs are sent
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='report' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to send reports after every transaction
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='report_port' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The port to communicate with the report_server
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='report_server' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The server to send transcation reports to
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='reportdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory in which to store reports received from the client
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='reportfrom' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The 'from' email address for the reports
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='reports' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The list of reports to generate
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='reporturl' type='uri'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The URL used by the http reports processor to send reports
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='req_bits' type='integer'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The bit length of the certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='requestdir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where host certificate requests are stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='resourcefile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The file in which puppet agent stores a list of the resources associated with the retrieved configuration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='rest_authconfig' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The configuration file that defines the rights to the different rest indirections
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='route_file' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The YAML file containing indirector route configuration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='rrddir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory where RRD database files are stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='rrdinterval' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Duration of how often RRD should expect data
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='rundir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where PuppetPID files are kept
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='runinterval' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Duration of how often puppet agent applies the client configuraiton
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='sendmail' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where to find the sendmail binary with which to send email
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='serial' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the serial number for certificates is stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='server_datadir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory in which serialized data is stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='show_diff' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to log and report a contextual diff when files are being replaced
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='signeddir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where the CA stores signed certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='smtpserver' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The server through which to send email reports
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='splay' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to sleep for a pseudo-random amount of time before a run
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='splaylimit' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The maximum time to delay before runs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='srv_domain' type='host'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The domain which will be queried to find the SRV records of servers to use
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ssl_client_ca_auth' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Certificate authorities who issue server certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ssl_client_header' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The header containing an authenticated client's SSL DN
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ssl_client_verify_header' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The header containing the status message of the client verification
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ssl_server_ca_auth' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Certificate authorities who issue client certificates
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='ssldir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where SSL ceritifcates are kept
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='statedir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory where Puppet state is stored
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='statefile' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where puppet agent and master store state associates with the running configuration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='storeconfigs' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to store each client's configuration
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='storeconfigs_backend' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Configure the backend terminus used for StoreConfigs
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='strict_hostname_checking' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to only search for the complete hostname
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='summarize' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to print a transaction summary
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='syslogfacility' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            What syslog facility to use when logging to syslog
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='tagmap' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The mapping between reporting tags and email addresses
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='tags' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Tags to use to find resources
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='templatedir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where Puppet looks for template files
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='thin_storeconfigs' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether Puppet should store only facts and exported resources in the storeconfigs database
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='trace' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to print stacks traces on some errors
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='use_cached_catalog' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to only use the catalog rather than compiling a new catalog on every run
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='use_srv_records' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether the server will search for SRV records in DNS for the curent domain
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='usecacheonfailure' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to use the cached configuration when the remote configuration will not compile
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='user' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The user puppet master should run as
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='vardir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Where Puppet stores dynamic and growing data
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='waitforcert' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The time interval 'puppet agent' should connect to the server and ask it to sign a certificate request
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='yamldir' type='astring'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            The directory in which YAML data is stored, usually in a subdirectory
                        </loctext> </description>
                </prop_pattern>
                <prop_pattern name='zlib' type='boolean'
                    required='false'>
                        <description> <loctext xml:lang='C'>
                            Whether to use the zib library
                        </loctext> </description>
                </prop_pattern>
        </pg_pattern>
    </template>
</service>

</service_bundle>
