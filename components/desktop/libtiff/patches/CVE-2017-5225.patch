pulling in a security fix which can be deleted once a tarball which
contains it is released.

* tools/tiffcp.c: error out cleanly in cpContig2SeparateByRow and

cpSeparate2ContigByRow if BitsPerSample != 8 to avoid heap based overflow.
Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2656 and
http://bugzilla.maptools.org/show_bug.cgi?id=2657

commit 5c080298d59efa53264d7248bbe3a04660db6ef7 erouault 

--- a/tools/tiffcp.c	2017-06-12 14:55:50.042124252 -0700
+++ b/tools/tiffcp.c	2017-06-12 15:08:45.004752256 -0700
@@ -592,7 +592,7 @@
 static int
 tiffcp(TIFF* in, TIFF* out)
 {
-	uint16 bitspersample, samplesperpixel = 1;
+	uint16 bitspersample = 1, samplesperpixel = 1;
 	uint16 input_compression, input_photometric = PHOTOMETRIC_MINISBLACK;
 	copyFunc cf;
 	uint32 width, length;
@@ -1069,6 +1069,17 @@
 	uint32 row;
 	tsample_t s;
 
+ 	uint16 bps = 0;
+
+ 	(void) TIFFGetField(in, TIFFTAG_BITSPERSAMPLE, &bps);
+ 	if( bps != 8 ) {
+ 	    TIFFError(TIFFFileName(in),
+	    "Error, can only handle BitsPerSample=8 in %s",
+	    "cpContig2SeparateByRow");
+	    return 0;
+
+	}
+
 	inbuf = _TIFFmalloc(scanlinesizein);
 	outbuf = _TIFFmalloc(scanlinesizeout);
 	if (!inbuf || !outbuf)
@@ -1121,7 +1132,16 @@
 	register uint32 n;
 	uint32 row;
 	tsample_t s;
+	uint16 bps = 0;
 
+ 	(void) TIFFGetField(in, TIFFTAG_BITSPERSAMPLE, &bps);
+ 	if( bps != 8 ) {
+ 	    TIFFError(TIFFFileName(in),
+ 	    "Error, can only handle BitsPerSample=8 in %s",
+     	    "cpSeparate2ContigByRow");
+ 	    return 0;
+ 	}
+
 	inbuf = _TIFFmalloc(scanlinesizein);
 	outbuf = _TIFFmalloc(scanlinesizeout);
 	if (!inbuf || !outbuf)
@@ -1763,7 +1783,7 @@
 	uint32 w, l, tw, tl;
 	int bychunk;
 
-	(void) TIFFGetField(in, TIFFTAG_PLANARCONFIG, &shortv);
+	(void) TIFFGetFieldDefaulted(in, TIFFTAG_PLANARCONFIG, &shortv);
 	if (shortv != config && bitspersample != 8 && samplesperpixel > 1) {
 		fprintf(stderr,
 		    "%s: Cannot handle different planar configuration w/ bits/sample != 8\n",
