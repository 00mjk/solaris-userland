Restore removed SPARC code and fixup for CMake-based build.

Also patch up Source/cmake/OptionsCommon.cmake and to detect these properly?
This seems like mostly an option for detecting whether or not to enable JIT in
Source/JavaScriptCore/CMakeLists.txt.  Since neither version of SPARC will have
that, probably doesn't matter for now.

https://bugs.webkit.org/show_bug.cgi?id=124941

--- a/Source/WTF/wtf/Platform.h	2018-02-14 10:35:01.420174241 -0800
+++ b/Source/WTF/wtf/Platform.h	2018-02-14 10:36:12.276175097 -0800
@@ -142,6 +142,23 @@
 #define WTF_CPU_SH4 1
 #endif
 
+/* CPU(SPARC32) - SPARC 32-bit */
+#if defined(__sparc) && !defined(__arch64__) || defined(__sparcv8)
+#define WTF_CPU_SPARC32 1
+#define WTF_CPU_BIG_ENDIAN 1
+#endif
+
+/* CPU(SPARC64) - SPARC 64-bit */
+#if defined(__sparc__) && defined(__arch64__) || defined (__sparcv9)
+#define WTF_CPU_SPARC64 1
+#define WTF_CPU_BIG_ENDIAN 1
+#endif
+
+/* CPU(SPARC) - any SPARC, true for CPU(SPARC32) and CPU(SPARC64) */
+#if CPU(SPARC32) || CPU(SPARC64)
+#define WTF_CPU_SPARC 1
+#endif
+
 /* CPU(S390X) - S390 64-bit */
 #if defined(__s390x__)
 #define WTF_CPU_S390X 1
@@ -353,7 +370,7 @@
 
 #endif /* ARM */
 
-#if CPU(ARM) || CPU(MIPS) || CPU(SH4) || CPU(ALPHA) || CPU(HPPA)
+#if CPU(ARM) || CPU(MIPS) || CPU(SH4) || CPU(ALPHA) || CPU(HPPA) || CPU(SPARC)
 #define WTF_CPU_NEEDS_ALIGNED_ACCESS 1
 #endif
 
@@ -710,6 +727,7 @@
     || (CPU(IA64) && !CPU(IA64_32)) \
     || CPU(ALPHA) \
     || CPU(ARM64) \
+    || CPU(SPARC64) \
     || CPU(S390X) \
     || CPU(MIPS64) \
     || CPU(PPC64) \
--- a/Source/WTF/wtf/dtoa/utils.h	2018-02-14 10:37:27.424559683 -0800
+++ b/Source/WTF/wtf/dtoa/utils.h	2018-02-14 10:38:48.566129975 -0800
@@ -49,7 +49,7 @@
 defined(__ARMEL__) || \
 defined(_MIPS_ARCH_MIPS32R2)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
-#elif CPU(MIPS) || CPU(MIPS64) || CPU(PPC) || CPU(PPC64) || CPU(PPC64LE) || CPU(SH4) || CPU(S390) || CPU(S390X) || CPU(IA64) || CPU(ALPHA) || CPU(ARM64) || CPU(HPPA)
+#elif CPU(MIPS) || CPU(MIPS64) || CPU(PPC) || CPU(PPC64) || CPU(PPC64LE) || CPU(SH4) || CPU(S390) || CPU(S390X) || CPU(IA64) || CPU(ALPHA) || CPU(ARM64) || CPU(HPPA) || CPU(SPARC)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
 #elif defined(_M_IX86) || defined(__i386__)
 #if defined(_WIN32)
--- a/Source/JavaScriptCore/CMakeLists.txt	2018-02-14 10:59:11.547303020 -0800
+++ b/Source/JavaScriptCore/CMakeLists.txt	2018-02-14 10:59:31.589515609 -0800
@@ -1533,6 +1533,8 @@
 elseif (WTF_CPU_S390X)
 elseif (WTF_CPU_MIPS)
 elseif (WTF_CPU_SH4)
+elseif (WTF_CPU_SPARC)
+elseif (WTF_CPU_SPARC64)
 elseif (WTF_CPU_X86)
 elseif (WTF_CPU_X86_64)
     if (MSVC AND ENABLE_JIT)
--- a/CMakeLists.txt	2018-02-14 11:02:33.132887067 -0800
+++ b/CMakeLists.txt	2018-02-14 11:05:52.644576425 -0800
@@ -109,6 +109,8 @@
     set(WTF_CPU_S390 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "s390x")
     set(WTF_CPU_S390X 1)
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "sparc*")
+    set(WTF_CPU_SPARC 1)
 else ()
     message(FATAL_ERROR "Unknown CPU '${LOWERCASE_CMAKE_SYSTEM_PROCESSOR}'")
 endif ()
